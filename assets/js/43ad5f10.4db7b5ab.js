"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[83281],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(96540);const d={},l=r.createContext(d);function i(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(l.Provider,{value:n},e.children)}},51166:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Advanced_development/linux_development/hardware_unit_test/ddr_bandwidth","title":"DDR \u5e26\u5bbd\u6d4b\u8bd5","description":"\u6d4b\u8bd5\u539f\u7406","source":"@site/docs_s/07_Advanced_development/02_linux_development/05_hardware_unit_test/08-ddr_bandwidth.md","sourceDirName":"07_Advanced_development/02_linux_development/05_hardware_unit_test","slug":"/Advanced_development/linux_development/hardware_unit_test/ddr_bandwidth","permalink":"/rdk_doc/rdk_s/Advanced_development/linux_development/hardware_unit_test/ddr_bandwidth","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1761474021000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"CPU \u6027\u80fd\u6d4b\u8bd5","permalink":"/rdk_doc/rdk_s/Advanced_development/linux_development/hardware_unit_test/cpu_performance"},"next":{"title":"USB \u603b\u7ebf\u901f\u7387\u6d4b\u8bd5","permalink":"/rdk_doc/rdk_s/Advanced_development/linux_development/hardware_unit_test/usb_performance"}}');var d=s(74848),l=s(28453);const i={sidebar_position:8},c="DDR \u5e26\u5bbd\u6d4b\u8bd5",t={},a=[{value:"\u6d4b\u8bd5\u539f\u7406",id:"\u6d4b\u8bd5\u539f\u7406",level:2},{value:"\u51c6\u5907\u5de5\u4f5c",id:"\u51c6\u5907\u5de5\u4f5c",level:2},{value:"\u6d4b\u8bd5\u65b9\u6cd5",id:"\u6d4b\u8bd5\u65b9\u6cd5",level:2},{value:"\u6d4b\u8bd5\u6307\u6807",id:"\u6d4b\u8bd5\u6307\u6807",level:2},{value:"\u5206\u6570\u6807\u51c6",id:"\u5206\u6570\u6807\u51c6",level:3},{value:"\u6d4b\u8bd5\u7ed3\u679c",id:"\u6d4b\u8bd5\u7ed3\u679c",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"ddr-\u5e26\u5bbd\u6d4b\u8bd5",children:"DDR \u5e26\u5bbd\u6d4b\u8bd5"})}),"\n",(0,d.jsx)(n.h2,{id:"\u6d4b\u8bd5\u539f\u7406",children:"\u6d4b\u8bd5\u539f\u7406"}),"\n",(0,d.jsx)(n.p,{children:"DDR\uff08 Double Data Rate\uff09\u5185\u5b58\u5e26\u5bbd\u662f\u8861\u91cf\u5185\u5b58\u7cfb\u7edf\u6570\u636e\u4f20\u8f93\u80fd\u529b\u7684\u5173\u952e\u6027\u80fd\u6307\u6807\uff0c\u5b83\u53cd\u6620\u4e86\u5185\u5b58\u53ef\u4ee5\u5728\u5355\u4f4d\u65f6\u95f4\u5185\u4f20\u8f93\u7684\u6570\u636e\u91cf\uff0c\u901a\u5e38\u4ee5 MB/s \u6216 GB/s \u4e3a\u5355\u4f4d\uff0c\u901a\u8fc7\u6267\u884c\u7279\u5b9a\u7684\u5185\u5b58\u64cd\u4f5c\u5e76\u6d4b\u91cf\u5176\u6267\u884c\u65f6\u95f4\uff0c\u53ef\u4ee5\u4f30\u7b97\u5185\u5b58\u7684\u5e26\u5bbd\u6027\u80fd\uff0c\u4e3b\u8981\u7684\u6d4b\u8bd5\u64cd\u4f5c\u6709\uff1a Copy\u3001 Scale\u3001 Add\u3001 Triad\u3002"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"1. Copy\uff08\u62f7\u8d1d\uff09\u64cd\u4f5c\uff1a"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-c",children:"for (j=0; j<STREAM_ARRAY_SIZE; j++)\n    c[j] = a[j];\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u8fd9\u4e2a\u64cd\u4f5c\u5c06\u6570\u7ec4 a[] \u7684\u6570\u636e\u590d\u5236\u5230\u6570\u7ec4 c[]\u3002\u5b83\u53ea\u6d89\u53ca\u5185\u5b58\u7684\u8bfb\u53d6\u548c\u5199\u5165\uff0c\u56e0\u6b64\u5b83\u6d4b\u91cf\u7684\u662f\u5355\u7eaf\u7684\u5185\u5b58\u5e26\u5bbd\u3002"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"2. Scale\uff08\u7f29\u653e\uff09\u64cd\u4f5c\uff1a"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-c",children:"for (j=0; j<STREAM_ARRAY_SIZE; j++)\n    b[j] = scalar * c[j];\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u8fd9\u4e2a\u64cd\u4f5c\u5c06\u6570\u7ec4 c[] \u7684\u6bcf\u4e2a\u5143\u7d20\u4e58\u4ee5\u4e00\u4e2a\u5e38\u6570 scalar\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u6570\u7ec4 b[] \u4e2d\u3002\u8fd9\u4e00\u64cd\u4f5c\u901a\u8fc7\u8bfb\u53d6 c[] \u548c\u5199\u5165 b[] \u6765\u6d4b\u91cf\u5e26\u5bbd\u3002"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"3. Add\uff08\u52a0\u6cd5\uff09\u64cd\u4f5c\uff1a"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-c",children:"for (j=0; j<STREAM_ARRAY_SIZE; j++)\n    c[j] = a[j] + b[j];\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u8be5\u64cd\u4f5c\u5c06\u6570\u7ec4 a[] \u548c b[] \u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u52a0\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u6570\u7ec4 c[] \u4e2d\u3002\u8fd9\u662f\u4e00\u79cd\u8bfb\u53d6\u4e24\u4e2a\u6570\u7ec4\u5e76\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u7684\u64cd\u4f5c\u3002"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"4. Triad\uff08\u4e09\u5143\u7ec4\uff09\u64cd\u4f5c\uff1a"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-c",children:"for (j=0; j<STREAM_ARRAY_SIZE; j++)\n    a[j] = b[j] + scalar * c[j];\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u8fd9\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5b83\u5c06\u6570\u7ec4 b[] \u4e2d\u7684\u5143\u7d20\u4e0e\u6570\u7ec4 c[] \u4e2d\u7684\u5143\u7d20\u6309\u7167\u5e38\u6570 scalar \u8fdb\u884c\u4e09\u5143\u7ec4\u52a0\u6cd5\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u6570\u7ec4 a[] \u4e2d\u3002"}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"\u51c6\u5907\u5de5\u4f5c",children:"\u51c6\u5907\u5de5\u4f5c"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"1."})," \u786e\u8ba4 DDR \u7c7b\u578b\u548c\u9891\u7387\uff1a\u4e0d\u540c\u7c7b\u578b\u7684 DDR \u5185\u5b58\uff08\u5982 LPDDR4 \uff09\u548c\u5176\u9891\u7387\u4f1a\u5f71\u54cd\u5e26\u5bbd\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u4f7f\u7528\u547d\u4ee4 ",(0,d.jsx)(n.code,{children:"cat /sys/class/boardinfo/ddr_type"})," \u67e5\u770b DDR \u72b6\u6001\u4fe1\u606f\u3002"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"sunrise@ubuntu:/# cat /sys/class/boardinfo/ddr_type\nLPDDR5\n"})}),"\n",(0,d.jsx)(n.p,{children:"\u76ee\u524d RDKS100 DDR \u9891\u7387\u4e3a 6400MHz\u3002"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"2."})," \u786e\u8ba4\u5728 /app/chip_base_test/08_ddr_bandwidth/ \u8def\u5f84\u4e0b\u5b58\u5728 stream \u6d4b\u8bd5\u6587\u4ef6\uff0c\u5982\u4e0d\u5b58\u5728\uff0c\u53ef\u5728\u8def\u5f84\u4e0b\u91cd\u65b0\u7f16\u8bd1\u751f\u6210\uff1a"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-shell",children:"sunrise@ubuntu:/# cd /app/chip_base_test/08_ddr_bandwidth\nsunrise@ubuntu:/# gcc -O3 -fopenmp -DNTIMES=100 stream.c -lgomp -o stream\n"})}),"\n",(0,d.jsx)(n.h2,{id:"\u6d4b\u8bd5\u65b9\u6cd5",children:"\u6d4b\u8bd5\u65b9\u6cd5"}),"\n",(0,d.jsx)(n.p,{children:"\u786e\u4fdd\u5df2\u5b8c\u6210\u51c6\u5907\u5de5\u4f5c\u540e\uff0c\u8fd0\u884c\u6d4b\u8bd5\u547d\u4ee4\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-shell",children:"sunrise@ubuntu:/# ./stream\n"})}),"\n",(0,d.jsx)(n.p,{children:"\u7b49\u5f85 10 \u79d2\u5de6\u53f3\u540e\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"-------------------------------------------------------------\nSTREAM version $Revision: 5.10 $\n-------------------------------------------------------------\nThis system uses 8 bytes per array element.\n-------------------------------------------------------------\nArray size = 10000000 (elements), Offset = 0 (elements)\nMemory per array = 76.3 MiB (= 0.1 GiB).\nTotal memory required = 228.9 MiB (= 0.2 GiB).\nEach kernel will be executed 100 times.\n The *best* time for each kernel (excluding the first iteration)\n will be used to compute the reported bandwidth.\n-------------------------------------------------------------\nNumber of Threads requested = 6\nNumber of Threads counted = 6\n-------------------------------------------------------------\nYour clock granularity/precision appears to be 1 microseconds.\nEach test below will take on the order of 3674 microseconds.\n   (= 3674 clock ticks)\nIncrease the size of the arrays if this shows that\nyou are not getting at least 20 clock ticks per test.\n-------------------------------------------------------------\nWARNING -- The above is only a rough guideline.\nFor best results, please be sure you know the\nprecision of your system timer.\n-------------------------------------------------------------\n-------------------------------------------------------------\nFunction    Best Rate MB/s  Avg time     Min time     Max time\nCopy:           47239.8     0.003658     0.003387     0.004648\nScale:          48721.4     0.003657     0.003284     0.005366\nAdd:            46592.6     0.006095     0.005151     0.008138\nTriad:          46431.4     0.006107     0.005169     0.008374\n-------------------------------------------------------------\nSolution Validates: avg error less than 1.000000e-13 on all three arrays\n-------------------------------------------------------------\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u5173\u952e\u4fe1\u606f\u8bf4\u660e\uff1a"})}),"\n",(0,d.jsxs)(n.p,{children:["\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u7684 ",(0,d.jsx)(n.code,{children:"Copy"}),"\uff0c",(0,d.jsx)(n.code,{children:"Scale"}),"\uff0c",(0,d.jsx)(n.code,{children:"Add"}),"\uff0c",(0,d.jsx)(n.code,{children:"Triad"})," \u56db\u9879\u5373\u5e26\u5bbd\u7ed3\u679c\uff0c\u8be5\u56db\u9879\u6570\u636e\u7684\u6d4b\u8bd5\u539f\u7406\u5982\u4e0b\u56fe\u6240\u793a\uff1a"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/images_to_upload/DDR_test_principle.png",alt:"DDR_test_principle"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Copy (\u590d\u5236)\uff1a"})," \u5b83\u5148\u8bbf\u95ee\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u8bfb\u51fa\u5176\u4e2d\u7684\u503c\uff0c\u518d\u5c06\u503c\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u3002"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u6d4b\u8bd5\u63cf\u8ff0\uff1a\u5728 Copy \u6d4b\u8bd5\u4e2d\uff0c\u7cfb\u7edf\u5c06\u4e00\u4e2a\u6570\u7ec4\u7684\u5185\u5bb9\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u662f\u5185\u5b58\u5e26\u5bbd\u7684\u6700\u57fa\u672c\u6d4b\u8bd5\uff0c\u4e3b\u8981\u8003\u5bdf\u7684\u662f\u7cfb\u7edf\u5728\u6267\u884c\u5185\u5b58\u5230\u5185\u5b58\u7684\u7b80\u5355\u6570\u636e\u590d\u5236\u65f6\u7684\u6027\u80fd\u3002"}),"\n",(0,d.jsx)(n.li,{children:"\u5e26\u5bbd\u7ed3\u679c\uff1a 47578.1 MB/s"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Scale (\u4e58\u6cd5)\uff1a"})," \u5148\u4ece\u5185\u5b58\u5355\u5143\u8bfb\u51fa\u5176\u4e2d\u7684\u503c\uff0c\u4f5c\u4e00\u4e2a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u3002"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u6d4b\u8bd5\u63cf\u8ff0\uff1a Scale \u4e0d\u4ec5\u6d89\u53ca\u5185\u5b58\u5e26\u5bbd\uff0c\u8fd8\u9700\u8981 CPU \u6267\u884c\u8ba1\u7b97\u4efb\u52a1\uff0c\u56e0\u6b64\u66f4\u80fd\u4f53\u73b0\u5904\u7406\u5668\u548c\u5185\u5b58\u4e4b\u95f4\u7684\u534f\u4f5c\u6027\u80fd\u3002"}),"\n",(0,d.jsx)(n.li,{children:"\u5e26\u5bbd\u7ed3\u679c\uff1a 47904.1 MB/s"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Add (\u52a0\u6cd5)\uff1a"})," \u5148\u4ece\u5185\u5b58\u5355\u5143\u8bfb\u51fa\u4e24\u4e2a\u503c\uff0c\u505a\u52a0\u6cd5\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u3002"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u6d4b\u8bd5\u63cf\u8ff0\uff1a Add \u6d4b\u8bd5\u6a21\u62df\u4e86\u4e24\u4e2a\u6570\u7ec4\u76f8\u52a0\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u7b2c\u4e09\u4e2a\u6570\u7ec4\u4e2d\uff0c\u8fd9\u6d4b\u8bd5\u4e86 CPU \u548c\u5185\u5b58\u5728\u5e76\u884c\u64cd\u4f5c\u65f6\u7684\u5e26\u5bbd\u9700\u6c42\u3002"}),"\n",(0,d.jsx)(n.li,{children:"\u5e26\u5bbd\u7ed3\u679c\uff1a 44642.0 MB/"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Triad (\u7ec4\u5408\u64cd\u4f5c)\uff1a"})," \u5c06 Copy\u3001 Scale\u3001 Add \u4e09\u79cd\u64cd\u4f5c\u7ec4\u5408\u8d77\u6765\u8fdb\u884c\u6d4b\u3002\u5177\u4f53\u64cd\u4f5c\u65b9\u5f0f\u662f\uff1a\u5148\u4ece\u5185\u5b58\u5355\u5143\u4e2d\u8bfb\u4e24\u4e2a\u503c a\u3001 b \uff0c\u5bf9\u5176\u8fdb\u884c\u4e58\u52a0\u6df7\u5408\u8fd0\u7b97\uff08 a + \u56e0\u5b50 * b \uff09 \uff0c\u5c06\u8fd0\u7b97\u7ed3\u679c\u5199\u5165\u5230\u53e6\u4e00\u4e2a\u5185\u5b58\u5355\u5143"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"\u6d4b\u8bd5\u63cf\u8ff0\uff1a Triad \u4e0d\u4ec5\u6d89\u53ca\u4e24\u4e2a\u6570\u7ec4\u76f8\u52a0\uff0c\u8fd8\u5c06\u7ed3\u679c\u4e0e\u53e6\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u7f29\u653e\uff0c\u662f\u4e00\u4e2a\u540c\u65f6\u8fdb\u884c\u8ba1\u7b97\u3001\u52a0\u6cd5\u548c\u5185\u5b58\u8bbf\u95ee\u7684\u590d\u5408\u64cd\u4f5c\u3002"}),"\n",(0,d.jsx)(n.li,{children:"\u5e26\u5bbd\u7ed3\u679c\uff1a 42987.3 MB/s"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6570\u503c\u7684\u542b\u4e49\uff1a"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Best Rate MB/s\uff08\u6700\u4f73\u901f\u7387\uff09\uff1a"})," \u5728\u64cd\u4f5c\u4e2d\u8fbe\u5230\u7684\u6700\u9ad8\u5185\u5b58\u4f20\u8f93\u901f\u7387\uff0c\u4ee5\u5146\u5b57\u8282 / \u79d2\uff08 MB/s\uff09\u4e3a\u5355\u4f4d\u3002\u8868\u793a\u5cf0\u503c\u6027\u80fd\u3002"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Avg time\uff08\u5e73\u5747\u65f6\u95f4\uff09\uff1a"})," \u6bcf\u6b21\u64cd\u4f5c\u7684\u5e73\u5747\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u8868\u793a\u6027\u80fd\u7684\u5e73\u5747\u5ef6\u8fdf\u65f6\u95f4\u3002"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Min time\uff08\u6700\u5c0f\u65f6\u95f4\uff09\uff1a"})," \u64cd\u4f5c\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u8868\u793a\u5728\u67d0\u4e00\u6b21\u64cd\u4f5c\u4e2d\u7684\u6700\u4f73\u6027\u80fd\u3002"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Max time\uff08\u6700\u5927\u65f6\u95f4\uff09\uff1a"})," \u64cd\u4f5c\u7684\u6700\u957f\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u8868\u793a\u67d0\u4e00\u6b21\u590d\u5236\u64cd\u4f5c\u4e2d\u7684\u6700\u5dee\u6027\u80fd\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"\u6d4b\u8bd5\u6307\u6807",children:"\u6d4b\u8bd5\u6307\u6807"}),"\n",(0,d.jsx)(n.p,{children:"DDR \u5e26\u5bbd\u901a\u5e38\u57fa\u4e8e\u5185\u5b58\u7684\u9891\u7387\u548c\u603b\u7ebf\u5bbd\u5ea6\u6765\u8ba1\u7b97\uff0c\u516c\u5f0f\u5982\u4e0b\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-shell",children:"\u5e26\u5bbd\xa0(MB/s) =  \u5185\u5b58\u65f6\u949f\u9891\u7387\xa0(MHz) * 2 * \u603b\u7ebf\u5bbd\u5ea6\xa0(bit) / 8\n"})}),"\n",(0,d.jsx)(n.p,{children:"S100 \u5e73\u53f0\u4e0b\uff0c DDR \u5185\u5b58\u9891\u7387\u4e3a 4266 MHz\uff08 2133x2 \uff09\uff0c\u5185\u5b58\u603b\u7ebf\u5bbd\u5ea6\u4e3a 96 \u4f4d\uff08\u5373 12 \u5b57\u8282\uff09\uff0c\u5219\u7406\u8bba\u5e26\u5bbd\u4e3a\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-shell",children:"\u5e26\u5bbd (MB/s) = 6400 MHz \xd7 12 Byte = 76800 MB/s\n\n"})}),"\n",(0,d.jsx)(n.h3,{id:"\u5206\u6570\u6807\u51c6",children:"\u5206\u6570\u6807\u51c6"}),"\n",(0,d.jsx)(n.p,{children:"\u5b9e\u9645 DDR \u5e26\u5bbd\u7684\u6d4b\u8bd5\u7ed3\u679c\u901a\u5e38\u4f1a\u4f4e\u4e8e\u7406\u8bba\u5e26\u5bbd\uff0c\u5b9e\u9645\u5e26\u5bbd\u7684\u6807\u51c6\u5e94\u4e3a\u7406\u8bba\u5e26\u5bbd\u7684 60%-70%\uff0c\u4ee5 S100 \u5e73\u53f0 \u4e3a\u4f8b\uff0c\u7406\u8bba\u5e26\u5bbd\u4e3a 76800 MB/s\uff0c\u56e0\u6b64\u6807\u51c6\u5e26\u5bbd\u4e3a\uff1a"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-shell",children:"\u5206\u6570\u6807\u51c6 =  ddr_score(76800) * 0.6 = 46080\n"})}),"\n",(0,d.jsx)(n.h3,{id:"\u6d4b\u8bd5\u7ed3\u679c",children:"\u6d4b\u8bd5\u7ed3\u679c"}),"\n",(0,d.jsxs)(n.p,{children:["\u4ee5\u63a5\u8fd1\u5b9e\u9645 DDR \u4f7f\u7528\u65b9\u5f0f\u7684 ",(0,d.jsx)(n.code,{children:"Triad"})," \u64cd\u4f5c\u4e3a\u4f8b\uff0c\u5176\u5206\u6570\u7ed3\u679c\u8d85\u8fc7\u4e86\u6807\u51c6\u5e26\u5bbd 46080 MB/s\uff0c\u56e0\u6b64\u6d4b\u8bd5\u7ed3\u679c\u7b26\u5408 DDR \u5e26\u5bbd\u6807\u51c6\u4e14\u8fbe\u5230\u9884\u671f\u7684\u6027\u80fd\u8981\u6c42\u3002"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}}}]);
"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[5126],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var t=i(96540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},66447:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"Advanced_development/mcu_development/S100/mcu_spi","title":"SPI\u4f7f\u7528\u6307\u5357","description":"\u786c\u4ef6\u652f\u6301","source":"@site/docs_s/07_Advanced_development/05_mcu_development/01_S100/06_mcu_spi.md","sourceDirName":"07_Advanced_development/05_mcu_development/01_S100","slug":"/Advanced_development/mcu_development/S100/mcu_spi","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_spi","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751886176000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"PWM\u4f7f\u7528\u6307\u5357","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_pwm"},"next":{"title":"ADC\u4f7f\u7528\u6307\u5357","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_adc"}}');var s=i(74848),r=i(28453);const a={sidebar_position:6},l="SPI\u4f7f\u7528\u6307\u5357",c={},p=[{value:"\u786c\u4ef6\u652f\u6301",id:"\u786c\u4ef6\u652f\u6301",level:2},{value:"\u4ee3\u7801\u8def\u5f84",id:"\u4ee3\u7801\u8def\u5f84",level:2},{value:"\u5e94\u7528sample",id:"\u5e94\u7528sample",level:2},{value:"\u914d\u7f6e\u8bf4\u660e",id:"\u914d\u7f6e\u8bf4\u660e",level:3},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",level:3},{value:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",id:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",level:3},{value:"void Spi_Init(const Spi_ConfigType* ConfigPtr)",id:"void-spi_initconst-spi_configtype-configptr",level:4},{value:"Std_ReturnType Spi_WriteIB(Spi_ChannelType Channel, const Spi_DataBufferType* DataBufferPtr)",id:"std_returntype-spi_writeibspi_channeltype-channel-const-spi_databuffertype-databufferptr",level:4},{value:"Std_ReturnType Spi_AsyncTransmit(Spi_SequenceType Sequence)",id:"std_returntype-spi_asynctransmitspi_sequencetype-sequence",level:4},{value:"Std_ReturnType Spi_ReadIB(Spi_ChannelType Channel, Spi_DataBufferType* DataBufferPtr)",id:"std_returntype-spi_readibspi_channeltype-channel-spi_databuffertype-databufferptr",level:4},{value:"Std_ReturnType Spi_SetupEB(Spi_ChannelType Channel, const Spi_DataBufferType* SrcDataBufferPtr, Spi_DataBufferType* DesDataBufferPtr, Spi_NumberOfDataType Length)",id:"std_returntype-spi_setupebspi_channeltype-channel-const-spi_databuffertype-srcdatabufferptr-spi_databuffertype-desdatabufferptr-spi_numberofdatatype-length",level:4},{value:"Spi_StatusType Spi_GetStatus(const Spi_ConfigType* ConfigPtr)",id:"spi_statustype-spi_getstatusconst-spi_configtype-configptr",level:4},{value:"Spi_JobResultType Spi_GetJobResult(Spi_JobType Job)",id:"spi_jobresulttype-spi_getjobresultspi_jobtype-job",level:4},{value:"Spi_SeqResultType Spi_GetSequenceResult(Spi_SequenceType Sequence)",id:"spi_seqresulttype-spi_getsequenceresultspi_sequencetype-sequence",level:4},{value:"void Spi_GetVersionInfo(Std_VersionInfoType* versioninfo)",id:"void-spi_getversioninfostd_versioninfotype-versioninfo",level:4},{value:"Std_ReturnType Spi_SyncTransmit(Spi_SequenceType Sequence)",id:"std_returntype-spi_synctransmitspi_sequencetype-sequence",level:4},{value:"Spi_StatusType Spi_GetHWUnitStatus(Spi_HWUnitType HWUnit)",id:"spi_statustype-spi_gethwunitstatusspi_hwunittype-hwunit",level:4},{value:"void Spi_Cancel(Spi_SequenceType Sequence)",id:"void-spi_cancelspi_sequencetype-sequence",level:4},{value:"Std_ReturnType Spi_SetAsyncMode(Spi_AsyncModeType Mode)",id:"std_returntype-spi_setasyncmodespi_asyncmodetype-mode",level:4},{value:"void Spi_MainFunction_Handling(void)",id:"void-spi_mainfunction_handlingvoid",level:4}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"spi\u4f7f\u7528\u6307\u5357",children:"SPI\u4f7f\u7528\u6307\u5357"})}),"\n",(0,s.jsx)(n.h2,{id:"\u786c\u4ef6\u652f\u6301",children:"\u786c\u4ef6\u652f\u6301"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5982\u679cSPI\u4f7f\u7528DMA\u4f20\u8f93\uff0c\u5fc5\u987b\u4fdd\u8bc1\u4ee5\u4e0b\u9650\u5236:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4f20\u8f93\u957f\u5ea6\u9700\u8981\u4fdd\u8bc18\u5b57\u8282\u5bf9\u9f50\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u6570\u636e\u8d8a\u754c\u7684\u95ee\u9898;"}),"\n",(0,s.jsx)(n.li,{children:"\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u7684buffer\u5730\u5740\u5fc5\u987b\u5bf9\u9f50\u4e3a64\u5b57\u8282;"}),"\n",(0,s.jsx)(n.li,{children:"Channel\u5355\u6b21\u4f20\u8f93\u6570\u636e\u91cf\u4e0d\u80fd\u8d85\u8fc74096\u5b57\u8282\uff1b"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"\u652f\u6301SPI\u4f5c\u4e3aSlave\u529f\u80fd;"}),"\n",(0,s.jsx)(n.li,{children:"Mcu\u4fa7SPI\u505aSlave\u65f6\uff0c\u901f\u7387\u5927\u4e8e9M\uff0c\u53ea\u80fd\u91c7\u7528DMA\u6a21\u5f0f;"}),"\n",(0,s.jsxs)(n.li,{children:["Mcu\u4fa7SPI\u57288\u4f4d\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u65f6\uff0c\u5177\u6709\u4ee5\u4e0b\u9650\u5236:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"1\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 50M;"}),"\n",(0,s.jsx)(n.li,{children:"2\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 33.3M;"}),"\n",(0,s.jsx)(n.li,{children:"3\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 25M;"}),"\n",(0,s.jsx)(n.li,{children:"4\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 20M;"}),"\n",(0,s.jsx)(n.li,{children:"5\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 15.6M;"}),"\n",(0,s.jsx)(n.li,{children:"6\u4e2aSPI\u5e76\u884c\u6536\u53d1\u6700\u5927\u901f\u5ea6: 12.5M;"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"SPI\u5916\u8bbe\u53ea\u652f\u6301MSB;"}),"\n",(0,s.jsx)(n.li,{children:"SPI SpiCsPolarity\u548cspitimeclk2c\u90fd\u4e0d\u652f\u6301\u914d\u7f6e\uff0cSpiCsPolarity\u9ed8\u8ba4\u4e3a\u4f4e\u7535\u5e73\u6709\u6548\u3002"}),"\n",(0,s.jsx)(n.li,{children:"SPI SpiCsToggleEnable\u914d\u7f6e\u4f7f\u80fd\u540e\uff0cSpi\u4f20\u8f93\u5b8c\u4e00\u4e2aframe\u540e\uff0c\u4f1a\u62c9\u9ad8CS\u5f15\u811a\uff0c\u4ec5\u652f\u6301TRAILING\u6a21\u5f0f\uff0cLEADING\u6a21\u5f0f\u4e0d\u652f\u6301\u3002"}),"\n",(0,s.jsx)(n.li,{children:"SPI DMA\u6a21\u5f0f\u76f8\u5bf9\u4e8e\u975eDMA\u6a21\u5f0f\uff0c\u6d88\u8017CPU\u8d1f\u8f7d\u66f4\u4f4e\u3002"}),"\n",(0,s.jsx)(n.li,{children:"\u5f53SPI\u91c7\u7528\u975eDMA\u65b9\u5f0f\u53d1\u9001\u6570\u636e\u65f6\uff0c\u82e5\u7cfb\u7edf\u8d1f\u8f7d\u6bd4\u8f83\u5927\uff0c\u4f1a\u56e0\u4e3aSPI\u4e2d\u65ad\u54cd\u5e94\u4e0d\u53ca\u65f6\u5bfc\u81f4SPI FIFO\u672a\u80fd\u53ca\u65f6\u5199\u5165\uff0c\u4ece\u800c\u5bfc\u81f4CS\u5f15\u811a\u77ed\u6682\u62c9\u9ad8\uff0c\u6b64\u65f6\u63a8\u8350\u91c7\u7528DMA\u6a21\u5f0f\u3002"}),"\n",(0,s.jsx)(n.li,{children:"\u5982\u679c\u4f7f\u7528\u573a\u666f\u662f\u591a\u4e2aSequence\u4f7f\u7528\u540c\u4e00\u4e2aSPI IP\u8fdb\u884c\u5f02\u6b65\u4f20\u8f93\uff0c\u4e14Sequence\u4e4b\u95f4\u5e76\u6ca1\u6709\u4f20\u8f93\u5b8c\u6210\u5148\u540e\u987a\u5e8f\uff0c\u5219\u4f1a\u5b58\u5728Sequence\u4f20\u8f93\u6392\u961f\u7684\u73b0\u8c61\uff0c\u6b64\u65f6\u9700\u8981\u5728SchM_Spi.c\u6587\u4ef6\u4e2d\u5b9e\u73b0\u5173\u4e2d\u65ad\u4e34\u754c\u533a\u4fdd\u62a4\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u4ee3\u7801\u8def\u5f84",children:"\u4ee3\u7801\u8def\u5f84"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"McalCdd/Spi/inc/Spi.h - SPI\u9a71\u52a8\u7a0b\u5e8f\u7684\u5934\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"McalCdd/Spi/inc/Spi_Lld.h - SPI\u5e95\u5c42\u9a71\u52a8\u7a0b\u5e8f\u7684\u5934\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"McalCdd/Spi/src/Spi.c - SPI\u9a71\u52a8\u7a0b\u5e8f\u7684\u6e90\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"McalCdd/Spi/src/Spi_Lld.c - SPI\u5e95\u5c42\u9a71\u52a8\u7a0b\u5e8f\u7684\u6e90\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"McalCdd/Common/Register/inc/Spi_Register.h - SPI\u5bc4\u5b58\u5668\u5b9a\u4e49\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"Platform/Schm/SchM_Spi.h - SPI\u6a21\u5757\u7684\u8c03\u5ea6\u7ba1\u7406\u5934\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Spi/inc/Spi_Cfg.h - SPI\u914d\u7f6e\u5934\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Spi/inc/Spi_PBcfg.h - SPI PB\u914d\u7f6e\u5934\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Spi/src/Spi_PBcfg.c - SPI PB\u914d\u7f6e\u6e90\u6587\u4ef6"}),"\n",(0,s.jsx)(n.li,{children:"samples/Spi/SPI_sample/Spi_sample.c - SPI sample \u4ee3\u7801"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u5e94\u7528sample",children:"\u5e94\u7528sample"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sample\u4e2d\u4f7f\u7528\u4e86DMA\uff0c\u4f46\u662f\u6ca1\u6709\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u662f\u56e0\u4e3a\u5728Target/Target-hobot-lite-freertos-mcu1/target/HorizonTask.c\u6587\u4ef6\u4e2d\u5df2\u7ecf\u8fdb\u884c\u4e86\u521d\u59cb\u5316\u3002"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"S100 \u6709SPI2-SPI7\u516d\u4e2aSPI\u786c\u4ef6\uff0cSPI\u901a\u9053\u548c\u5916\u90e8\u8bbe\u5907\u4ee5\u53ca\u7269\u7406\u5355\u5143\u62bd\u8c61\u5173\u952e\u4fe1\u606f\u5bf9\u5e94\u5982\u4e0b:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"SPI\u901a\u9053"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"External device"})}),(0,s.jsx)(n.th,{children:(0,s.jsx)(n.strong,{children:"Spi Physical Unit"})})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI2"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_0"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI3"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_1"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI4"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_2"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI5"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_3"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_3"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI6"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_4"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_4"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SPI7"}),(0,s.jsx)(n.td,{children:"SPI_SpiExternalDevice_5"}),(0,s.jsx)(n.td,{children:"Spi_PhyConfig_SpiPhyUnit_5"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u914d\u7f6e\u8bf4\u660e",children:"\u914d\u7f6e\u8bf4\u660e"}),"\n",(0,s.jsx)(n.p,{children:"\u4ee5SPI4\u4e3a\u4f8b,\u914d\u7f6e\u5982\u4e0b\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"//Config/McalCdd/gen_s100_sip_B_mcu1/Spi/src/Spi_PBcfg.c\nstatic const Spi_PhyCfgType Spi_PhyConfig_SpiPhyUnit_2 =\n{\n    (uint8)2U, /* Instance */\n    SPI_SPURIOUS_CORE_ID, /* SpiCoreUse */\n    /* Spi Slave mode*/\n    (boolean)FALSE,  //FALSE\u4e3amaster\u6a21\u5f0f\uff0ctrue\u4e3aslave\u6a21\u5f0f\n    /* Spi Test Mode Operation Enable*/\n    (boolean)FALSE, // \u56de\u73af\u6a21\u5f0f\uff0c\u4e0d\u8d70\u7ebf\n    /* Spi Sample Point*/\n    (uint32)0U,\n#if (SPI_DMA_ENABLE == STD_ON)\n    (boolean)FALSE, //DMA\u914d\u7f6e\n#endif\n    SPI_IP_POLLING, /* Transfer mode \u53ef\u9009\u4e2d\u65ad\u6a21\u5f0f\u548c\u8f6e\u8be2\u6a21\u5f0f*/\n    (uint8)2U, /* State structure element from the array */\n    //SPI_PHYUNIT_SYNC /* IsSync */\n    SPI_PHYUNIT_ASYNC //\u540c\u6b65\u6a21\u5f0f\u6216\u5f02\u6b65\u6a21\u5f0f\n};\n\nstatic const Spi_ChannelCfg SpiChannel_2 =\n{\n    /* SpiChannel_2*/\n    EB, /* BufferType IB or EB */ //\u4f7f\u7528\u5916\u90e8\u5185\u5b58\u6216\u8005\u5185\u90e8\u5185\u5b58\n    8U, /* Frame size */\n    (uint32)1U, /* In the case SpiDefaultData is disabled. Set this value is 1U */\n    Spi_TxDefaultBufferSpiChannel_2,\n    Spi_RxDefaultBufferSpiChannel_2,\n    256U, /* Length (configured in SpiEbMaxLength) */\n    &Spi_BufferSpiChannel_2,\n    SPI_SPURIOUS_CORE_ID,\n    &Spi_ChannelState[2U] /* Spi_ChannelState pointer */\n};\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u4f7f\u7528\u793a\u4f8b",children:"\u4f7f\u7528\u793a\u4f8b"}),"\n",(0,s.jsx)(n.p,{children:"spi_test \u547d\u4ee4\u7528\u4e8e\u6d4b\u8bd5SPI\uff08Serial Peripheral Interface\uff0c\u4e32\u884c\u5916\u8bbe\u63a5\u53e3\uff09\u529f\u80fd\u3002\u8be5\u547d\u4ee4\u652f\u6301\u521d\u59cb\u5316\u548c\u53c2\u6570\u8bbe\u7f6e\u3001\u83b7\u53d6\u53c2\u6570\u4ee5\u53ca\u6267\u884cSPI\u6d4b\u8bd5\u3002"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"spitest \u547d\u4ee4\u652f\u6301\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\u6a21\u5f0f\uff0c\u901a\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0\uff1a\u521d\u59cb\u5316\u548c\u53c2\u6570\u8bbe\u7f6e"}),"\n",(0,s.jsx)(n.li,{children:"1\uff1a\u83b7\u53d6\u53c2\u6570"}),"\n",(0,s.jsx)(n.li,{children:"2\uff1a\u6267\u884cSPI\u6d4b\u8bd5"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u53c2\u6570\u89e3\u6790"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u64cd\u4f5c\u6a21\u5f0f (argv[1]): \u6307\u5b9a\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u53d6\u503c\u8303\u56f4\u4e3a0\u30011\u62162\u3002"}),"\n",(0,s.jsx)(n.li,{children:"\u8bbe\u5907ID (argv[2]): \u6307\u5b9aSPI\u8bbe\u5907\u7684ID\uff0c\u4e0e\u4f7f\u7528\u54ea\u4e00\u4e2aSPI\u76f8\u5173\uff0c\u5bf9\u5e94\u60c5\u51b5\u53ef\u53c2\u8003\u672c\u6587\u9996\u8282\u4e2dSPI\u5173\u952e\u4fe1\u606f\u5bf9\u5e94\u8868\u3002"}),"\n",(0,s.jsx)(n.li,{children:"\u901a\u9053\u53f7 (argv[3]): \u6307\u5b9aSPI\u901a\u9053\u53f7\uff0c\u5bf9\u5e94\u4e0a\u6587\u7684Spi_ChannelCfg\u914d\u7f6e\uff0c\u901a\u5e38\u53ea\u5728\u5207\u6362\u5185\u90e8\u5185\u5b58\u548c\u5916\u90e8\u5185\u5b58\u65f6\u9700\u8981\u66f4\u6539\u3002"}),"\n",(0,s.jsxs)(n.li,{children:["\u540c\u6b65\u6a21\u5f0f (argv[4]): \u4ec5\u5728\u64cd\u4f5c\u6a21\u5f0f\u4e3a0\u65f6\u4f7f\u7528\uff0c\u6307\u5b9aSPI\u901a\u4fe1\u7684\u540c\u6b65\u6a21\u5f0f\u3002","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0: \u5f02\u6b65\u6a21\u5f0f"}),"\n",(0,s.jsx)(n.li,{children:"1: \u540c\u6b65\u6a21\u5f0f"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u4f20\u8f93\u6a21\u5f0f (argv[5]): \u4ec5\u5728\u64cd\u4f5c\u6a21\u5f0f\u4e3a0\u65f6\u4f7f\u7528\uff0c\u6307\u5b9aSPI\u6570\u636e\u7684\u4f20\u8f93\u6a21\u5f0f\u3002","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"0: \u8f6e\u8be2\u6a21\u5f0f (Polling)"}),"\n",(0,s.jsx)(n.li,{children:"1: \u4e2d\u65ad\u6a21\u5f0f (Interrupt)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"\u5e94\u7528\u5c42\u914d\u7f6e\u4e0e\u5e95\u5c42\u914d\u7f6e\u5e94\u4fdd\u6301\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u9519\u8bef\u3002"})}),"\n",(0,s.jsx)(n.p,{children:"\u5c06SPI4\u7684MISO\u548cMOSI\u77ed\u63a5\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"D-Robotics:/$ spi_test 2\n[0433.628723 0]set interrupt\n[0433.628914 0]interrupt,2\n[0433.639657 0]interrupt,2\n[0433.649684 0]\nRxChBuf0 (256 bytes):\n0CC20DC0: 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 00  | 123456789:;<=>?.\n0CC20DD0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20DE0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20DF0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20E90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20EA0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CC20EB0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n[0433.679963 0]\nTxChBuf0 (256 bytes):\n0CBC3040: 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F 00  | 123456789:;<=>?.\n0CBC3050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC30F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n0CBC3130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  | ................\n[0433.700110 0]=====SPI ASYNC TEST SUCCESS=====\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",children:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3"}),"\n",(0,s.jsx)(n.h4,{id:"void-spi_initconst-spi_configtype-configptr",children:"void Spi_Init(const Spi_ConfigType* ConfigPtr)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService for SPI initialization.\n\nParameters(in)\n    ConfigPtr: Pointer to configuration set\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_writeibspi_channeltype-channel-const-spi_databuffertype-databufferptr",children:"Std_ReturnType Spi_WriteIB(Spi_ChannelType Channel, const Spi_DataBufferType* DataBufferPtr)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService for SPI de-initialization.\n\nParameters(in)\n    Channel: Channel ID.\n    DataBufferPtr: Source data buffer pointer\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aStd_ReturnType\n\tE_OK: Spi write IB buffer success.\n    E_NOT_OK: Spi write IB buffer failed.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_asynctransmitspi_sequencetype-sequence",children:"Std_ReturnType Spi_AsyncTransmit(Spi_SequenceType Sequence)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService to transmit data on the SPI bus.\n\nSync/Async:Asynchronous\nParameters(in)\n    Sequence: Sequence ID.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aStd_ReturnType\n\tE_OK: set success\n    E_NOT_OK: set failed\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_readibspi_channeltype-channel-spi_databuffertype-databufferptr",children:"Std_ReturnType Spi_ReadIB(Spi_ChannelType Channel, Spi_DataBufferType* DataBufferPtr)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService for reading synchronously one or more data from an IB SPI\n             Handler/Driver Channel specified by parameter.\n\nSync/Async:Synchronous\nParameters(in)\n    Channel: Channel ID.\nParameters(inout)\n    None\nParameters(out)\n    DataBufferPtr: Pointer to destination data buffer in RAM\nReturn value\uff1aStd_ReturnType\n\tE_OK: set success\n    E_NOT_OK: set failed\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_setupebspi_channeltype-channel-const-spi_databuffertype-srcdatabufferptr-spi_databuffertype-desdatabufferptr-spi_numberofdatatype-length",children:"Std_ReturnType Spi_SetupEB(Spi_ChannelType Channel, const Spi_DataBufferType* SrcDataBufferPtr, Spi_DataBufferType* DesDataBufferPtr, Spi_NumberOfDataType Length)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService to setup the buffers and the length of data for the EB SPI\n             Handler/Driver Channel specified.\n\nSync/Async:Synchronous\nParameters(in)\n    Channel: Channel ID.\n    SrcDataBufferPtr: Pointer to the memory location that will hold the transmitted data\n    Length: Length (number of data elements) of the data to be transmitted\nParameters(inout)\n    None\nParameters(out)\n    DesDataBufferPtr: Pointer to the memory location that will hold the received data\nReturn value\uff1aStd_ReturnType\n\tE_OK: Spi Setup EB buffer success.\n    E_NOT_OK: Spi Setup EB buffer failed.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"spi_statustype-spi_getstatusconst-spi_configtype-configptr",children:"Spi_StatusType Spi_GetStatus(const Spi_ConfigType* ConfigPtr)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService returns the SPI Handler/Driver software module status.\n\nSync/Async:Synchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aSpi_StatusType\n    Spi_StatusType\n"})}),"\n",(0,s.jsx)(n.h4,{id:"spi_jobresulttype-spi_getjobresultspi_jobtype-job",children:"Spi_JobResultType Spi_GetJobResult(Spi_JobType Job)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis service returns the last transmission result of the specified Job.\n\nSync/Async:Synchronous\nParameters(in)\n    Job: Job ID. An invalid job ID will return an undefined result.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aSpi_JobResultType\n    Spi_JobResultType\n"})}),"\n",(0,s.jsx)(n.h4,{id:"spi_seqresulttype-spi_getsequenceresultspi_sequencetype-sequence",children:"Spi_SeqResultType Spi_GetSequenceResult(Spi_SequenceType Sequence)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis service returns the last transmission result of the specified Sequence.\n\nSync/Async:Synchronous\nParameters(in)\n    Sequence: Sequence ID. An invalid sequence ID will return an undefined result.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aSpi_JobResultType\n    Spi_JobResultType\n"})}),"\n",(0,s.jsx)(n.h4,{id:"void-spi_getversioninfostd_versioninfotype-versioninfo",children:"void Spi_GetVersionInfo(Std_VersionInfoType* versioninfo)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis service returns the version information of this module.\n\nSync/Async:Synchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    versioninfo: Pointer to where to store the version information of this module.\nReturn value\uff1aNone\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_synctransmitspi_sequencetype-sequence",children:"Std_ReturnType Spi_SyncTransmit(Spi_SequenceType Sequence)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService to transmit data on the SPI bus.\n\nSync/Async:Synchronous\nParameters(in)\n    Sequence: Sequence ID.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aStd_ReturnType\n\tE_OK: Transmission command has been accepted\n    E_NOT_OK: Transmission command has not been accepted\n"})}),"\n",(0,s.jsx)(n.h4,{id:"spi_statustype-spi_gethwunitstatusspi_hwunittype-hwunit",children:"Spi_StatusType Spi_GetHWUnitStatus(Spi_HWUnitType HWUnit)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis service returns the status of the specified SPI Hardware\n             microcontroller peripheral.\n\nSync/Async:Synchronous\nParameters(in)\n    HWUnit: SPI Hardware microcontroller peripheral (unit) ID.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aSpi_StatusType\n\tSpi_StatusType\n"})}),"\n",(0,s.jsx)(n.h4,{id:"void-spi_cancelspi_sequencetype-sequence",children:"void Spi_Cancel(Spi_SequenceType Sequence)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService cancels the specified on-going sequence transmission.\n\nSync/Async:Synchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,s.jsx)(n.h4,{id:"std_returntype-spi_setasyncmodespi_asyncmodetype-mode",children:"Std_ReturnType Spi_SetAsyncMode(Spi_AsyncModeType Mode)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aService to set the asynchronous mechanism mode for SPI\n             busses handled asyn-chronously.\n\nSync/Async:Synchronous\nParameters(in)\n    Mode: New mode required.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1a    Std_ReturnType:\n    E_OK: Setting command has been accepted\n    E_NOT_OK: Setting command has not been accepted\n"})}),"\n",(0,s.jsx)(n.h4,{id:"void-spi_mainfunction_handlingvoid",children:"void Spi_MainFunction_Handling(void)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis function shall polls the SPI interrupts linked to HW Units\n             allocated to the transmission of SPI sequences to enable the evolution\n             of transmission state machine.\n\nSync/Async:Synchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
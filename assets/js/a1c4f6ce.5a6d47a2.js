"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[89408],{5371:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});const l=JSON.parse('{"id":"Advanced_development/toolchain_development/expert/advanced_content","title":"\u6df1\u5165\u63a2\u7d22","description":"FX Quantization \u539f\u7406\u4ecb\u7ecd","source":"@site/docs/07_Advanced_development/04_toolchain_development/expert/advanced_content.md","sourceDirName":"07_Advanced_development/04_toolchain_development/expert","slug":"/Advanced_development/toolchain_development/expert/advanced_content","permalink":"/rdk_doc/Advanced_development/toolchain_development/expert/advanced_content","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751448244000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"\u5f00\u53d1\u6307\u5357","permalink":"/rdk_doc/Advanced_development/toolchain_development/expert/user_guide"},"next":{"title":"API\u624b\u518c","permalink":"/rdk_doc/Advanced_development/toolchain_development/expert/api_reference"}}');var d=a(74848),o=a(28453);const r={sidebar_position:4},t="\u6df1\u5165\u63a2\u7d22",i={},s=[{value:"FX Quantization \u539f\u7406\u4ecb\u7ecd",id:"fx-quantization-\u539f\u7406\u4ecb\u7ecd",level:2},{value:"\u91cf\u5316\u6d41\u7a0b",id:"\u91cf\u5316\u6d41\u7a0b",level:3},{value:"Fuse\uff08\u53ef\u9009\uff09",id:"fuse\u53ef\u9009",level:4},{value:"Prepare",id:"prepare",level:4},{value:"Convert",id:"convert",level:4},{value:"Eager Mode \u517c\u5bb9\u6027",id:"eager-mode-\u517c\u5bb9\u6027",level:4},{value:"RGB888 \u6570\u636e\u90e8\u7f72",id:"rgb888-\u6570\u636e\u90e8\u7f72",level:2},{value:"\u573a\u666f",id:"\u573a\u666f",level:3},{value:"YUV \u683c\u5f0f\u7b80\u4ecb",id:"yuv-\u683c\u5f0f\u7b80\u4ecb",level:3},{value:"\u5728\u8bad\u7ec3\u65f6\u5bf9 RGB \u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406",id:"\u5728\u8bad\u7ec3\u65f6\u5bf9-rgb-\u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406",level:3},{value:"\u5728\u63a8\u7406\u65f6\u5bf9 YUV \u8f93\u5165\u8fdb\u884c\u5b9e\u65f6\u8f6c\u6362",id:"\u5728\u63a8\u7406\u65f6\u5bf9-yuv-\u8f93\u5165\u8fdb\u884c\u5b9e\u65f6\u8f6c\u6362",level:3},{value:"\u7b97\u5b50\u5b9a\u4e49",id:"\u7b97\u5b50\u5b9a\u4e49",level:4},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:4},{value:"\u6a21\u578b\u5206\u6bb5\u90e8\u7f72",id:"\u6a21\u578b\u5206\u6bb5\u90e8\u7f72",level:2},{value:"\u573a\u666f",id:"\u573a\u666f-1",level:3},{value:"\u65b9\u6cd5",id:"\u65b9\u6cd5",level:3},{value:"\u7b97\u5b50\u878d\u5408",id:"op_fusion",level:2},{value:"\u5438\u6536 BN",id:"\u5438\u6536-bn",level:3},{value:"\u878d\u5408 Add\u3001ReLU(6)",id:"\u878d\u5408-addrelu6",level:3},{value:"\u5b9e\u73b0\u539f\u7406",id:"\u5b9e\u73b0\u539f\u7406",level:3},{value:"\u53ef\u4ee5\u878d\u5408\u7684\u7b97\u5b50",id:"\u53ef\u4ee5\u878d\u5408\u7684\u7b97\u5b50",level:3},{value:"Adaround\uff08\u5b9e\u9a8c\u6027\u529f\u80fd\uff09",id:"adaround\u5b9e\u9a8c\u6027\u529f\u80fd",level:2},{value:"\u57fa\u672c\u539f\u7406",id:"\u57fa\u672c\u539f\u7406",level:3},{value:"\u63a5\u53e3\u5b9a\u4e49",id:"\u63a5\u53e3\u5b9a\u4e49",level:3},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-1",level:3},{value:"list/tuple\uff08\u63a8\u8350\uff09",id:"listtuple\u63a8\u8350",level:4},{value:"torch.utils.data.DataLoader",id:"torchutilsdatadataloader",level:4},{value:"\u81ea\u52a8\u6821\u51c6\uff08\u5b9e\u9a8c\u6027\u529f\u80fd\uff09",id:"\u81ea\u52a8\u6821\u51c6\u5b9e\u9a8c\u6027\u529f\u80fd",level:2},{value:"\u57fa\u672c\u539f\u7406",id:"\u57fa\u672c\u539f\u7406-1",level:3},{value:"\u63a5\u53e3\u5b9a\u4e49",id:"\u63a5\u53e3\u5b9a\u4e49-1",level:3},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5-2",level:3},{value:"list/tuple\uff08\u63a8\u8350\uff09",id:"listtuple\u63a8\u8350-1",level:4},{value:"torch.utils.data.DataLoader",id:"torchutilsdatadataloader-1",level:4}];function c(n){const e={a:"a",admonition:"admonition",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.header,{children:(0,d.jsx)(e.h1,{id:"\u6df1\u5165\u63a2\u7d22",children:"\u6df1\u5165\u63a2\u7d22"})}),"\n",(0,d.jsx)(e.h2,{id:"fx-quantization-\u539f\u7406\u4ecb\u7ecd",children:"FX Quantization \u539f\u7406\u4ecb\u7ecd"}),"\n",(0,d.jsxs)(e.p,{children:["\u9605\u8bfb\u6b64\u6587\u6863\u524d\uff0c\u5efa\u8bae\u5148\u9605\u8bfb ",(0,d.jsx)(e.a,{href:"https://pytorch.org/docs/stable/fx.html",children:"torch.fx \u2014 PyTorch documentation"}),"\uff0c\u4ee5\u5bf9 torch \u7684 FX \u673a\u5236\u6709\u521d\u6b65\u7684\u4e86\u89e3\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:["FX \u91c7\u7528\u7b26\u53f7\u6267\u884c\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728 ",(0,d.jsx)(e.code,{children:"nn.Module"})," \u6216 function \u7684\u5c42\u9762\u5bf9\u6a21\u578b\u5efa\u56fe\uff0c\u4ece\u800c\u5b9e\u73b0\u81ea\u52a8\u5316\u7684 fuse \u4ee5\u53ca\u5176\u4ed6\u57fa\u4e8e\u56fe\u7684\u4f18\u5316\u3002"]}),"\n",(0,d.jsx)(e.h3,{id:"\u91cf\u5316\u6d41\u7a0b",children:"\u91cf\u5316\u6d41\u7a0b"}),"\n",(0,d.jsx)(e.h4,{id:"fuse\u53ef\u9009",children:"Fuse\uff08\u53ef\u9009\uff09"}),"\n",(0,d.jsx)(e.p,{children:"FX \u53ef\u4ee5\u611f\u77e5\u8ba1\u7b97\u56fe\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u5316\u7684\u7b97\u5b50\u878d\u5408\uff0c\u7528\u6237\u4e0d\u518d\u9700\u8981\u624b\u52a8\u6307\u5b9a\u9700\u8981\u878d\u5408\u7684\u7b97\u5b50\uff0c\u76f4\u63a5\u8c03\u7528\u63a5\u53e3\u5373\u53ef\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"fused_model = horizon.quantization.fuse_fx(model)\n"})}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\u6ce8\u610f ",(0,d.jsx)(e.code,{children:"fuse_fx"})," \u6ca1\u6709 ",(0,d.jsx)(e.code,{children:"inplace"})," \u53c2\u6570\uff0c\u56e0\u4e3a\u5185\u90e8\u9700\u8981\u5bf9\u6a21\u578b\u505a symbolic trace \u751f\u6210\u4e00\u4e2a ",(0,d.jsx)(e.code,{children:"GraphModule"}),"\uff0c\u6240\u4ee5\u65e0\u6cd5\u505a\u5230 inplace \u7684\u4fee\u6539"]}),"\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.code,{children:"fused_model"})," \u548c ",(0,d.jsx)(e.code,{children:"model"})," \u4f1a\u5171\u4eab\u51e0\u4e4e\u6240\u6709\u5c5e\u6027\uff08\u5305\u62ec\u5b50\u6a21\u5757\u3001\u7b97\u5b50\u7b49\uff09\uff0c\u56e0\u6b64\u5728 fuse \u4e4b\u540e\u8bf7\u4e0d\u8981\u5bf9 ",(0,d.jsx)(e.code,{children:"model"})," \u505a\u4efb\u4f55\u4fee\u6539\uff0c\u5426\u5219\u53ef\u80fd\u5f71\u54cd\u5230 ",(0,d.jsx)(e.code,{children:"fused_model"})]}),"\n",(0,d.jsxs)(e.li,{children:["\u7528\u6237\u4e0d\u5fc5\u663e\u5f0f\u8c03\u7528 ",(0,d.jsx)(e.code,{children:"fuse_fx"})," \u63a5\u53e3\uff0c\u56e0\u4e3a\u540e\u7eed\u7684 ",(0,d.jsx)(e.code,{children:"prepare_qat_fx"})," \u63a5\u53e3\u5185\u90e8\u96c6\u6210\u4e86 fuse \u7684\u8fc7\u7a0b"]}),"\n"]}),"\n",(0,d.jsx)(e.h4,{id:"prepare",children:"Prepare"}),"\n",(0,d.jsxs)(e.p,{children:["\u7528\u6237\u5728\u8c03\u7528 ",(0,d.jsx)(e.code,{children:"prepare_qat_fx"})," \u63a5\u53e3\u4e4b\u524d\u5fc5\u987b\u6839\u636e\u76ee\u6807\u786c\u4ef6\u5e73\u53f0\u8bbe\u7f6e\u5168\u5c40\u7684 march\u3002\u63a5\u53e3\u5185\u90e8\u4f1a\u5148\u6267\u884c fuse \u8fc7\u7a0b\uff08\u5373\u4f7f\u6a21\u578b\u5df2\u7ecf fuse \u8fc7\u4e86\uff09\uff0c\u518d\u5c06\u6a21\u578b\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u7b97\u5b50\u66ff\u6362\u4e3a ",(0,d.jsx)(e.code,{children:"horizon.nn.qat"})," \u4e2d\u7684\u5b9e\u73b0\u3002"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u9009\u62e9\u5408\u9002\u7684 qconfig\uff08Calibtaion \u6216 QAT\uff0c\u6ce8\u610f\u4e24\u79cd qconfig \u4e0d\u80fd\u6df7\u7528\uff09"}),"\n",(0,d.jsxs)(e.li,{children:["\u548c ",(0,d.jsx)(e.code,{children:"fuse_fx"})," \u7c7b\u4f3c\uff0c\u6b64\u63a5\u53e3\u4e0d\u652f\u6301 ",(0,d.jsx)(e.code,{children:"inplace"})," \u53c2\u6570\uff0c\u4e14\u5728 ",(0,d.jsx)(e.code,{children:"prepare_qat_fx"})," \u4e4b\u540e\u8bf7\u4e0d\u8981\u5bf9\u8f93\u5165\u7684\u6a21\u578b\u505a\u4efb\u4f55\u4fee\u6539"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'# \u8bbe\u7f6e march **RDK X3** \u8bbe\u7f6eBERNOULLI2\uff0c **RDK Ultra** \u8bbe\u7f6e\u4e3aBAYES\uff0c**RDK X5** \u8bbe\u7f6e\u4e3a BAYES_E \u3002\nhorizon.march.set_march(horizon.march.March.BAYES)\nqat_model = horizon.quantization.prepare_qat_fx(\n    model,\n    {\n        "": horizon.qconfig.default_calib_8bit_fake_quant_qconfig,\n        "module_name": {\n            "<module_name>": custom_qconfig,\n        },\n    },)\n'})}),"\n",(0,d.jsx)(e.h4,{id:"convert",children:"Convert"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsxs)(e.li,{children:["\u548c ",(0,d.jsx)(e.code,{children:"fuse_fx"})," \u7c7b\u4f3c\uff0c\u6b64\u63a5\u53e3\u4e0d\u652f\u6301 ",(0,d.jsx)(e.code,{children:"inplace"})," \u53c2\u6570\uff0c\u4e14\u5728 ",(0,d.jsx)(e.code,{children:"convert_fx"})," \u4e4b\u540e\u8bf7\u4e0d\u8981\u5bf9\u8f93\u5165\u7684\u6a21\u578b\u505a\u4efb\u4f55\u4fee\u6539"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"quantized_model = horizon.quantization.convert_fx(qat_model)\n"})}),"\n",(0,d.jsx)(e.h4,{id:"eager-mode-\u517c\u5bb9\u6027",children:"Eager Mode \u517c\u5bb9\u6027"}),"\n",(0,d.jsxs)(e.p,{children:["\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0cFX \u91cf\u5316\u7684\u63a5\u53e3\u53ef\u4ee5\u76f4\u63a5\u66ff\u6362 eager mode \u91cf\u5316\u7684\u63a5\u53e3\uff08",(0,d.jsx)(e.code,{children:"prepare_qat"})," -> ",(0,d.jsx)(e.code,{children:"prepare_qat_fx"}),", ",(0,d.jsx)(e.code,{children:"convert"})," -> ",(0,d.jsx)(e.code,{children:"convert_fx"}),"\uff09\uff0c\u4f46\u662f\u4e0d\u80fd\u548c eager mode \u7684\u63a5\u53e3\u6df7\u7528\u3002\u90e8\u5206\u6a21\u578b\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u9700\u8981\u5bf9\u4ee3\u7801\u7ed3\u6784\u505a\u4e00\u5b9a\u7684\u4fee\u6539\u3002"]}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"FX \u4e0d\u652f\u6301\u7684\u64cd\u4f5c\uff1atorch \u7684 symbolic trace \u652f\u6301\u7684\u64cd\u4f5c\u662f\u6709\u9650\u7684\uff0c\u4f8b\u5982\u4e0d\u652f\u6301\u5c06\u975e\u9759\u6001\u53d8\u91cf\u4f5c\u4e3a\u5224\u65ad\u6761\u4ef6\u3001\u9ed8\u8ba4\u4e0d\u652f\u6301 torch \u4ee5\u5916\u7684 pkg\uff08\u5982 numpy\uff09\u7b49\uff0c\u4e14\u672a\u6267\u884c\u5230\u7684\u6761\u4ef6\u5206\u652f\u5c06\u88ab\u4e22\u5f03"}),"\n",(0,d.jsx)(e.li,{children:"\u4e0d\u60f3\u88ab FX \u5904\u7406\u7684\u64cd\u4f5c\uff1a\u5982\u679c\u6a21\u578b\u7684\u524d\u540e\u5904\u7406\u4e2d\u4f7f\u7528\u4e86 torch \u7684 op\uff0cFX \u5728 trace \u65f6\u4f1a\u5c06\u4ed6\u4eec\u89c6\u4e3a\u6a21\u578b\u7684\u4e00\u90e8\u5206\uff0c\u4ea7\u751f\u4e0d\u7b26\u5408\u9884\u671f\u7684\u884c\u4e3a\uff08\u4f8b\u5982\u5c06 torch \u7684\u67d0\u4e9b function \u8c03\u7528\u66ff\u6362\u4e3a FloatFunctional\uff09\u3002"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5\u91c7\u7528 wrap \u7684\u65b9\u6cd5\u6765\u907f\u514d\uff0c\u4e0b\u9762\u4ee5 RetinaNet \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'from horizon_plugin_pytorch.utils.fx_helper import wrap as fx_wrap\n\nclass RetinaNet(nn.Module):\n    def __init__(\n        self,\n        backbone: nn.Module,\n        neck: Optional[nn.Module] = None,\n        head: Optional[nn.Module] = None,\n        anchors: Optional[nn.Module] = None,\n        targets: Optional[nn.Module] = None,\n        post_process: Optional[nn.Module] = None,\n        loss_cls: Optional[nn.Module] = None,\n        loss_reg: Optional[nn.Module] = None,\n    ):\n        super(RetinaNet, self).__init__()\n\n        self.backbone = backbone\n        self.neck = neck\n        self.head = head\n        self.anchors = anchors\n        self.targets = targets\n        self.post_process = post_process\n        self.loss_cls = loss_cls\n        self.loss_reg = loss_reg\n\n    def rearrange_head_out(self, inputs: List[torch.Tensor], num: int):\n        outputs = []\n        for t in inputs:\n            outputs.append(t.permute(0, 2, 3, 1).reshape(t.shape[0], -1, num))\n        return torch.cat(outputs, dim=1)\n\n    def forward(self, data: Dict):\n        feat = self.backbone(data["img"])\n        feat = self.neck(feat) if self.neck else feat\n        cls_scores, bbox_preds = self.head(feat)\n\n        if self.post_process is None:\n            return cls_scores, bbox_preds\n\n        # \u5c06\u4e0d\u9700\u8981\u5efa\u56fe\u7684\u64cd\u4f5c\u5c01\u88c5\u4e3a\u4e00\u4e2a method \u5373\u53ef\uff0cFX \u5c06\u4e0d\u518d\u5173\u6ce8 method \u5185\u90e8\u7684\u903b\u8f91\uff0c\n        # \u4ec5\u5c06\u5b83\u539f\u6837\u4fdd\u7559\uff08method \u4e2d\u8c03\u7528\u7684 module \u4ecd\u53ef\u88ab\u8bbe\u7f6e qconfig\uff0c\u88ab\n        # prepare_qat_fx \u548c convert_fx \u66ff\u6362\uff09\n        return self._post_process( data, feat, cls_scores, bbox_preds)\n\n    @fx_wrap()  # fx_wrap \u652f\u6301\u76f4\u63a5\u88c5\u9970 class method\n    def _post_process(self, data, feat, cls_scores, bbox_preds)\n        anchors = self.anchors(feat)\n\n        # \u5bf9 self.training \u7684\u5224\u65ad\u5fc5\u987b\u5c01\u88c5\u8d77\u6765\uff0c\u5426\u5219\u5728 symbolic trace \u4e4b\u540e\uff0c\u6b64\u5224\u65ad\n        # \u903b\u8f91\u4f1a\u88ab\u4e22\u6389\n        if self.training:\n            cls_scores = self.rearrange_head_out(\n                cls_scores, self.head.num_classes\n            )\n            bbox_preds = self.rearrange_head_out(bbox_preds, 4)\n            gt_labels = [\n                torch.cat(\n                    [data["gt_bboxes"][i], data["gt_classes"][i][:, None] + 1],\n                    dim=-1,\n                )\n                for i in range(len(data["gt_classes"]))\n            ]\n            gt_labels = [gt_label.float() for gt_label in gt_labels]\n            _, labels = self.targets(anchors, gt_labels)\n            avg_factor = labels["reg_label_mask"].sum()\n            if avg_factor == 0:\n                avg_factor += 1\n            cls_loss = self.loss_cls(\n                pred=cls_scores.sigmoid(),\n                target=labels["cls_label"],\n                weight=labels["cls_label_mask"],\n                avg_factor=avg_factor,\n            )\n            reg_loss = self.loss_reg(\n                pred=bbox_preds,\n                target=labels["reg_label"],\n                weight=labels["reg_label_mask"],\n                avg_factor=avg_factor,\n            )\n            return {\n                "cls_loss": cls_loss,\n                "reg_loss": reg_loss,\n            }\n        else:\n            preds = self.post_process(\n                anchors,\n                cls_scores,\n                bbox_preds,\n                [torch.tensor(shape) for shape in data["resized_shape"]],\n            )\n            assert (\n                "pred_bboxes" not in data.keys()\n            ), "pred_bboxes has been in data.keys()"\n            data["pred_bboxes"] = preds\n            return data\n'})}),"\n",(0,d.jsx)(e.h2,{id:"rgb888-\u6570\u636e\u90e8\u7f72",children:"RGB888 \u6570\u636e\u90e8\u7f72"}),"\n",(0,d.jsx)(e.h3,{id:"\u573a\u666f",children:"\u573a\u666f"}),"\n",(0,d.jsx)(e.p,{children:"BPU \u4e2d\u56fe\u50cf\u91d1\u5b57\u5854\u7684\u8f93\u51fa\u56fe\u50cf\u662f centered YUV444 \u7684\u683c\u5f0f\uff0c\u5176\u6570\u636e\u8303\u56f4\u662f [-128, 127]\uff0c\u4f46\u5728\u8bad\u7ec3\u9636\u6bb5\u4e2d\uff0c\u60a8\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u6709\u53ef\u80fd\u662f RGB \u683c\u5f0f\u7684\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u5bf9\u8bad\u7ec3\u96c6\u7684\u56fe\u7247\u683c\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u907f\u514d\u51fa\u73b0\u8bad\u7ec3\u7684\u6a21\u578b\u53ea\u80fd\u63a5\u53d7 RGB \u7684\u6570\u636e\u8f93\u5165\u800c\u65e0\u6cd5\u6b63\u5e38\u4e0a\u677f\u63a8\u7406\u7684\u60c5\u51b5\u3002\u901a\u5e38\uff0c\u6211\u4eec\u63a8\u8350\u60a8\u5728\u8bad\u7ec3\u65f6\uff0c\u5728\u56fe\u50cf\u9884\u5904\u7406\u9636\u6bb5\u5c06 RGB \u683c\u5f0f\u7684\u56fe\u7247\u8f6c\u4e3a YUV \u683c\u5f0f\uff0c\u4e0e\u63a8\u7406\u65f6 BPU \u7684\u6570\u636e\u6d41\u5bf9\u9f50\u3002"}),"\n",(0,d.jsx)(e.p,{children:"\u7531\u4e8e\u7f16\u8bd1\u5668\u76ee\u524d\u4e0d\u652f\u6301\u989c\u8272\u7a7a\u95f4\u8f6c\u6362\uff0c\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u63d2\u5165\u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u8282\u70b9\uff0c\u4ece\u800c\u7ed5\u8fc7\u7f16\u8bd1\u5668\u7684\u9650\u5236\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"yuv-\u683c\u5f0f\u7b80\u4ecb",children:"YUV \u683c\u5f0f\u7b80\u4ecb"}),"\n",(0,d.jsxs)(e.p,{children:["YUV \u4e00\u822c\u7528\u6765\u63cf\u8ff0\u6a21\u62df\u7535\u89c6\u7cfb\u7edf\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u5728 BT.601 \u4e2d YUV \u4e3b\u8981\u6709\u4e24\u79cd\u5236\u5f0f\uff1aYUV studio swing\uff08Y\uff1a16",(0,d.jsx)(e.del,{children:"235\uff0cUV\uff1a16"}),"240\uff09\u548c YUV full swing\uff08YUV\uff1a0~255\uff09\u3002"]}),"\n",(0,d.jsx)(e.p,{children:"BPU \u652f\u6301\u7684 YUV \u683c\u5f0f\u662f full swing\uff0c\u56e0\u6b64\u5728\u8c03\u7528\u6211\u4eec\u7684\u5de5\u5177\u4e2d YUV \u7684\u76f8\u5173\u51fd\u6570\u65f6\uff0c\u5e94\u786e\u4fdd\u6307\u5b9a\u4e86 full \u4f5c\u4e3a swing \u683c\u5f0f\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u5728\u8bad\u7ec3\u65f6\u5bf9-rgb-\u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406",children:"\u5728\u8bad\u7ec3\u65f6\u5bf9 RGB \u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406"}),"\n",(0,d.jsxs)(e.p,{children:["\u5728\u8bad\u7ec3\u65f6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,d.jsx)(e.code,{children:"horizon.functional.rgb2centered_yuv"})," \u6216 ",(0,d.jsx)(e.code,{children:"horizon.functional.bgr2centered_yuv"})," \u5c06 RGB \u56fe\u50cf\u8f6c\u6362\u4e3a BPU \u6240\u652f\u6301\u7684 YUV \u683c\u5f0f\u3002\u4ee5 ",(0,d.jsx)(e.code,{children:"rgb2centered_yuv"})," \u4e3a\u4f8b\uff0c\u8be5\u51fd\u6570\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'def rgb2centered_yuv(input: Tensor, swing: str = "studio") -> Tensor:\n    """Convert color space.\n\n    Convert images from RGB format to centered YUV444 BT.601\n\n    Args:\n        input: input image in RGB format, ranging 0~255\n        swing: "studio" for YUV studio swing (Y: -112~107,\n                U, V: -112~112)\n                "full" for YUV full swing (Y, U, V: -128~127).\n                default is "studio"\n\n    Returns:\n        output: centered YUV image\n    """\n'})}),"\n",(0,d.jsxs)(e.p,{children:["\u51fd\u6570\u8f93\u5165\u4e3a RGB \u56fe\u50cf\uff0c\u8f93\u51fa\u4e3a centered YUV \u56fe\u50cf\u3002\u5176\u4e2d\uff0ccentered YUV \u662f\u6307\u51cf\u53bb\u4e86 128 \u7684\u504f\u7f6e\u7684 YUV \u56fe\u50cf\uff0c\u8fd9\u662f BPU \u56fe\u50cf\u91d1\u5b57\u5854\u8f93\u51fa\u7684\u6807\u51c6\u56fe\u50cf\u683c\u5f0f\u3002\u5bf9\u4e8e full swing \u800c\u8a00\uff0c\u5176\u8303\u56f4\u5e94\u4e3a -128~127\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7 ",(0,d.jsx)(e.code,{children:"swing"})," \u53c2\u6570\u63a7\u5236 full \u548c studio \u7684\u53d6\u5411\u3002\u4e3a\u4e86\u548c BPU \u6570\u636e\u6d41\u683c\u5f0f\u5bf9\u9f50\uff0c",(0,d.jsxs)(e.strong,{children:["\u8bf7\u60a8\u5c06 ",(0,d.jsx)(e.code,{children:"swing"}),' \u8bbe\u4e3a "full"']}),"\u3002"]}),"\n",(0,d.jsx)(e.h3,{id:"\u5728\u63a8\u7406\u65f6\u5bf9-yuv-\u8f93\u5165\u8fdb\u884c\u5b9e\u65f6\u8f6c\u6362",children:"\u5728\u63a8\u7406\u65f6\u5bf9 YUV \u8f93\u5165\u8fdb\u884c\u5b9e\u65f6\u8f6c\u6362"}),"\n",(0,d.jsx)(e.p,{children:"\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u63a8\u8350\u60a8\u4f7f\u7528\u4e0a\u8ff0\u4ecb\u7ecd\u7684\u65b9\u6848\uff0c\u5373\u5728\u8bad\u7ec3\u65f6\u5c31\u5c06 RGB \u56fe\u50cf\u8f6c\u6210 YUV \u683c\u5f0f\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5728\u63a8\u7406\u65f6\u5f15\u5165\u989d\u5916\u7684\u6027\u80fd\u5f00\u9500\u548c\u7cbe\u5ea6\u635f\u5931\u3002\u4f46\u5982\u679c\u60a8\u5df2\u7ecf\u4f7f\u7528\u4e86 RGB \u56fe\u50cf\u8bad\u7ec3\u4e86\u6a21\u578b\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u8865\u6551\u63aa\u65bd\uff0c\u901a\u8fc7\u5728\u63a8\u7406\u7684\u65f6\u5019\u5728\u6a21\u578b\u8f93\u5165\u5904\u63d2\u5165\u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u7b97\u5b50\uff0c\u5c06\u8f93\u5165\u7684 YUV \u56fe\u50cf\u5b9e\u65f6\u8f6c\u6362\u4e3a RGB \u683c\u5f0f\uff0c\u4ece\u800c\u652f\u6301 RGB \u6a21\u578b\u7684\u4e0a\u677f\u90e8\u7f72\uff0c\u907f\u514d\u60a8\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\u7ed9\u60a8\u5e26\u6765\u65f6\u95f4\u6210\u672c\u548c\u8d44\u6e90\u4e0a\u7684\u635f\u5931\u3002\u7531\u4e8e\u8be5\u7b97\u5b50\u968f\u6a21\u578b\u8fd0\u884c\u5728 BPU \u4e0a\uff0c\u5e95\u5c42\u91c7\u7528\u5b9a\u70b9\u8fd0\u7b97\u5b9e\u73b0\uff0c\u56e0\u800c\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u5f15\u5165\u4e00\u5b9a\u7684\u7cbe\u5ea6\u635f\u5931\uff0c\u56e0\u6b64\u4ec5\u4f5c\u4e3a\u8865\u6551\u65b9\u6848\uff0c\u8bf7\u60a8\u5c3d\u53ef\u80fd\u6309\u7167\u6211\u4eec\u6240\u63a8\u8350\u7684\u65b9\u5f0f\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\u3002"}),"\n",(0,d.jsx)(e.h4,{id:"\u7b97\u5b50\u5b9a\u4e49",children:"\u7b97\u5b50\u5b9a\u4e49"}),"\n",(0,d.jsxs)(e.p,{children:["\u60a8\u53ef\u4ee5\u5728\u63a8\u7406\u6a21\u578b\u7684\u5f00\u5934\uff08QuantStub \u7684\u540e\u9762\uff09\u63d2\u5165 ",(0,d.jsx)(e.code,{children:"horizon.functional.centered_yuv2rgb"})," \u6216 ",(0,d.jsx)(e.code,{children:"horizon.functional.centered_yuv2bgr"})," \u7b97\u5b50\u5b9e\u73b0\u8be5\u529f\u80fd\u3002\u4ee5 ",(0,d.jsx)(e.code,{children:"centered_yuv2rgb"})," \u4e3a\u4f8b\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'def centered_yuv2rgb(\n    input: QTensor,\n    swing: str = "studio",\n    mean: Union[List[float], Tensor] = (128.0,),\n    std: Union[List[float], Tensor] = (128.0,),\n    q_scale: Union[float, Tensor] = 1.0 / 128.0,\n) -> QTensor:\n'})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"swing"}),' \u4e3a YUV \u7684\u683c\u5f0f\uff0c\u53ef\u9009\u9879\u4e3a "full" \u548c "studio"\u3002\u4e3a\u4e86\u548c BPU \u7684 YUV \u6570\u636e\u683c\u5f0f\u5bf9\u9f50\uff0c',(0,d.jsxs)(e.strong,{children:["\u8bf7\u60a8\u5c06 ",(0,d.jsx)(e.code,{children:"swing"}),' \u8bbe\u4e3a "full"']}),"\u3002\n",(0,d.jsx)(e.code,{children:"mean"}),", ",(0,d.jsx)(e.code,{children:"std"})," \u5747\u4e3a\u60a8\u5728\u8bad\u7ec3\u65f6 RGB \u56fe\u50cf\u6240\u4f7f\u7528\u7684\u5f52\u4e00\u5316\u5747\u503c\u3001\u6807\u51c6\u5dee\uff0c\u652f\u6301 list \u548c torch.Tensor \u4e24\u79cd\u8f93\u5165\u7c7b\u578b\uff0c\u652f\u6301\u5355\u901a\u9053\u6216\u4e09\u901a\u9053\u7684\u5f52\u4e00\u5316\u53c2\u6570\u3002\u5982\u60a8\u7684\u5f52\u4e00\u5316\u5747\u503c\u4e3a [128, 0, -128] \u65f6\uff0c\u60a8\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a [128., 0., -128.] \u7684 list \u6216 torch.tensor([128., 0., -128.])\u3002\n",(0,d.jsx)(e.code,{children:"q_scale"})," \u4e3a\u60a8\u5728\u91cf\u5316\u8bad\u7ec3\u9636\u6bb5\u6240\u7528\u7684 QuantStub \u7684 scale \u6570\u503c\u3002\u652f\u6301 float \u548c torch.Tensor \u4e24\u79cd\u6570\u636e\u7c7b\u578b\u3002"]}),"\n",(0,d.jsx)(e.p,{children:"\u8be5\u7b97\u5b50\u5b8c\u6210\u4e86\u4ee5\u4e0b\u64cd\u4f5c\uff1a"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\u6839\u636e\u7ed9\u5b9a\u7684 ",(0,d.jsx)(e.code,{children:"swing"})," \u6240\u5bf9\u5e94\u7684\u8f6c\u6362\u516c\u5f0f\u5c06\u8f93\u5165\u56fe\u50cf\u8f6c\u6362\u6210 RGB \u683c\u5f0f"]}),"\n",(0,d.jsxs)(e.li,{children:["\u4f7f\u7528\u7ed9\u5b9a\u7684 ",(0,d.jsx)(e.code,{children:"mean"})," \u548c ",(0,d.jsx)(e.code,{children:"std"})," \u5bf9 RGB \u56fe\u50cf\u8fdb\u884c\u5f52\u4e00\u5316"]}),"\n",(0,d.jsxs)(e.li,{children:["\u4f7f\u7528\u7ed9\u5b9a\u7684 ",(0,d.jsx)(e.code,{children:"q_scale"})," \u5bf9 RGB \u56fe\u50cf\u8fdb\u884c\u91cf\u5316"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u7531\u4e8e\u8be5\u7b97\u5b50\u5df2\u7ecf\u5305\u62ec\u4e86\u5bf9 RGB \u56fe\u50cf\u7684\u91cf\u5316\u64cd\u4f5c\uff0c\u56e0\u6b64\u5728\u63d2\u5165\u8fd9\u4e2a\u7b97\u5b50\u540e\u60a8\u9700\u8981\u624b\u52a8\u5730\u5c06\u6a21\u578b QuantStub \u7684 scale \u53c2\u6570\u66f4\u6539\u4e3a 1\u3002"}),"\n",(0,d.jsx)(e.p,{children:"\u63d2\u5165\u8be5\u7b97\u5b50\u540e\u7684\u90e8\u7f72\u6a21\u578b\u5982\u4e0b\u56fe\u6240\u793a\uff1a"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/04_toolchain_development/expert/yuv1.svg",alt:"yuv1"})}),"\n",(0,d.jsx)(e.admonition,{title:"\u6ce8\u610f",type:"caution",children:(0,d.jsx)(e.p,{children:"\u8be5\u7b97\u5b50\u4e3a\u90e8\u7f72\u4e13\u7528\u7b97\u5b50\uff0c\u8bf7\u52ff\u5728\u8bad\u7ec3\u9636\u6bb5\u4f7f\u7528\u8be5\u7b97\u5b50\u3002"})}),"\n",(0,d.jsx)(e.h4,{id:"\u4f7f\u7528\u65b9\u6cd5",children:"\u4f7f\u7528\u65b9\u6cd5"}),"\n",(0,d.jsx)(e.p,{children:"\u5728\u60a8\u4f7f\u7528 RGB \u56fe\u50cf\u5b8c\u6210\u91cf\u5316\u8bad\u7ec3\u540e\uff0c\u60a8\u9700\u8981\uff1a"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\u83b7\u53d6\u91cf\u5316\u8bad\u7ec3\u65f6\u6a21\u578b QuantStub \u6240\u4f7f\u7528\u7684 scale \u503c\uff0c\u4ee5\u53ca RGB \u56fe\u50cf\u6240\u4f7f\u7528\u7684\u5f52\u4e00\u5316\u53c2\u6570\uff1b"}),"\n",(0,d.jsxs)(e.li,{children:["\u8c03\u7528 ",(0,d.jsx)(e.code,{children:"convert_fx"})," \u63a5\u53e3\u5c06 qat \u6a21\u578b\u8f6c\u6362\u4e3a quantized \u6a21\u578b\uff1b"]}),"\n",(0,d.jsxs)(e.li,{children:["\u5728\u6a21\u578b\u7684 QuantStub \u540e\u9762\u63d2\u5165 ",(0,d.jsx)(e.code,{children:"centered_yuv2rgb"})," \u7b97\u5b50\uff0c\u7b97\u5b50\u9700\u8981\u4f20\u5165\u6b65\u9aa4 1 \u4e2d\u6240\u83b7\u53d6\u7684\u53c2\u6570\uff1b"]}),"\n",(0,d.jsxs)(e.li,{children:["\u5c06 QuantStub \u7684 ",(0,d.jsx)(e.code,{children:"scale"})," \u53c2\u6570\u4fee\u6539\u6210 1\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'import torch\nfrom horizon_plugin_pytorch.quantization import (\n    QuantStub,\n    prepare_qat_fx,\n    convert_fx,\n)\nfrom horizon_plugin_pytorch.functional import centered_yuv2rgb\nfrom horizon_plugin_pytorch.quantization.qconfig import (\n    default_qat_8bit_fake_quant_qconfig,\n)\nfrom horizon_plugin_pytorch import set_march\n\nclass Net(torch.nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.quant = QuantStub()\n        self.conv = torch.nn.Conv2d(3, 3, 3)\n        self.bn = torch.nn.BatchNorm2d(3)\n        self.relu = torch.nn.ReLU()\n\n    def forward(self, input):\n        x = self.quant(input)\n        x = self.conv(x)\n        x = self.bn(x)\n        x = self.relu(x)\n        return x\n\n    def set_qconfig(self):\n        self.qconfig = default_qat_8bit_fake_quant_qconfig\n\n\ndata = torch.rand(1, 3, 28, 28)\nnet = Net()\n\n# \u8bbe\u7f6e march **RDK X3** \u8bbe\u7f6e\u4e3abernoulli2\uff0c **RDK Ultra** \u8bbe\u7f6e\u4e3abayes\uff0c **RDK X5** \u8bbe\u7f6e\u4e3abayes-e\u3002\nset_march("bayes")\n\nnet.set_qconfig()\nqat_net = prepare_qat_fx(net)\nqat_net(data)\nquantized_net = convert_fx(qat_net)\ntraced = quantized_net\nprint("Before centered_yuv2rgb")\ntraced.graph.print_tabular()\n\n# Replace QuantStub nodes with centered_yuv2rgb\npatterns = ["quant"]\nfor n in traced.graph.nodes:\n    if any(n.target == pattern for pattern in patterns):\n        with traced.graph.inserting_after(n):\n            new_node = traced.graph.call_function(centered_yuv2rgb, (n,), {"swing": "full"})\n            n.replace_all_uses_with(new_node)\n            new_node.args = (n,)\n\ntraced.quant.scale.fill_(1.0)\ntraced.recompile()\nprint("\\nAfter centered_yuv2rgb")\ntraced.graph.print_tabular()\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u5bf9\u6bd4\u524d\u540e Graph \u53ef\u4ee5\u770b\u5230\u4fee\u6539\u540e\u7684\u56fe\u4e2d\u63d2\u5165\u4e86\u989c\u8272\u7a7a\u95f4\u8f6c\u6362\u8282\u70b9\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-sh",children:"Before centered_yuv2rgb\nopcode       name     target    args        kwargs\n-----------  -------  --------  ----------  --------\nplaceholder  input_1  input     ()          {}\ncall_module  quant    quant     (input_1,)  {}\ncall_module  conv     conv      (quant,)    {}\noutput       output   output    (conv,)     {}\n\nAfter centered_yuv2rgb\nopcode         name              target                                         args                 kwargs\n-------------  ----------------  ---------------------------------------------  -------------------  -----------------\nplaceholder    input_1           input                                          ()                   {}\ncall_module    quant             quant                                          (input_1,)           {}\ncall_function  centered_yuv2rgb  <function centered_yuv2rgb at 0x7fa1c2b48040>  (quant,)             {'swing': 'full'}\ncall_module    conv              conv                                           (centered_yuv2rgb,)  {}\noutput         output            output                                         (conv,)              {}\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u6a21\u578b\u5206\u6bb5\u90e8\u7f72",children:"\u6a21\u578b\u5206\u6bb5\u90e8\u7f72"}),"\n",(0,d.jsx)(e.h3,{id:"\u573a\u666f-1",children:"\u573a\u666f"}),"\n",(0,d.jsx)(e.p,{children:"\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u7528\u6237\u53ef\u80fd\u5b58\u5728\u5c06\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u8bad\u7ec3\u7684\u6a21\u578b\u62c6\u5206\u6210\u591a\u6bb5\u8fdb\u884c\u4e0a\u677f\u90e8\u7f72\u7684\u9700\u6c42\u3002\u4f8b\u5982\u5bf9\u4e8e\u4e0b\u56fe\u7684\u4e24\u9636\u6bb5\u68c0\u6d4b\u6a21\u578b\uff0c\u82e5 DPP \u9700\u8981\u5728 CPU \u4e0a\u6267\u884c\uff0cDPP \u7684\u8f93\u51fa\uff08roi\uff09\u4f5c\u4e3a RoiAlign \u7684\u8f93\u5165\uff0c\u5219\u7528\u6237\u9700\u8981\u6309\u865a\u7ebf\u6846\u7684\u6807\u6ce8\u5c06\u6a21\u578b\u62c6\u5206\u4e3a Stage1 \u548c Stage2\uff0c\u5206\u5f00\u7f16\u8bd1\u4e0a\u677f\u3002\u4e0a\u677f\u8fd0\u884c\u65f6\uff0cbackbone \u8f93\u51fa\u7684\u5b9a\u70b9\u6570\u636e\u76f4\u63a5\u4f5c\u4e3a RoiAlign \u7684\u8f93\u5165\u3002"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/04_toolchain_development/expert/segmented_deploy.svg",alt:"segmented_deploy"})}),"\n",(0,d.jsx)(e.h3,{id:"\u65b9\u6cd5",children:"\u65b9\u6cd5"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/04_toolchain_development/expert/segmented_deploy_method.svg",alt:"segmented_deploy_method"})}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u6a21\u578b\u4fee\u6539\uff1a\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5728\u6b63\u5e38\u53ef\u4ee5\u8fdb\u884c\u91cf\u5316\u8bad\u7ec3\u7684\u6a21\u578b\u57fa\u7840\u4e0a\uff0c\u7528\u6237\u9700\u8981\u5728 prepare_qat \u524d\u5728\u6a21\u578b\u5206\u6bb5\u7684\u5206\u754c\u70b9\u540e\u63d2\u5165 QuantStub\uff0c\u6ce8\u610f\u82e5\u4f7f\u7528\u4e86 horizon_plugin_pytorch.quantization.QuantStub\uff0c\u5fc5\u987b\u8bbe\u7f6e scale = None\u3002"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"QAT \u8bad\u7ec3\uff1a\u6b63\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5bf9\u4fee\u6539\u540e\u7684\u6a21\u578b\u8fdb\u884c\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\uff0c\u63d2\u5165\u7684 QuantStub \u4f1a\u5c06 Stage2 \u6a21\u578b\u8f93\u5165\u6570\u636e\u7684 scale \u8bb0\u5f55\u5728 buffer \u4e2d"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u8f6c\u5b9a\u70b9\uff1a\u6b63\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4f7f\u7528 convert \u63a5\u53e3\u5c06\u8bad\u7ec3\u597d\u7684 QAT \u6a21\u578b\u8f6c\u4e3a\u5b9a\u70b9"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u62c6\u5206\u548c\u7f16\u8bd1\uff1a\u5c06\u6a21\u578b\u6309\u7167\u4e0a\u677f\u540e\u7684\u5f62\u6001\u8fdb\u884c\u62c6\u5206\uff0c\u5bf9\u62c6\u5206\u51fa\u7684\u591a\u6bb5\u6a21\u578b\u5206\u522b\u8fdb\u884c trace \u548c\u7f16\u8bd1\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u867d\u7136\u5728\u8bad\u7ec3\u65f6 Stage2 \u7684\u8f93\u5165\u4e3a\u91cf\u5316\u6570\u636e\uff0c\u4f46\u662f\u5728\u5bf9 Stage2 \u505a trace \u65f6\u7684 example_input \u4f9d\u7136\u9700\u8981\u662f\u6d6e\u70b9\u7684\u5f62\u5f0f\uff0cStage2 \u4e2d\u63d2\u5165\u7684 QuantStub \u4f1a\u8d1f\u8d23\u7ed9\u6570\u636e\u914d\u7f6e\u6b63\u786e\u7684 scale \u5e76\u8fdb\u884c\u91cf\u5316\u3002"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(e.h2,{id:"op_fusion",children:"\u7b97\u5b50\u878d\u5408"}),"\n",(0,d.jsx)(e.p,{children:"\u8bad\u7ec3\u5de5\u5177\u652f\u6301\u7684\u7b97\u5b50\u878d\u5408\u53ef\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a1. \u5438\u6536 BN\uff1b2. \u878d\u5408 Add\u3001ReLU(6)"}),"\n",(0,d.jsx)(e.h3,{id:"\u5438\u6536-bn",children:"\u5438\u6536 BN"}),"\n",(0,d.jsxs)(e.p,{children:["\u5438\u6536 ",(0,d.jsx)(e.code,{children:"BN"})," \u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u6a21\u578b\u7684\u8ba1\u7b97\u91cf\u3002\u56e0\u4e3a ",(0,d.jsx)(e.code,{children:"BN"})," \u662f\u7ebf\u6027\u53d8\u6362\u8fc7\u7a0b\uff0c\u56e0\u6b64\uff0c\u5f53 ",(0,d.jsx)(e.code,{children:"BN"})," \u548c ",(0,d.jsx)(e.code,{children:"Conv"})," \u4e00\u8d77\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a ",(0,d.jsx)(e.code,{children:"BN"})," \u7684\u53c2\u6570\u5438\u6536\u5230 ",(0,d.jsx)(e.code,{children:"Conv"})," \u7684\u53c2\u6570\u4e2d\uff0c\u4ece\u800c\u5728\u90e8\u7f72\u7684\u6a21\u578b\u4e2d\u6d88\u9664 ",(0,d.jsx)(e.code,{children:"BN"})," \u7684\u8ba1\u7b97\u3002"]}),"\n",(0,d.jsx)(e.p,{children:"\u5438\u6536\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5982\u4e0b\uff1a"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/04_toolchain_development/expert/fuse_bn.jpg",alt:"fuse_bn"})}),"\n",(0,d.jsxs)(e.p,{children:["\u901a\u8fc7\u5438\u6536 ",(0,d.jsx)(e.code,{children:"BN"})," \uff0c\u53ef\u4ee5\u628a ",(0,d.jsx)(e.code,{children:"Conv2d + BN2d"})," \u7b80\u5316\u4e3a ",(0,d.jsx)(e.code,{children:"Conv2d"})]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/04_toolchain_development/expert/absorb_bn.svg",alt:"absorb_bn"})}),"\n",(0,d.jsx)(e.h3,{id:"\u878d\u5408-addrelu6",children:"\u878d\u5408 Add\u3001ReLU(6)"}),"\n",(0,d.jsx)(e.p,{children:"\u548c CUDA Kernel Fusion \u4e2d\u5c06 CUDA Kernel \u878d\u5408\u4ee5\u63d0\u9ad8\u8ba1\u7b97\u901f\u5ea6\u4e0d\u540c\uff0c\u8bad\u7ec3\u5de5\u5177\u652f\u6301\u7684\u878d\u5408\u66f4\u52a0\u504f\u91cd\u91cf\u5316\u5c42\u9762"}),"\n",(0,d.jsxs)(e.p,{children:["BPU \u786c\u4ef6\u9488\u5bf9\u5e38\u89c1\u7684\u6a21\u578b\u57fa\u672c\u7ed3\u6784\u505a\u4e86\u4f18\u5316\uff0c\u5728\u8ba1\u7b97 ",(0,d.jsx)(e.code,{children:"Conv -> Add -> ReLU"})," \u8fd9\u79cd\u7b97\u5b50\u7ec4\u5408\u65f6\uff0c\u53ef\u4f7f\u7b97\u5b50\u95f4\u7684\u6570\u636e\u4f20\u9012\u4fdd\u7559\u9ad8\u7cbe\u5ea6\u7684\u72b6\u6001\uff0c\u63d0\u9ad8\u6a21\u578b\u6574\u4f53\u7684\u6570\u503c\u7cbe\u5ea6\u3002\u56e0\u6b64\u5728\u5bf9\u6a21\u578b\u8fdb\u884c\u91cf\u5316\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 ",(0,d.jsx)(e.code,{children:"Conv -> Add -> ReLU"})," \u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53"]}),"\n",(0,d.jsxs)(e.p,{children:["\u7531\u4e8e\u8bad\u7ec3\u5de5\u5177\u5bf9\u6a21\u578b\u8fdb\u884c\u91cf\u5316\u6539\u9020\u65f6\u4ee5 ",(0,d.jsx)(e.code,{children:"torch.nn.Module"})," \u4e3a\u5355\u4f4d\uff0c\u4e3a\u4e86\u5728\u91cf\u5316\u65f6\u5c06 ",(0,d.jsx)(e.code,{children:"Conv -> Add -> ReLU"})," \u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u9700\u8981\u5c06\u5b83\u4eec\u5408\u5e76\u4e3a\u4e00\u4e2a ",(0,d.jsx)(e.code,{children:"Module"})]}),"\n",(0,d.jsx)(e.p,{children:"\u7b97\u5b50\u878d\u5408\u9664\u4e86\u53ef\u4ee5\u4f7f\u4e2d\u95f4\u7ed3\u679c\u4fdd\u7559\u9ad8\u7cbe\u5ea6\u72b6\u6001\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u7701\u53bb\u5c06\u4e2d\u95f4\u7ed3\u679c\u8f6c\u5316\u4e3a\u4f4e\u7cbe\u5ea6\u8868\u793a\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u6267\u884c\u901f\u5ea6\u548c\u4e0d\u878d\u5408\u76f8\u6bd4\u4e5f\u4f1a\u66f4\u5feb"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.em,{children:"\uff08\u7531\u4e8e\u7b97\u5b50\u878d\u5408\u65e2\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u7cbe\u5ea6\uff0c\u53c8\u53ef\u4ee5\u63d0\u9ad8\u6a21\u578b\u901f\u5ea6\uff0c\u4e00\u822c\u5e94\u8be5\u5bf9\u6240\u6709\u53ef\u878d\u5408\u7684\u90e8\u5206\u8fdb\u884c\u878d\u5408\uff09"})}),"\n",(0,d.jsx)(e.h3,{id:"\u5b9e\u73b0\u539f\u7406",children:"\u5b9e\u73b0\u539f\u7406"}),"\n",(0,d.jsx)(e.p,{children:"\u5f97\u76ca\u4e8e FX \u53ef\u4ee5\u83b7\u53d6\u8ba1\u7b97\u56fe\u7684\u4f18\u52bf\uff0c\u8bad\u7ec3\u5de5\u5177\u53ef\u4ee5\u81ea\u52a8\u5316\u5730\u5bf9\u6a21\u578b\u7684\u8ba1\u7b97\u56fe\u8fdb\u884c\u5206\u6790\uff0c\u6839\u636e\u9884\u5b9a\u4e49\u7684 fusion pattern \u5bf9\u53ef\u878d\u5408\u90e8\u5206\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u901a\u8fc7 submodule \u66ff\u6362\u5b9e\u73b0\u878d\u5408\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u4e3e\u4f8b\u8fdb\u884c\u8bf4\u660e"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.em,{children:"\uff08\u5438\u6536 BN \u548c\u878d\u5408 Add\u3001ReLU(6) \u53ef\u4ee5\u901a\u8fc7\u76f8\u540c\u7684\u673a\u5236\u5b8c\u6210\uff0c\u56e0\u6b64\u5728\u878d\u5408\u65f6\u4e0d\u9700\u8981\u8fdb\u884c\u533a\u5206\uff09"})}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'import torch\nfrom torch import nn\nfrom torch.quantization import DeQuantStub\nfrom horizon_plugin_pytorch.quantization import QuantStub\nfrom horizon_plugin_pytorch.quantization import fuse_fx\n\n\nclass ModelForFusion(torch.nn.Module):\n    def __init__(\n        self,\n    ):\n        super(ModelForFusion, self).__init__()\n        self.quantx = QuantStub()\n        self.quanty = QuantStub()\n        self.conv = nn.Conv2d(3, 3, 3)\n        self.bn = nn.BatchNorm2d(3)\n        self.relu = nn.ReLU()\n        self.dequant = DeQuantStub()\n\n    def forward(self, x, y):\n        x = self.quantx(x)\n        y = self.quanty(y)\n        x = self.conv(x)\n        x = self.bn(x)\n        x = x + y\n        x = self.relu(x)\n        x = self.dequant(x)\n\n        return x\n\n\nfloat_model = ModelForFusion()\nfused_model = fuse_fx(float_model)\n\nprint(fused_model)\n"""\nModelForFusion(\n  (quantx): QuantStub()\n  (quanty): QuantStub()\n  (conv): Identity()\n  (bn): Identity()\n  (relu): Identity()\n  (dequant): DeQuantStub()\n  (_generated_add_0): ConvAddReLU2d(\n    (conv): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1))\n    (relu): ReLU()\n  )\n)\n\n\n\ndef forward(self, x, y):\n    quantx = self.quantx(x);  x = None\n    quanty = self.quanty(y);  y = None\n    _generated_add_0 = self._generated_add_0\n    add_1 = self._generated_add_0(quantx, quanty);  quantx = quanty = None\n    dequant = self.dequant(add_1);  add_1 = None\n    return dequant\n"""\n'})}),"\n",(0,d.jsxs)(e.p,{children:["\u53ef\u4ee5\u770b\u5230\uff0c\u5bf9\u6a21\u578b\u6267\u884c\u7b97\u5b50\u878d\u5408\u64cd\u4f5c\u540e\uff0cBN \u88ab\u5438\u6536\u8fdb Conv \u4e2d\uff0c\u4e14 Conv\u3001Add\u3001ReLU \u88ab\u878d\u5408\u8fdb\u4e00\u4e2a Module \u4e2d\uff08",(0,d.jsx)(e.code,{children:"_generated_add_0"}),"\uff09\u3002\u539f\u672c\u7684 submodule \u88ab\u66ff\u6362\u4e3a ",(0,d.jsx)(e.code,{children:"Identity"}),"\uff0c\u4e14\u4e0d\u5728 ",(0,d.jsx)(e.code,{children:"forward"})," \u4ee3\u7801\u4e2d\u8c03\u7528"]}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsxs)(e.em,{children:["\uff08FX \u81ea\u52a8\u5730\u5c06\u6a21\u578b\u4e2d ",(0,d.jsx)(e.code,{children:"x = x + y"})," \u7684\u52a0\u53f7\u66ff\u6362\u4e3a\u4e86\u540d\u4e3a ",(0,d.jsx)(e.code,{children:"_generated_add_0"})," \u7684 ",(0,d.jsx)(e.code,{children:"Module"})," \u5f62\u5f0f\uff0c\u4ee5\u652f\u6301\u7b97\u5b50\u878d\u5408\u548c\u91cf\u5316\u7684\u76f8\u5173\u64cd\u4f5c\uff09"]})}),"\n",(0,d.jsx)(e.h3,{id:"\u53ef\u4ee5\u878d\u5408\u7684\u7b97\u5b50",children:"\u53ef\u4ee5\u878d\u5408\u7684\u7b97\u5b50"}),"\n",(0,d.jsx)(e.p,{children:"\u76ee\u524d\u652f\u6301\u7684\u53ef\u878d\u5408\u7684\u7b97\u5b50\u7ec4\u5408\u89c1\u4ee5\u4e0b\u51fd\u6570\u5b9a\u4e49"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"import operator\nimport torch\nfrom torch import nn\nfrom horizon_plugin_pytorch import nn as horizon_nn\n\n\ndef register_fusion_patterns():\n    convs = (\n        nn.Conv2d,\n        nn.ConvTranspose2d,\n        nn.Conv3d,\n        nn.Linear,\n    )\n    bns = (nn.BatchNorm1d, nn.BatchNorm2d, nn.BatchNorm3d, nn.SyncBatchNorm)\n    adds = (\n        nn.quantized.FloatFunctional.add,\n        horizon_nn.quantized.FloatFunctional.add,\n        torch.add,\n        operator.add,  # \u5373\u4ee3\u7801\u4e2d\u4f7f\u7528\u7684\u52a0\u53f7\n    )\n    relus = (nn.ReLU, nn.ReLU6, nn.functional.relu, nn.functional.relu6)\n\n    for conv in convs:\n        for bn in bns:\n            for add in adds:\n                for relu in relus:\n                    # conv bn\n                    register_fusion_pattern((bn, conv))(ConvBNAddReLUFusion)\n\n                    # conv relu\n                    register_fusion_pattern((relu, conv))(ConvBNAddReLUFusion)\n\n                    # conv add\n                    register_fusion_pattern((add, conv, MatchAllNode))(\n                        ConvBNAddReLUFusion\n                    )  # conv \u7684\u8f93\u51fa\u4f5c\u4e3a add \u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\n                    register_fusion_pattern((add, MatchAllNode, conv))(\n                        ConvBNAddedReLUFusion\n                    )  # conv \u7684\u8f93\u51fa\u4f5c\u4e3a add \u7684\u7b2c\u4e8c\u4e2a\u8f93\u5165\n\n                    # conv bn relu\n                    register_fusion_pattern((relu, (bn, conv)))(\n                        ConvBNAddReLUFusion\n                    )\n\n                    # conv bn add\n                    register_fusion_pattern((add, (bn, conv), MatchAllNode))(\n                        ConvBNAddReLUFusion\n                    )\n                    register_fusion_pattern((add, MatchAllNode, (bn, conv)))(\n                        ConvBNAddedReLUFusion\n                    )\n\n                    # conv add relu\n                    register_fusion_pattern((relu, (add, conv, MatchAllNode)))(\n                        ConvBNAddReLUFusion\n                    )\n                    register_fusion_pattern((relu, (add, MatchAllNode, conv)))(\n                        ConvBNAddedReLUFusion\n                    )\n\n                    # conv bn add relu\n                    register_fusion_pattern(\n                        (relu, (add, (bn, conv), MatchAllNode))\n                    )(ConvBNAddReLUFusion)\n                    register_fusion_pattern(\n                        (relu, (add, MatchAllNode, (bn, conv)))\n                    )(ConvBNAddedReLUFusion)\n"})}),"\n",(0,d.jsx)(e.h2,{id:"adaround\u5b9e\u9a8c\u6027\u529f\u80fd",children:"Adaround\uff08\u5b9e\u9a8c\u6027\u529f\u80fd\uff09"}),"\n",(0,d.jsx)(e.p,{children:"Adaround \u662f\u4e00\u79cd\u4e1a\u754c\u524d\u6cbf\u7684 PTQ \u91cf\u5316\u65b9\u6cd5\uff0c\u901a\u8fc7\u9010\u5c42\u5b66\u4e60\u6a21\u578b\u6743\u91cd\u662f\u5411\u4e0a\u53d6\u6574\u8fd8\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u53ef\u4ee5\u53d6\u5f97\u6bd4\u4f20\u7edf\u7684\u56db\u820d\u4e94\u5165\u7b56\u7565\u66f4\u597d\u7684\u91cf\u5316\u7cbe\u5ea6\u3002\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0cAdaround \u5728\u4e0d\u5c11\u4efb\u52a1\u4e2d\uff08\u5206\u7c7b\u3001\u5206\u5272\u3001BEV\u7b49\uff09\u90fd\u53ef\u4ee5\u4ee5\u8f83\u5c0f\u7684\u6027\u80fd\u4ee3\u4ef7\u6709\u6548\u5730\u63d0\u5347\u6a21\u578b calibration \u7cbe\u5ea6\uff0c\u6210\u4e3a\u4e86\u73b0\u6709 calibration \u6d41\u7a0b\u7684\u6709\u6548\u8865\u5145\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u57fa\u672c\u539f\u7406",children:"\u57fa\u672c\u539f\u7406"}),"\n",(0,d.jsx)(e.p,{children:"Adaround \u65e8\u5728\u901a\u8fc7\u5b66\u4e60\u66f4\u597d\u7684\u53d6\u6574\u8303\u5f0f\u964d\u4f4e\u6743\u91cd\u7684\u91cf\u5316\u8bef\u5dee\uff0c\u56e0\u6b64\u5176\u4f18\u5316\u5bf9\u8c61\u662f\u5e26\u6743\u91cd\u7684\u7b97\u5b50\u3002\u76ee\u524d\u4ec5\u652f\u6301 Conv \u548c Linear\u3002Adaround \u4f1a\u4ee5\u62d3\u6251\u987a\u5e8f\u9010\u5c42\u4f18\u5316 Conv/Linear\uff0c\u57fa\u4e8e\u5355\u7b97\u5b50\u91cf\u5316\u8bef\u5dee\u6700\u5c0f\u5316\u5b66\u4e60\u5411\u4e0a/\u5411\u4e0b\u53d6\u6574\u7684 mask\uff0c\u6700\u540e inplace \u5730\u4fee\u6539 weight \u5b8c\u6210\u4f18\u5316\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u63a5\u53e3\u5b9a\u4e49",children:"\u63a5\u53e3\u5b9a\u4e49"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"def weight_reconstruction(\n    calib_model: torch.nn.Module,\n    batches: Union[list, tuple, DataLoader],\n    batch_process_func: Callable = None,\n    custom_config_dict: dict = None,\n):\n    pass\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u5176\u4e2d\uff0ccustom_config_dict \u4e3a adaround \u76f8\u5173\u7684\u4e00\u4e9b\u914d\u7f6e\u53c2\u6570\u3002\n\u5305\u542b\u4e86\u4ee5\u4e0b\u53c2\u6570\uff1a"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'    custom_config_dict = {\n        "num_batches": 10,\n        "num_steps": 100,\n        "exclude_prefix": [],\n        "warm_up": 0.2,\n        "weight": 0.01,\n        "b_range": [20, 2],\n    }\n'})}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"num_batches"}),": \u4ec5\u5f53\u60a8\u4f20\u7684\u6570\u636e\u662f Dataloader \u65f6\u624d\u6709\u6548\uff0c\u4ee3\u8868\u4e86 Dataloader \u4e2d\u53c2\u4e0e adaround \u4f18\u5316\u7684 batch \u6570\u91cf\u3002\u5982\u679c\u60a8\u4f20\u7684\u6570\u636e\u662f list/tuple \u7684\u683c\u5f0f\uff0c\u5219\u8be5\u53c2\u6570\u4e0d\u8d77\u4f5c\u7528\uff0cadaround \u4f1a\u4f7f\u7528 list \u4e2d\u5168\u90e8\u7684 batch\u3002\u4e00\u822c\u4f7f\u7528\u9ed8\u8ba4\u503c 10 \u5373\u53ef\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"num_step"}),": \u6bcf\u4e2a Conv/Linear \u7684\u4f18\u5316\u6b21\u6570\uff0c\u6b21\u6570\u8d8a\u5927\u7406\u8bba\u6548\u679c\u8d8a\u597d\u3002\u8fd9\u662f\u60a8\u5728 adaround \u7684\u8c03\u53c2\u8fc7\u7a0b\u4e2d\u9700\u8981\u5173\u6ce8\u7684\u4e3b\u8981\u53c2\u6570\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"exclude_prefix"}),": \u5982\u679c\u60a8\u6709\u90e8\u5206 module \u4e0d\u60f3\u88ab adaround \u4f18\u5316\uff0c\u53ef\u5728\u6b64\u6dfb\u52a0\u5176 prefix\uff0c\u6240\u6709\u4ee5\u8be5 prefix \u5f00\u5934\u7684 module \u90fd\u4e0d\u4f1a\u88ab\u4f18\u5316\u3002\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u7edd\u5927\u90e8\u5206\u6a21\u578b\u90fd\u4e0d\u9700\u8981\u8bbe\u7f6e\u8be5\u53c2\u6570\uff0c\u53ef\u4ee5\u7a33\u5b9a\u5730\u63d0\u5347 calibration \u7cbe\u5ea6\u3002\u4f46\u6781\u4e2a\u522b\u68c0\u6d4b\u6a21\u578b\u5b58\u5728\u4f18\u5316\u5176\u68c0\u6d4b head \u53cd\u800c\u5bfc\u81f4\u7cbe\u5ea6\u4e0b\u964d\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ef\u901a\u8fc7\u8be5\u53c2\u6570\u8fc7\u6ee4\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"warm_up"}),": [0, 1] \u4e4b\u95f4\u7684\u53c2\u6570\uff0c\u8868\u793a warm_up \u6240\u5360\u6bd4\u7387\uff0c\u524d warm_up * num_step \u7684\u4f18\u5316\u4e0d\u4f1a\u65bd\u52a0\u5bf9 round \u7684\u6b63\u5219\uff0c\u4f7f\u5f97\u4f18\u5316\u53ef\u4ee5\u5b8c\u5168\u4ee5\u7cbe\u5ea6\u6700\u4f18\u4e3a\u51c6\u5219\u8fdb\u884c\u3002\u5bf9\u7cbe\u5ea6\u7684\u5f71\u54cd\u4e0d\u5927\uff0c\u4e00\u822c\u4fdd\u6301\u4e3a\u9ed8\u8ba4\u503c 0.2 \u5373\u53ef\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"weight"}),": round loss \u7684\u6b63\u5219\u5316\u6743\u91cd\u7cfb\u6570\uff0cweight \u8d8a\u5927\u5219 round loss \u5728 loss \u4e2d\u7684\u7edf\u6cbb\u5730\u4f4d\u8d8a\u5f3a\u3002\u8fd9\u662f\u60a8\u5728 adaround \u7684\u8c03\u53c2\u8fc7\u7a0b\u4e2d\u53ef\u5173\u6ce8\u7684\u6b21\u8981\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u662f 0.01\uff0c\u53ef\u9002\u5f53\u5728\u9ed8\u8ba4\u503c\u4e0a\u4e0b\u8c03\u8282, \u5982\u6839\u636e loss \u76f8\u5bf9\u5927\u5c0f\u60c5\u51b5\u5c1d\u8bd5 0.1\u3001 0.001 \u7b49\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"b_range"}),": ",(0,d.jsx)(e.code,{children:"b"})," \u662f\u51b3\u5b9a round loss \u5e73\u6ed1\u7a0b\u5ea6\u7684\u4e00\u4e2a\u53c2\u6570\uff0c",(0,d.jsx)(e.code,{children:"b_range"})," \u63a7\u5236\u5176\u8303\u56f4\u3002\u4e00\u822c\u4e0d\u9700\u8981\u8c03\u8282\uff0c\u4fdd\u6301\u9ed8\u8ba4\u503c [20, 2]\u5373\u53ef\u3002\u8fd9\u610f\u5473\u7740\u8be5\u53c2\u6570\u4e00\u5f00\u59cb\u662f 20\uff0c\u5e76\u968f step \u6570\u7ebf\u6027\u8870\u51cf\u5230 2\u3002"]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"batch_size"})," * ",(0,d.jsx)(e.code,{children:"num_step"})," \u662f\u7b97\u5b50\u5728\u4f18\u5316\u8fc7\u7a0b\u4e2d\u5b9e\u9645\u8dd1\u7684\u6837\u672c\u6570\uff08\u6837\u672c\u7531\u4e8e\u968f\u673a\u91c7\u6837\u4f1a\u6709\u91cd\u590d\uff09\uff0c\u4e00\u4e2a\u53ef\u4f9b\u53c2\u8003\u7684\u53d6\u503c\u662f\u8ba9 ",(0,d.jsx)(e.code,{children:"batch_size"})," * ",(0,d.jsx)(e.code,{children:"num_step"})," \u5728 10000~20000 \u5de6\u53f3\u3002"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-{attention}",children:"\n1. `num_step` **\u662f\u5f71\u54cd Adaround \u7cbe\u5ea6\u7684\u4e3b\u8981\u53c2\u6570\uff0c\u60a8\u5728\u8c03\u6574\u8d85\u53c2\u65f6\u4e00\u822c\u53ea\u9700\u5173\u6ce8\u8be5\u53c2\u6570\u5373\u53ef\u3002**\n\n2. \u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0cAdaround \u5728\u5927\u90e8\u5206\u4efb\u52a1\u4e2d\u90fd\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u8c03\u8282 `num_step` \u53c2\u6570\u7a33\u5b9a\u5730\u63d0\u5347 calibration \u7cbe\u5ea6\uff0c\u4f46\u5728\u68c0\u6d4b\u4efb\u52a1\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u4ed4\u7ec6\u8bbe\u7f6e `exclude_prefix` \u8fc7\u6ee4 head \u4e2d\u7684\u90e8\u5206\u5c42\u624d\u80fd\u5b9e\u73b0\u7cbe\u5ea6\u7684\u63d0\u5347\u3002\u5f53\u60a8\u5728\u68c0\u6d4b\u4efb\u52a1\u4e2d\u9047\u5230 Adaround \u5bfc\u81f4\u6a21\u578b calibration \u7cbe\u5ea6\u4e0b\u964d\u7684\u60c5\u51b5\u65f6\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u76f4\u63a5\u9009\u62e9\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\uff08QAT\uff09\u63d0\u5347\u91cf\u5316\u7cbe\u5ea6\u3002\n\n"})}),"\n",(0,d.jsx)(e.p,{children:"\u5176\u4f59\u53c2\u6570\u8bf4\u660e\u8bf7\u53c2\u8003\u63a5\u53e3\u7684 docstring\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u4f7f\u7528\u65b9\u6cd5-1",children:"\u4f7f\u7528\u65b9\u6cd5"}),"\n",(0,d.jsx)(e.p,{children:"\u6211\u4eec\u652f\u6301\u4e24\u79cd\u7ed9\u6570\u636e\u7684\u65b9\u5f0f\u3002"}),"\n",(0,d.jsx)(e.h4,{id:"listtuple\u63a8\u8350",children:"list/tuple\uff08\u63a8\u8350\uff09"}),"\n",(0,d.jsx)(e.p,{children:"\u7531\u4e8e\u8be5\u63a5\u53e3\u9700\u8981\u9891\u7e41\u8bfb\u53d6\u6570\u636e\uff0c\u6211\u4eec\u63a8\u8350\u60a8\u5c06\u6570\u636e\u6253\u5305\u6210 list/tuple \u9001\u5165\u63a5\u53e3\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u6570\u636e\u5168\u90e8\u642c\u79fb\u5230\u663e\u5b58/\u5185\u5b58\uff08\u53d6\u51b3\u4e8e\u6a21\u578b\u53c2\u6570\u7684 device \uff09\u4e0a\uff0c\u51cf\u5c11\u9891\u7e41\u8bfb\u53d6\u6570\u636e\u5e26\u6765\u7684\u8bbf\u5b58\u74f6\u9888\u3002\u76f8\u5bf9\u4e8e\u4f20 DataLoader \u7684\u65b9\u5f0f\uff0c\u8be5\u65b9\u5f0f\u5177\u6709\u8f83\u5927\u7684\u6027\u80fd\u4f18\u52bf\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'# \u5148\u8d70\u6b63\u5e38\u7684 calibration \u6d41\u7a0b\ncalib_model = horizon.quantization.prepare_qat_fx(float_model)\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.CALIBRATION\n)\nfor image, label in dataloader:\n    calib_model(image)\n\n# \u51c6\u5907 adaround \u6240\u9700\u6570\u636e\nbatches = []\nn = 0\nfor image, label in dataloader:\n    if n >= 10:\n        break\n    batches.append(image)\n    n += 1\n\n# \u81ea\u5b9a\u4e49 adaround \u914d\u7f6e\u3002\u7528\u6237\u81ea\u5b9a\u4e49\u4e0d\u4f18\u5316\u6a21\u578b\u4e2d\u7684 head\u3002\ncustom_config_dict = {"num_steps": 100, "exclude_prefix": ["head",]}\n\nhorizon.quantization.weight_reconstruction(\n    calib_model,\n    batches,\n    None, # batch_process_func\uff0c\u7531\u4e8e batches \u4e2d\u7684\u6570\u636e\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\uff0c\u6b64\u5904\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef\n    custom_config_dict,\n)\n\n# eval\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.VALIDATION\n)\nfor image, label in eval_dataloader:\n    pred = calib_model(image)\n    pass\n'})}),"\n",(0,d.jsx)(e.h4,{id:"torchutilsdatadataloader",children:"torch.utils.data.DataLoader"}),"\n",(0,d.jsx)(e.p,{children:"\u5c3d\u7ba1\u4f20 list \u7684\u65b9\u5f0f\u5728\u6027\u80fd\u4e0a\u6709\u8f83\u5927\u4f18\u52bf\uff0c\u4f46\u56e0\u4e3a\u9700\u8981\u5c06\u7528\u6765\u6821\u51c6\u7684\u6570\u636e\u5168\u90e8\u52a0\u8f7d\u5230\u663e\u5b58/\u5185\u5b58\u4e0a\uff0c\u5bf9\u8ba1\u7b97\u8bbe\u5907\u5b58\u5728\u4e00\u5b9a\u8981\u6c42\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u652f\u6301\u60a8\u76f4\u63a5\u4f20 torch DataLoader \u4ee5\u65b9\u4fbf\u60a8\u5728\u67d0\u4e9b\u573a\u666f\u548c\u4efb\u52a1\u4e0b\u7684\u4f7f\u7528\u3002\u7531\u4e8e DataLoader \u53ea\u4f1a\u5728\u5fc5\u8981\u7684\u65f6\u5019\u52a0\u8f7d\u6570\u636e\uff0c\u76f8\u6bd4 list \u5360\u7528\u663e\u5b58\u66f4\u5c0f\uff0c\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u7684\u8f83\u9ad8\u7684\u8bbf\u5b58\u538b\u529b\u3002\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0cDataLoader \u65b9\u5f0f\u7684\u6027\u80fd\u8868\u73b0\u4e0e list \u65b9\u5f0f\u5b58\u5728\u8f83\u5927\u5dee\u8ddd\uff0c\u8bf7\u60a8\u914c\u60c5\u4f7f\u7528\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'# \u5148\u8d70\u6b63\u5e38\u7684 calibration \u6d41\u7a0b\ncalib_model = horizon.quantization.prepare_qat_fx(float_model)\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.CALIBRATION\n)\nfor image, label in dataloader:\n    calib_model(image)\n\n# \u81ea\u5b9a\u4e49 adaround \u914d\u7f6e\uff0c\u8fd9\u91cc\u548c\u4e0a\u9762\u4e0d\u540c\u7684\u662f\u8bbe\u7f6e\u4e86 num_batches \u4e3a 16\uff0c\u8868\u793a dataloader \u4e2d\u5b9e\u9645\u53ea\u6709 16 \u4e2a batch \u4f1a\u53c2\u4e0e\u4f18\u5316\ncustom_config_dict = {"num_batches": 16, "num_steps": 100, "exclude_prefix": ["head",]}\n\nhorizon.quantization.mix_calibration(\n    calib_model,\n    dataloader, # \u76f4\u63a5\u4f20 dataloader\n    lambda x: x[0], # batch_process_func\uff0c\u7531\u4e8e\u8be5 dataloader \u8fd4\u56de\u7684 batch \u662f Tuple[image, label] \u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u7d22\u5f15\u540e\u624d\u80fd\u9001\u5165\u6a21\u578b\n    custom_config_dict,\n)\n\n# eval\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.VALIDATION\n)\nfor image, label in eval_dataloader:\n    pred = calib_model(image)\n    pass\n'})}),"\n",(0,d.jsx)(e.h2,{id:"\u81ea\u52a8\u6821\u51c6\u5b9e\u9a8c\u6027\u529f\u80fd",children:"\u81ea\u52a8\u6821\u51c6\uff08\u5b9e\u9a8c\u6027\u529f\u80fd\uff09"}),"\n",(0,d.jsx)(e.p,{children:"\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\u5de5\u5177\u94fe\u76ee\u524d\u5df2\u7ecf\u96c6\u6210\u4e86\u591a\u79cd calibration \u7b56\u7565\uff0c\u5982 mse\u3001kl\u3001percentile\u3001min-max \u7b49\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u6a21\u578b\uff0cmse \u90fd\u80fd\u53d6\u5f97\u4e0d\u9519\u7684 calibration \u7cbe\u5ea6\u3002\u4f46\u5982\u679c\u60a8\u76f8\u5173\u77e5\u8bc6\u50a8\u5907\u4e30\u5bcc\uff0c\u6709\u610f\u613f\u63a2\u7d22\u7cbe\u5ea6\u66f4\u9ad8\u7684 calibration \u6d41\u6c34\u7ebf\uff0c\u76ee\u524d\u7684 calibration \u63a5\u53e3\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3\u60a8\u7684\u8981\u6c42\u3002\u5bf9\u6b64\uff0c\u6211\u4eec\u7279\u522b\u63a2\u7d22\u5f00\u53d1\u4e86\u81ea\u52a8\u6821\u51c6\u7684\u63a5\u53e3\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u63a5\u53e3\u81ea\u5b9a\u4e49\u9700\u8981\u641c\u7d22\u7684 calibration \u7b56\u7565\u548c\u8d85\u53c2\u6570\uff0c\u57fa\u4e8e\u6a21\u578b\u8f93\u51fa\u76f8\u4f3c\u5ea6\u9010\u5c42\u641c\u7d22\u6700\u4f18\u7684\u91cf\u5316\u53c2\u6570\u3002"}),"\n",(0,d.jsx)(e.p,{children:"\u672c\u63a5\u53e3\u4e0e\u6211\u4eec Calibration \u6d41\u7a0b\u4e2d\u7684 Mix Observer \u6709\u6240\u4e0d\u540c\uff0c\u5177\u4f53\u5982\u4e0b\uff1a"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"Mix Observer \u5728\u641c\u7d22\u67d0\u4e00\u7b97\u5b50\u7684\u91cf\u5316\u53c2\u6570\u65f6\uff0c\u53ea\u5c06\u8be5\u7b97\u5b50\u7684\u8f93\u51fa\u76f8\u4f3c\u5ea6\u4f5c\u4e3a\u8bc4\u4ef7\u6307\u6807\u3002\u800c\u672c\u63a5\u53e3\u5c06\u6a21\u578b\u6700\u7ec8\u8f93\u51fa\u7684\u76f8\u4f3c\u5ea6\u4f5c\u4e3a\u8bc4\u4ef7\u6307\u6807\u6765\u641c\u7d22\u6700\u4f18\u91cf\u5316\u53c2\u6570\u3002"}),"\n",(0,d.jsx)(e.li,{children:"Mix Observer \u5728\u641c\u7d22\u67d0\u4e00\u7b97\u5b50\u7684\u91cf\u5316\u53c2\u6570\u65f6\uff0c\u524d\u9762\u7684\u7b97\u5b50\u90fd\u662f\u6d6e\u70b9\u8ba1\u7b97\uff0c\u6ca1\u6709\u8003\u8651\u7d2f\u79ef\u7684\u91cf\u5316\u8bef\u5dee\u3002\u800c\u672c\u63a5\u53e3\u5728\u641c\u7d22\u67d0\u4e00\u7b97\u5b50\u7684\u91cf\u5316\u53c2\u6570\u65f6\uff0c\u5176\u524d\u9762\u6240\u6709\u7684\u6fc0\u6d3b\u548c\u6743\u91cd\u90fd\u662f\u91cf\u5316\u7684\u3002"}),"\n"]}),"\n",(0,d.jsx)(e.p,{children:"\u6211\u4eec\u5f00\u5c55\u7684\u6d88\u878d\u5b9e\u9a8c\u8868\u660e\u4e0a\u8ff0\u4e24\u70b9\u90fd\u5bf9\u6a21\u578b\u7684 Calibration \u7cbe\u5ea6\u6709\u4e00\u5b9a\u63d0\u5347\u4f5c\u7528\u3002"}),"\n",(0,d.jsx)(e.p,{children:"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u8be5\u7b56\u7565\u57fa\u4e8e\u5bf9\u6a21\u578b\u5404\u5c42\u7684\u9010\u5c42\u641c\u7d22\uff0c\u5e76\u4ee5\u6a21\u578b\u6700\u7ec8\u8f93\u51fa\u4f5c\u4e3a\u91cf\u5316\u53c2\u6570\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u9700\u8981\u8017\u8d39\u8f83\u591a\u7684\u65f6\u957f\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u57fa\u672c\u539f\u7406-1",children:"\u57fa\u672c\u539f\u7406"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u8bb0\u5f55\u6d6e\u70b9\u6a21\u578b\u6240\u6709 DeQuantize \u7b97\u5b50\u7684\u8f93\u51fa"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u4ee5\u62d3\u6251\u6392\u5e8f\u9010\u4e2a\u904d\u5386\u5404\u4e2a\u5f85\u91cf\u5316\u7684\u7b97\u5b50\uff1a"}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u6821\u51c6\u67d0\u4e2a\u7b97\u5b50\u65f6\uff0c \u5c06\u5176 weight\uff08\u5982\u679c\u6709\uff09 \u548c activation \u8fdb\u884c\u91cf\u5316\uff0c\u904d\u5386\u7528\u6237\u6307\u5b9a\u7684 calibration \u7b56\u7565\uff0c\u8bb0\u5f55\u6a21\u578b\u5bf9\u5e94\u7684 DeQuantize \u8f93\u51fa"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u5bf9\u91cf\u5316\u8f93\u51fa\u548c\u6d6e\u70b9\u8f93\u51fa\u8ba1\u7b97 L2 \u8ddd\u79bb \uff0c\u66f4\u65b0\u6700\u4f18\u91cf\u5316\u53c2\u6570"}),"\n"]}),"\n",(0,d.jsxs)(e.li,{children:["\n",(0,d.jsx)(e.p,{children:"\u904d\u5386\u5b8c\u6240\u6709\u7684 calibration \u7b56\u7565\u540e\uff0c\u5c06\u6700\u4f18\u91cf\u5316\u53c2\u6570\u5e94\u7528\u5230\u8be5\u7b97\u5b50\u4e0a\uff0c\u5f00\u59cb\u641c\u7d22\u4e0b\u4e00\u4e2a\u7b97\u5b50"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(e.h3,{id:"\u63a5\u53e3\u5b9a\u4e49-1",children:"\u63a5\u53e3\u5b9a\u4e49"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'def auto_calibrate(\n    calib_model: torch.nn.Module,\n    batches: Union[list, tuple, DataLoader],\n    num_batches: int = 10,\n    batch_process_func: Callable = None,\n    observer_list: list = ("percentile", "mse", "kl", "min_max"),\n    percentile_list: list = None,\n):\n    pass\n'})}),"\n",(0,d.jsx)(e.p,{children:"\u8fdb\u4e00\u6b65\u7684\u63a5\u53e3\u8bf4\u660e\u8bf7\u53c2\u8003\u63a5\u53e3\u7684 docstring\u3002"}),"\n",(0,d.jsx)(e.h3,{id:"\u4f7f\u7528\u65b9\u6cd5-2",children:"\u4f7f\u7528\u65b9\u6cd5"}),"\n",(0,d.jsx)(e.p,{children:"\u6211\u4eec\u652f\u6301\u4e24\u79cd\u7ed9\u6570\u636e\u7684\u65b9\u5f0f\u3002"}),"\n",(0,d.jsx)(e.h4,{id:"listtuple\u63a8\u8350-1",children:"list/tuple\uff08\u63a8\u8350\uff09"}),"\n",(0,d.jsx)(e.p,{children:"\u7531\u4e8e\u8be5\u63a5\u53e3\u9700\u8981\u9891\u7e41\u8bfb\u53d6\u6570\u636e\uff0c\u6211\u4eec\u63a8\u8350\u60a8\u5c06\u6570\u636e\u6253\u5305\u6210 list/tuple \u9001\u5165\u63a5\u53e3\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u5c06\u6570\u636e\u5168\u90e8\u642c\u79fb\u5230\u663e\u5b58/\u5185\u5b58\uff08\u53d6\u51b3\u4e8e\u6a21\u578b\u53c2\u6570\u7684 device \uff09\u4e0a\uff0c\u51cf\u5c11\u9891\u7e41\u8bfb\u53d6\u6570\u636e\u5e26\u6765\u7684\u8bbf\u5b58\u74f6\u9888\u3002\u76f8\u5bf9\u4e8e\u4f20 DataLoader \u7684\u65b9\u5f0f\uff0c\u8be5\u65b9\u5f0f\u5177\u6709\u8f83\u5927\u7684\u6027\u80fd\u4f18\u52bf\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'calib_model = horizon.quantization.prepare_qat_fx(float_model)\nbatches = []\nn = 0\nfor image, label in dataloader:\n    if n >= 10:\n        break\n    batches.append(image)\n    n += 1\n\nhorizon.quantization.auto_calibration(\n    calib_model,\n    batches,\n    10, # num_batches\uff0c\u8be5\u65b9\u5f0f\u4e0b\u4e0d\u8d77\u4f5c\u7528\uff0c\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef\u3002list \u4e2d\u6240\u6709\u7684 batch \u90fd\u4f1a\u88ab\u7528\u6765\u6821\u51c6\n    None, # batch_process_func\uff0c\u7531\u4e8e batches \u4e2d\u7684\u6570\u636e\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\uff0c\u6b64\u5904\u4fdd\u6301\u9ed8\u8ba4\u5373\u53ef\n    ["percentile", "min_max"], # \u81ea\u5b9a\u4e49\u641c\u7d22\u7684 calibration \u7b56\u7565\n    [99.99, 99.999, 99.9995, 999.9999], # \u81ea\u5b9a\u4e49\u7684 percentile \u53c2\u6570\n)\n\n# eval\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.VALIDATION\n)\nfor image, label in eval_dataloader:\n    pred = calib_model(image)\n    pass\n'})}),"\n",(0,d.jsx)(e.h4,{id:"torchutilsdatadataloader-1",children:"torch.utils.data.DataLoader"}),"\n",(0,d.jsx)(e.p,{children:"\u5c3d\u7ba1\u4f20 list \u7684\u65b9\u5f0f\u5728\u6027\u80fd\u4e0a\u6709\u8f83\u5927\u4f18\u52bf\uff0c\u4f46\u56e0\u4e3a\u9700\u8981\u5c06\u7528\u6765\u6821\u51c6\u7684\u6570\u636e\u5168\u90e8\u52a0\u8f7d\u5230\u663e\u5b58/\u5185\u5b58\u4e0a\uff0c\u5bf9\u8ba1\u7b97\u8bbe\u5907\u5b58\u5728\u4e00\u5b9a\u8981\u6c42\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e5f\u652f\u6301\u60a8\u76f4\u63a5\u4f20 torch DataLoader \u4ee5\u65b9\u4fbf\u60a8\u5728\u67d0\u4e9b\u573a\u666f\u548c\u4efb\u52a1\u4e0b\u7684\u4f7f\u7528\u3002\u7531\u4e8e DataLoader \u53ea\u4f1a\u5728\u5fc5\u8981\u7684\u65f6\u5019\u52a0\u8f7d\u6570\u636e\uff0c\u76f8\u6bd4 list \u5360\u7528\u663e\u5b58\u66f4\u5c0f\uff0c\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u7684\u8f83\u9ad8\u7684\u8bbf\u5b58\u538b\u529b\u3002\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0cDataLoader \u65b9\u5f0f\u7684\u6027\u80fd\u8868\u73b0\u4e0e list \u65b9\u5f0f\u5b58\u5728\u8f83\u5927\u5dee\u8ddd\uff0c\u8bf7\u60a8\u914c\u60c5\u4f7f\u7528\u3002"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:'calib_model = horizon.quantization.prepare_qat_fx(float_model)\n\nhorizon.quantization.auto_calibration(\n    calib_model,\n    dataloader, # \u76f4\u63a5\u4f20 dataloader\n    10, # num_batches\uff0c\u53ea\u7528 dataloader \u4e2d\u7684 10 \u4e2a batch \u8fdb\u884c\u6821\u51c6\n    lambda x: x[0], # batch_process_func\uff0c\u7531\u4e8e\u8be5 dataloader \u8fd4\u56de\u7684 batch \u662f Tuple[image, label] \u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u9700\u8981\u7d22\u5f15\u540e\u624d\u80fd\u9001\u5165\u6a21\u578b\n    ["percentile", "min_max"], # \u81ea\u5b9a\u4e49\u641c\u7d22\u7684 calibration \u7b56\u7565\n    [99.99, 99.999, 99.9995, 999.9999], # \u81ea\u5b9a\u4e49\u7684 percentile \u53c2\u6570\n)\n\n# eval\ncalib_model.eval()\nhorizon.quantization.set_fake_quantize(\n    calib_model, horizon.quantization.FakeQuantState.VALIDATION\n)\nfor image, label in eval_dataloader:\n    pred = calib_model(image)\n    pass\n'})})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(c,{...n})}):c(n)}},28453:(n,e,a)=>{a.d(e,{R:()=>r,x:()=>t});var l=a(96540);const d={},o=l.createContext(d);function r(n){const e=l.useContext(o);return l.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:r(n.components),l.createElement(o.Provider,{value:e},n.children)}}}]);
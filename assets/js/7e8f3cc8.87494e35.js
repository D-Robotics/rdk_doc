"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[43498],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var s=i(96540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},40534:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Basic_Application/03_40pin_user_guide/i2c","title":"3.3.5 I2C\u5e94\u7528","description":"RDK X3 \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C0\uff0c\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff0cIO\u7535\u538b3.3V\u3002","source":"@site/docs/03_Basic_Application/03_40pin_user_guide/i2c.md","sourceDirName":"03_Basic_Application/03_40pin_user_guide","slug":"/Basic_Application/03_40pin_user_guide/i2c","permalink":"/rdk_doc/Basic_Application/03_40pin_user_guide/i2c","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1751254288000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"3.3.4 \u4e32\u53e3\u5e94\u7528","permalink":"/rdk_doc/Basic_Application/03_40pin_user_guide/uart"},"next":{"title":"3.3.6 SPI\u5e94\u7528","permalink":"/rdk_doc/Basic_Application/03_40pin_user_guide/spi"}}');var t=i(74848),r=i(28453);const c={sidebar_position:5},d="3.3.5 I2C\u5e94\u7528",l={},a=[{value:"\u6d4b\u8bd5\u65b9\u6cd5",id:"\u6d4b\u8bd5\u65b9\u6cd5",level:2},{value:"\u8fd0\u884c\u6548\u679c",id:"\u8fd0\u884c\u6548\u679c",level:2},{value:"\u6d4b\u8bd5\u4ee3\u7801",id:"\u6d4b\u8bd5\u4ee3\u7801",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"335-i2c\u5e94\u7528",children:"3.3.5 I2C\u5e94\u7528"})}),"\n",(0,t.jsx)(n.p,{children:"RDK X3 \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C0\uff0c\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff0cIO\u7535\u538b3.3V\u3002"}),"\n",(0,t.jsx)(n.p,{children:"RDK X5 \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C5\uff08\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff09\u548c I2C0\uff08\u7269\u7406\u7ba1\u811a\u53f7 27 \u548c 28\uff09\uff0cIO\u7535\u538b3.3V\u3002"}),"\n",(0,t.jsx)(n.p,{children:"RDX Ultra \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C4\uff08\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff09 \u548c I2C6\uff08\u7269\u7406\u7ba1\u811a\u53f7 27 \u548c 28\uff09\uff0cIO\u7535\u538b3.3V\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u8bf7\u53c2\u9605 ",(0,t.jsx)(n.code,{children:"/app/40pin_samples/test_i2c.py"}),"\u4e86\u89e3\u5982\u4f55\u4f7f\u7528I2C\u7684\u8be6\u7ec6\u4fe1\u606f\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"\u6d4b\u8bd5\u65b9\u6cd5",children:"\u6d4b\u8bd5\u65b9\u6cd5"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f ",(0,t.jsx)(n.code,{children:"python3 /app/40pin_samples/test_i2c.py"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u9996\u5148\u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4f7f\u80fd\u7684 I2C \u603b\u7ebf"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u901a\u8fc7\u8f93\u5165\u603b\u7ebf\u53f7\u626b\u63cf\u5f97\u5230\u5f53\u524d\u603b\u7ebf\u4e0a\u8fde\u63a5\u4e86\u54ea\u4e9b\u5916\u8bbe"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u8f93\u5165\u5916\u8bbe\u5730\u5740\uff0816\u8fdb\u5236\u6570\uff09\uff0c\u6d4b\u8bd5\u7a0b\u5e8f\u4f1a\u4ece\u8be5\u5916\u8bbe\u4e0a\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u8fd0\u884c\u6548\u679c",children:"\u8fd0\u884c\u6548\u679c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Starting demo now! Press CTRL+C to exit\nList of enabled I2C controllers:\n/dev/i2c-0  /dev/i2c-1\nPlease input I2C BUS num:1\n     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:          -- -- -- -- -- -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- UU -- -- -- --\n40: 40 -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\nPlease input I2C device num(Hex):40\nRead data from device 40 on I2C bus 1\nread value= b'`'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u6d4b\u8bd5\u4ee3\u7801",children:"\u6d4b\u8bd5\u4ee3\u7801"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python3\n\nimport sys\nimport signal\nimport os\nimport time\n\n# \u5bfc\u5165i2cdev\nfrom i2cdev import I2C\n\ndef signal_handler(signal, frame):\n    sys.exit(0)\n\ndef i2cdevTest():\n    # device, bus = 0x51, 0\n    bus = input("Please input I2C BUS num:")\n    os.system(\'i2cdetect -y -r \' + bus)\n    device = input("Please input I2C device num(Hex):")\n    print("Read data from device %s on I2C bus %s" % (device, bus))\n    i2c = I2C(eval("0x" + device), int(bus))\n    value = i2c.read(1)\n    i2c.write(value)\n    print("read value=", value)\n    i2c.close()\n\nif __name__ == \'__main__\':\n    signal.signal(signal.SIGINT, signal_handler)\n    print("Starting demo now! Press CTRL+C to exit")\n    print("List of enabled I2C controllers:")\n    os.system(\'ls /dev/i2c*\')\n    while True:\n        i2cdevTest()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);
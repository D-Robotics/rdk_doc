"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[7785],{12593:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"Advanced_development/mcu_development/S100/mcu_adc","title":"ADC\u4f7f\u7528\u6307\u5357","description":"\u786c\u4ef6\u652f\u6301","source":"@site/docs_s/07_Advanced_development/05_mcu_development/01_S100/07_mcu_adc.md","sourceDirName":"07_Advanced_development/05_mcu_development/01_S100","slug":"/Advanced_development/mcu_development/S100/mcu_adc","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_adc","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1752312863000,"sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"SPI\u4f7f\u7528\u6307\u5357","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_spi"},"next":{"title":"IPC\u4f7f\u7528\u6307\u5357","permalink":"/rdk_doc/rdk_s/Advanced_development/mcu_development/S100/mcu_ipc"}}');var a=t(74848),d=t(28453);const o={sidebar_position:7},s="ADC\u4f7f\u7528\u6307\u5357",c={},i=[{value:"\u786c\u4ef6\u652f\u6301",id:"\u786c\u4ef6\u652f\u6301",level:2},{value:"\u4ee3\u7801\u8def\u5f84",id:"\u4ee3\u7801\u8def\u5f84",level:2},{value:"\u5e94\u7528sample",id:"\u5e94\u7528sample",level:2},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",level:3},{value:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",id:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",level:3},{value:"void Adc_Init(const Adc_ConfigType* ConfigPtr)",id:"void-adc_initconst-adc_configtype-configptr",level:4},{value:"Std_ReturnType Adc_SetupResultBuffer(Adc_GroupType Group, const Adc_ValueGroupType* DataBufferPtr)",id:"std_returntype-adc_setupresultbufferadc_grouptype-group-const-adc_valuegrouptype-databufferptr",level:4},{value:"void Adc_DeInit(void)",id:"void-adc_deinitvoid",level:4},{value:"void Adc_StartGroupConversion(Adc_GroupType Group)",id:"void-adc_startgroupconversionadc_grouptype-group",level:4},{value:"Std_ReturnType Adc_ReadGroup(Adc_GroupType Group, Adc_ValueGroupType* DataBufferPt)",id:"std_returntype-adc_readgroupadc_grouptype-group-adc_valuegrouptype-databufferpt",level:4},{value:"void Adc_EnableHardwareTrigger(Adc_GroupType Group)",id:"void-adc_enablehardwaretriggeradc_grouptype-group",level:4},{value:"void Adc_DisableHardwareTrigger(Adc_GroupType Group)",id:"void-adc_disablehardwaretriggeradc_grouptype-group",level:4},{value:"void Adc_EnableGroupNotification(Adc_GroupType Group)",id:"void-adc_enablegroupnotificationadc_grouptype-group",level:4},{value:"void Adc_DisableGroupNotification(Adc_GroupType Group)",id:"void-adc_disablegroupnotificationadc_grouptype-group",level:4},{value:"Adc_StatusType Adc_GetGroupStatus(Adc_GroupType Group)",id:"adc_statustype-adc_getgroupstatusadc_grouptype-group",level:4},{value:"Adc_StreamNumSampleType Adc_GetStreamLastPointer(Adc_GroupType Group, Adc_ValueGroupType** PtrToSamplePtr)",id:"adc_streamnumsampletype-adc_getstreamlastpointeradc_grouptype-group-adc_valuegrouptype-ptrtosampleptr",level:4},{value:"void Adc_GetVersionInfo(Std_VersionInfoType* versioninfo)",id:"void-adc_getversioninfostd_versioninfotype-versioninfo",level:4},{value:"Std_ReturnType Adc_SetPowerState(Adc_PowerStateRequestResultType* Result)",id:"std_returntype-adc_setpowerstateadc_powerstaterequestresulttype-result",level:4},{value:"Std_ReturnType Adc_GetCurrentPowerState(Adc_PowerStateType* CurrentPowerState, Adc_PowerStateRequestResultType* Result)",id:"std_returntype-adc_getcurrentpowerstateadc_powerstatetype-currentpowerstate-adc_powerstaterequestresulttype-result",level:4},{value:"Std_ReturnType Adc_GetTargetPowerState(Adc_PowerStateType* TargetPowerState, Adc_PowerStateRequestResultType* Result)",id:"std_returntype-adc_gettargetpowerstateadc_powerstatetype-targetpowerstate-adc_powerstaterequestresulttype-result",level:4},{value:"Std_ReturnType Adc_PreparePowerState(Adc_PowerStateType PowerState, Adc_PowerStateRequestResultType* Result)",id:"std_returntype-adc_preparepowerstateadc_powerstatetype-powerstate-adc_powerstaterequestresulttype-result",level:4},{value:"Std_ReturnType Adc_PreparePowerState(Adc_PowerStateType PowerState, Adc_PowerStateRequestResultType* Result)",id:"std_returntype-adc_preparepowerstateadc_powerstatetype-powerstate-adc_powerstaterequestresulttype-result-1",level:4},{value:"void Adc_EnableWdgNotification(Adc_ChannelType ChannelId)",id:"void-adc_enablewdgnotificationadc_channeltype-channelid",level:4},{value:"void Adc_DisableWdgNotification(Adc_ChannelType ChannelId)",id:"void-adc_disablewdgnotificationadc_channeltype-channelid",level:4}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"adc\u4f7f\u7528\u6307\u5357",children:"ADC\u4f7f\u7528\u6307\u5357"})}),"\n",(0,a.jsx)(n.h2,{id:"\u786c\u4ef6\u652f\u6301",children:"\u786c\u4ef6\u652f\u6301"}),"\n",(0,a.jsx)(n.p,{children:"S100 Adc \u6709\u4e00\u4e2aAdc\u786c\u4ef6\uff0c\u5305\u542bchennel0-channel13\u548cchannel15\u517115\u4e2a\u901a\u9053\u3002"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Adc\u53ef\u6d4b\u8bd5\u7535\u538b\u8303\u56f4\uff1a100mv - 1700mv\u3002"}),"\n",(0,a.jsx)(n.li,{children:"\u786c\u4ef6\u89e6\u53d1\u3001inject\u6a21\u5f0f\u4e0b\u53ea\u5141\u8bb8\u6709\u4e00\u4e2a\u7ec4\u3002"}),"\n",(0,a.jsx)(n.li,{children:"Adc\u5728\u6e29\u5ea6\u53d8\u5316\u8d85\u8fc720\xb0\u65f6\uff0c\u8981\u8fdb\u884c\u6821\u51c6\u64cd\u4f5c\u3002"}),"\n",(0,a.jsx)(n.li,{children:"Adc\u8f6f\u4ef6\u89e6\u53d1\u8fde\u7eed\u8f6c\u6362\u6a21\u5f0f\u5e94\u5f53\u914d\u5408DMA\u529f\u80fd\u4f7f\u7528\uff0c\u4e0d\u63a8\u8350\u5176\u4ed6\u4f7f\u7528\u65b9\u5f0f\u3002"}),"\n",(0,a.jsx)(n.li,{children:"Adc\u7528\u6237\u63a5\u53e3\u7684\u4f7f\u7528\u9700\u8981\u786e\u4fdd\u4e0a\u7535\u81ea\u68c0\u7ed3\u675f\u540e\u8fdb\u884c\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"\u4ee3\u7801\u8def\u5f84",children:"\u4ee3\u7801\u8def\u5f84"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"\u6587\u4ef6\u8def\u5f84"})}),(0,a.jsx)(n.th,{children:(0,a.jsx)(n.strong,{children:"\u4f5c\u7528"})})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/inc/Adc.h"})}),(0,a.jsx)(n.td,{children:"\u516c\u5171API\u63a5\u53e3\uff0c\u4f9b\u4e0a\u5c42\u8c03\u7528\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/inc/Adc_Lld.h"})}),(0,a.jsx)(n.td,{children:"\u58f0\u660e\u5e95\u5c42\u786c\u4ef6\u64cd\u4f5c\u51fd\u6570\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/inc/Adc_Private.h"})}),(0,a.jsx)(n.td,{children:"\u5b9a\u4e49\u79c1\u6709\u7ed3\u6784\u3001\u5b8f\u548c\u51fd\u6570\u58f0\u660e\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/src/Adc.c"})}),(0,a.jsx)(n.td,{children:"\u5b9e\u73b0\u516c\u5171API\uff0c\u8c03\u7528\u5e95\u5c42\u51fd\u6570\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/src/Adc_Lld.c"})}),(0,a.jsx)(n.td,{children:"\u5b9e\u73b0\u5e95\u5c42\u786c\u4ef6\u64cd\u4f5c\uff0c\u76f4\u63a5\u914d\u7f6e\u5bc4\u5b58\u5668\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Adc/src/Adc_Private.c"})}),(0,a.jsx)(n.td,{children:"\u5b9e\u73b0\u79c1\u6709\u51fd\u6570\uff0c\u8f85\u52a9\u9a71\u52a8\u5185\u90e8\u903b\u8f91\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"McalCdd/Common/Register/inc/Adc_Register.h"})}),(0,a.jsx)(n.td,{children:"\u5b9a\u4e49ADC\u5916\u8bbe\u5bc4\u5b58\u5668\u5730\u5740\u548c\u4f4d\u57df\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Platform/Schm/SchM_Adc.h"})}),(0,a.jsx)(n.td,{children:"\u7ba1\u7406ADC\u7684\u8bbf\u95ee\u6743\u9650\u548c\u8d44\u6e90\u4fdd\u62a4\uff08\u5982\u4e2d\u65ad\u5b89\u5168\uff09\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Adc/inc/Adc_PBcfg.h"})}),(0,a.jsx)(n.td,{children:"\u5b9a\u4e49\u677f\u7ea7\u5916\u8bbe\u914d\u7f6e\u53c2\u6570\uff08\u5982\u901a\u9053\u3001\u91c7\u6837\u7387\u7b49\uff09\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Adc/inc/Adc_Cfg.h"})}),(0,a.jsx)(n.td,{children:"\u63d0\u4f9b\u901a\u7528\u914d\u7f6e\u5b8f\u6216\u9ed8\u8ba4\u914d\u7f6e\u53c2\u6570\uff08\u5982\u6700\u5927\u901a\u9053\u6570\u3001\u4e2d\u65ad\u4f18\u5148\u7ea7\uff09\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"Config/McalCdd/gen_s100_sip_B_mcu1/Adc/src/Adc_PBcfg.c"})}),(0,a.jsx)(n.td,{children:"\u5b9e\u73b0\u677f\u7ea7\u914d\u7f6e\u6570\u636e\uff08\u5982\u901a\u9053\u6620\u5c04\u3001\u786c\u4ef6\u53c2\u6570\uff09\u3002"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.code,{children:"samples/Adc/src/Adc_Cmd.c"})}),(0,a.jsx)(n.td,{children:"ADC sample \u4ee3\u7801"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"\u5e94\u7528sample",children:"\u5e94\u7528sample"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"AdcTest"})," \u547d\u4ee4\u7528\u4e8e\u5bf9\u8bbe\u5907\u6267\u884c ADC\uff08\u6a21\u6570\u8f6c\u6362\u5668\uff09\u91c7\u6837\u6d4b\u8bd5\u3002\u5b83\u53ef\u4ee5\u8bfb\u53d6\u7279\u5b9a\u901a\u9053\u6216\u591a\u4e2a\u901a\u9053\u7684\u7684ADC\u503c\uff0c\u53d6\u503c\u5e76\u663e\u793a\u7ed3\u679c\uff08\u4ee5\u539f\u59cb\u503c\u548c\u6beb\u4f0f (mv) \u683c\u5f0f\uff09\u3002"]}),"\n",(0,a.jsx)(n.h3,{id:"\u4f7f\u7528\u793a\u4f8b",children:"\u4f7f\u7528\u793a\u4f8b"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u8bed\u6cd5"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"AdcTest [ADC \u901a\u9053]\n"})}),"\n",(0,a.jsx)(n.p,{children:"ADC \u901a\u9053 (\u53ef\u9009): \u8981\u8bfb\u53d6\u7684\u7279\u5b9a ADC \u901a\u9053\u3002\u5982\u679c\u672a\u63d0\u4f9b\uff0c\u8be5\u547d\u4ee4\u5c06\u8bfb\u53d6\u591a\u4e2a\u901a\u9053\u3002"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u793a\u4f8b"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"\u8bfb\u53d6\u901a\u9053 1 \u7684 ADC \u503c\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"D-Robotics:/$ Adc_Test 1\n[052.860562 0]--------------Adc_PrivateApiTest start-----------!\n[052.876472 0]AdcCurrentValue [1]: 2404 -> 1056 mv\n[052.869226 0]--------------Adc_PrivateApiTest end!-----------\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u8bfb\u53d6\u6240\u6709\u901a\u9053\u7684 ADC \u503c\uff1a"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"D-Robotics:/$ Adc_Test\n[038.836359 0]--------------Adc_PrivateApiTest start-----------!\n[038.852268 0]AdcCurrentValue [0]: 1117 -> 490 mv\n[038.852648 0]BoradIdMsb code: 6!\n[038.853028 0]\n[038.853212 0]AdcCurrentValue [1]: 2393 -> 1051 mv\n[038.854451 0]BoradIdLsb code: 10!\n[038.854842 0]\n[038.855026 0]AdcCurrentValue [2]: 1754 -> 770 mv\n[038.856320 0]DDR TYPE code: 8!\n[038.856634 0]\n[038.856819 0]AdcCurrentValue [3]: 1725 -> 758 mv\n[038.858210 0]\n[038.858306 0]AdcCurrentValue [4]: 630 -> 276 mv\n[038.858760 0]\n[038.858945 0]AdcCurrentValue [5]: 2515 -> 1105 mv\n[038.860273 0]\n[038.860391 0]AdcCurrentValue [6]: 2492 -> 1095 mv\n[038.860925 0]\n[038.861109 0]AdcCurrentValue [7]: 2156 -> 947 mv\n[038.862341 0]\n[038.862525 0]AdcCurrentValue [8]: 2163 -> 950 mv\n[038.863067 0]\n[038.863252 0]AdcCurrentValue [9]: 2161 -> 949 mv\n[038.864483 0]\n[038.864667 0]AdcCurrentValue [10]: 2169 -> 953 mv\n[038.865220 0]\n[038.866262 0]AdcCurrentValue [11]: 2223 -> 977 mv\n[038.866665 0]\n[038.866850 0]AdcCurrentValue [12]: 1837 -> 807 mv\n[038.868234 0]\n[038.868331 0]AdcCurrentValue [13]: 2101 -> 923 mv\n[038.868825 0]\n[038.868999 0]PASS.\n[038.869226 0]--------------Adc_PrivateApiTest end!-----------\n\n"})}),"\n",(0,a.jsx)(n.h3,{id:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3",children:"\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3"}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_initconst-adc_configtype-configptr",children:"void Adc_Init(const Adc_ConfigType* ConfigPtr)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aInitializes the ADC hardware units and driver.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_setupresultbufferadc_grouptype-group-const-adc_valuegrouptype-databufferptr",children:"Std_ReturnType Adc_SetupResultBuffer(Adc_GroupType Group, const Adc_ValueGroupType* DataBufferPtr)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aInitializes the group specific ADC result buffer pointer as configured\n             to point to the pDataBufferPtr address which is passed as parameter.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC channel group.\n    DataBufferPtr: pointer to result data buffer.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aStd_ReturnType\n    E_OK: result buffer pointer initialized correctly\n    E_NOT_OK: operation failed or development error occurred\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_deinitvoid",children:"void Adc_DeInit(void)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aReturns all ADC HW Units to a state comparable to their power on reset state.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    ConfigPtr: Pointer to configuration set in Variant PB\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_startgroupconversionadc_grouptype-group",children:"void Adc_StartGroupConversion(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aStarts the conversion of all channels of the requested ADC Channel group.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_readgroupadc_grouptype-group-adc_valuegrouptype-databufferpt",children:"Std_ReturnType Adc_ReadGroup(Adc_GroupType Group, Adc_ValueGroupType* DataBufferPt)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aReads the group conversion result of the last completed conversion round of the requested group\n             and stores the channel values starting at the DataBufferPtr address.\n             The group channel values are stored in ascending channel number order\n             (in contrast to the storage layout of the result buffer if streaming access is configured).\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    DataBufferPtr: ADC results of all channels of the selected group are stored in the data buffer\n                   addressed with the pointer.\nReturn value\uff1aStd_ReturnType\n    E_OK: Aresults are available and written to the data buffer\n    E_NOT_OK: no results are available or development error occurred\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_enablehardwaretriggeradc_grouptype-group",children:"void Adc_EnableHardwareTrigger(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aEnables the hardware trigger for the requested ADC Channel group.\n\nSync/Async\uff1aAsynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    DataBufferPtr: ADC results of all channels of the selected group are stored\n                   in the data buffer addressed with the pointer.\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_disablehardwaretriggeradc_grouptype-group",children:"void Adc_DisableHardwareTrigger(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aDisables the hardware trigger for the requested ADC Channel group.\n\nSync/Async\uff1aAsynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_enablegroupnotificationadc_grouptype-group",children:"void Adc_EnableGroupNotification(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aEnables the notification mechanism for the requested ADC Channel group.\n\nSync/Async\uff1aAsynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_disablegroupnotificationadc_grouptype-group",children:"void Adc_DisableGroupNotification(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aDisables the notification mechanism for the requested ADC Channel group.\n\nSync/Async\uff1aAsynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"adc_statustype-adc_getgroupstatusadc_grouptype-group",children:"Adc_StatusType Adc_GetGroupStatus(Adc_GroupType Group)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aReturns the conversion status of the requested ADC Channel group.\n\nSync/Async\uff1aAsynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aAdc_StatusType\n\tConversion status for the requested group.\n"})}),"\n",(0,a.jsx)(n.h4,{id:"adc_streamnumsampletype-adc_getstreamlastpointeradc_grouptype-group-adc_valuegrouptype-ptrtosampleptr",children:"Adc_StreamNumSampleType Adc_GetStreamLastPointer(Adc_GroupType Group, Adc_ValueGroupType** PtrToSamplePtr)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aReturns the number of valid samples per channel, stored in the result buffer.\n             Reads a pointer, pointing to a position in the group result buffer.\n             With the pointer position, the results of all group channels of the last\n             completed conversion round can be accessed.\n             With the pointer and the return value, all valid group conversion results can\n             be accessed.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    Group: Numeric ID of requested ADC Channel group.\nParameters(inout)\n    None\nParameters(out)\n    PtrToSamplePtr: Pointer to result buffer pointer.\nReturn value\uff1aAdc_StreamNum SampleType\n\tNumber of valid samples per channel.\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_getversioninfostd_versioninfotype-versioninfo",children:"void Adc_GetVersionInfo(Std_VersionInfoType* versioninfo)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aReturns the version information of this module.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    versioninfo: Pointer to where to store the version information of this module.\nReturn value\uff1aNone\n\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_setpowerstateadc_powerstaterequestresulttype-result",children:"Std_ReturnType Adc_SetPowerState(Adc_PowerStateRequestResultType* Result)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis API configures the Adc module so that it enters the already prepared\n             power state, chosen between a predefined set of configured ones.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    Result: If the API returns E_OK:\n        ADC_SERVICE_ACCEPTED: Power state change executed.\n    If the API returns E_NOT_OK:\n        ADC_NOT_INIT: ADC Module not initialized.\n        ADC_SEQUENCE_ERROR: wrong API call sequence.\n        ADC_HW_FAILURE: the HW module has a failure which prevents it to enter the required power state.\nReturn value\uff1aStd_ReturnType\n    E_OK: Power Mode changed\n    E_NOT_OK: request rejected\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_getcurrentpowerstateadc_powerstatetype-currentpowerstate-adc_powerstaterequestresulttype-result",children:"Std_ReturnType Adc_GetCurrentPowerState(Adc_PowerStateType* CurrentPowerState, Adc_PowerStateRequestResultType* Result)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis API returns the current power state of the ADC HW unit.\n\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    CurrentPowerState: The current power mode of the ADC HW Unit is returned in this parameter\n    Result: If the API returns E_OK: ADC_SERVICE_ACCEPTED: Current power mode was returned\n            If the API returns E_NOT_OK: ADC_NOT_INIT: ADC Module not initialized.\nReturn value\uff1aStd_ReturnType\n    E_OK: Mode could be read\n    E_NOT_OK: request rejected\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_gettargetpowerstateadc_powerstatetype-targetpowerstate-adc_powerstaterequestresulttype-result",children:"Std_ReturnType Adc_GetTargetPowerState(Adc_PowerStateType* TargetPowerState, Adc_PowerStateRequestResultType* Result)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis API returns the Target power state of the ADC HW unit.\n\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    None\nParameters(inout)\n    None\nParameters(out)\n    CurrentPowerState: The current power mode of the ADC HW Unit is returned in this parameter\n    Result: If the API returns E_OK: ADC_SERVICE_ACCEPTED: Current power mode was returned\n            If the API returns E_NOT_OK: ADC_NOT_INIT: ADC Module not initialized.\nReturn value\uff1aStd_ReturnType\n    E_OK: Mode could be read\n    E_NOT_OK: request rejected\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_preparepowerstateadc_powerstatetype-powerstate-adc_powerstaterequestresulttype-result",children:"Std_ReturnType Adc_PreparePowerState(Adc_PowerStateType PowerState, Adc_PowerStateRequestResultType* Result)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis API returns the Target power state of the ADC HW unit.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    PowerState: The target power state intended to be attained\nParameters(inout)\n    None\nParameters(out)\n    Result:\n    If the API returns E_OK:\n        ADC_SERVICE_ACCEPTED: ADC Module power state preparation was started.\n    If the API returns E_NOT_OK:\n        ADC_NOT_INIT: ADC Module not initialized.\n        ADC_SEQUENCE_ERROR: wrong API call sequence (Current Power State = Target Power State).\n        ADC_POWER_STATE_NOT_SUPP: ADC Module does not support the requested power state.\n        ADC_TRANS_NOT_POSSIBLE: ADC Module cannot transition directly from the current power\n                                state to the requested power state or the HW peripheral is still busy.\nReturn value\uff1aStd_ReturnType\n    E_OK: Mode could be read\n    E_NOT_OK: request rejected\n"})}),"\n",(0,a.jsx)(n.h4,{id:"std_returntype-adc_preparepowerstateadc_powerstatetype-powerstate-adc_powerstaterequestresulttype-result-1",children:"Std_ReturnType Adc_PreparePowerState(Adc_PowerStateType PowerState, Adc_PowerStateRequestResultType* Result)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aThis API starts the needed process to allow the ADC HW module to\n             enter the requested power state.\n\nSync/Async\uff1aSynchronous\nParameters(in)\n    PowerState: The target power state intended to be attained\nParameters(inout)\n    None\nParameters(out)\n    Result:\n    If the API returns E_OK:\n        ADC_SERVICE_ACCEPTED: ADC Module power state preparation was started.\n    If the API returns E_NOT_OK:\n        ADC_NOT_INIT: ADC Module not initialized.\n        ADC_SEQUENCE_ERROR: wrong API call sequence (Current Power State = Target Power State).\n        ADC_POWER_STATE_NOT_SUPP: ADC Module does not support the requested power state.\n        ADC_TRANS_NOT_POSSIBLE: ADC Module cannot transition directly from the current power\n                                state to the requested power state or the HW peripheral is still busy.\nReturn value\uff1aStd_ReturnType\n    E_OK: Mode could be read\n    E_NOT_OK: request rejected\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_enablewdgnotificationadc_channeltype-channelid",children:"void Adc_EnableWdgNotification(Adc_ChannelType ChannelId)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aEnable notification of a channel that has watchdog functionality\n             configured at initialization\n\nParameters(in)\n    Adc_ChannelType: Symbolic name of channel\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})}),"\n",(0,a.jsx)(n.h4,{id:"void-adc_disablewdgnotificationadc_channeltype-channelid",children:"void Adc_DisableWdgNotification(Adc_ChannelType ChannelId)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"Description\uff1aDisable notification of a channel that has watchdog functionality\n             configured at initialization\n\nParameters(in)\n    Adc_ChannelType: Symbolic name of channel\nParameters(inout)\n    None\nParameters(out)\n    None\nReturn value\uff1aNone\n"})})]})}function l(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const a={},d=r.createContext(a);function o(e){const n=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);
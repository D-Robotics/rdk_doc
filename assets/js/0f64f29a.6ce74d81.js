"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[61733],{25496:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Basic_Application/03_40pin_user_guide/i2c","title":"3.3.5 I2C \u5e94\u7528","description":"RDX S100 \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C5\uff08\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff09\u548c I2C4\uff08\u7269\u7406\u7ba1\u811a\u53f7 27 \u548c 28\uff09\uff0cIO \u7535\u538b 3.3V\u3002","source":"@site/docs_s/03_Basic_Application/03_40pin_user_guide/05_i2c.md","sourceDirName":"03_Basic_Application/03_40pin_user_guide","slug":"/Basic_Application/03_40pin_user_guide/i2c","permalink":"/rdk_doc/rdk_s/Basic_Application/03_40pin_user_guide/i2c","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1760152071000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"3.3.4 \u4e32\u53e3\u5e94\u7528","permalink":"/rdk_doc/rdk_s/Basic_Application/03_40pin_user_guide/uart"},"next":{"title":"3.3.6 SPI \u5e94\u7528","permalink":"/rdk_doc/rdk_s/Basic_Application/03_40pin_user_guide/spi"}}');var r=i(74848),t=i(28453);const c={sidebar_position:5},d="3.3.5 I2C \u5e94\u7528",a={},l=[{value:"\u6d4b\u8bd5\u65b9\u6cd5",id:"\u6d4b\u8bd5\u65b9\u6cd5",level:2},{value:"\u8fd0\u884c\u6548\u679c",id:"\u8fd0\u884c\u6548\u679c",level:2},{value:"\u6d4b\u8bd5\u4ee3\u7801",id:"\u6d4b\u8bd5\u4ee3\u7801",level:2}];function o(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"335-i2c-\u5e94\u7528",children:"3.3.5 I2C \u5e94\u7528"})}),"\n",(0,r.jsx)(e.p,{children:"RDX S100 \u5728 40PIN \u4e0a\u9ed8\u8ba4\u4f7f\u80fd I2C5\uff08\u7269\u7406\u7ba1\u811a\u53f7 3 \u548c 5\uff09\u548c I2C4\uff08\u7269\u7406\u7ba1\u811a\u53f7 27 \u548c 28\uff09\uff0cIO \u7535\u538b 3.3V\u3002"}),"\n",(0,r.jsxs)(e.admonition,{type:"info",children:[(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"40pin \u4e0a\u9700\u8981\u6ce2\u52a8\u62e8\u7801\u5f00\u5173\u6765\u9009\u62e9\u4f7f\u7528 I2C5 \u8fd8\u662f UART2, \u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b\u4e0b\u56fe\uff1a"}),"\n"]}),(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/01_Quick_start/image/hardware_interface/image-rdk_100_funcreuse_40pin.png",alt:"image-rdk_100_funcreuse_40pin"})}),(0,r.jsxs)(e.p,{children:["\u7ba1\u811a\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,r.jsx)(e.a,{href:"/rdk_doc/rdk_s/Basic_Application/03_40pin_user_guide/01_40pin_define#40pin_define",children:"\u7ba1\u811a\u914d\u7f6e\u4e0e\u5b9a\u4e49"})]})]}),"\n",(0,r.jsxs)(e.p,{children:["\u8bf7\u53c2\u9605 ",(0,r.jsx)(e.code,{children:"/app/40pin_samples/test_i2c.py"}),"\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 I2C \u7684\u8be6\u7ec6\u4fe1\u606f\u3002"]}),"\n",(0,r.jsx)(e.admonition,{type:"tip",children:(0,r.jsxs)(e.p,{children:["\u4ee5\u4e0b\u6240\u63d0\u53ca\u7684\u7ba1\u811a\u4ec5\u4f5c\u793a\u4f8b\u8bf4\u660e\uff0c\u4e0d\u540c\u5e73\u53f0\u7684\u7aef\u53e3\u503c\u5b58\u5728\u5dee\u5f02\uff0c\u5b9e\u9645\u60c5\u51b5\u5e94\u4ee5\u5b9e\u9645\u4e3a\u51c6\u3002\u4ea6\u53ef\u76f4\u63a5\u4f7f\u7528",(0,r.jsx)(e.code,{children:"/app/40pin_samples/"}),"\u76ee\u5f55\u4e0b\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u5df2\u5728\u677f\u5b50\u4e0a\u7ecf\u8fc7\u5b9e\u9645\u9a8c\u8bc1\u3002"]})}),"\n",(0,r.jsx)(e.h2,{id:"\u6d4b\u8bd5\u65b9\u6cd5",children:"\u6d4b\u8bd5\u65b9\u6cd5"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["\u8fd0\u884c\u6d4b\u8bd5\u7a0b\u5e8f ",(0,r.jsx)(e.code,{children:"python3 /app/40pin_samples/test_i2c.py"})]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u9996\u5148\u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4f7f\u80fd\u7684 I2C \u603b\u7ebf"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u901a\u8fc7\u8f93\u5165\u603b\u7ebf\u53f7\u626b\u63cf\u5f97\u5230\u5f53\u524d\u603b\u7ebf\u4e0a\u8fde\u63a5\u4e86\u54ea\u4e9b\u5916\u8bbe"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"\u8f93\u5165\u5916\u8bbe\u5730\u5740\uff0816 \u8fdb\u5236\u6570\uff09\uff0c\u6d4b\u8bd5\u7a0b\u5e8f\u4f1a\u4ece\u8be5\u5916\u8bbe\u4e0a\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u8fd0\u884c\u6548\u679c",children:"\u8fd0\u884c\u6548\u679c"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"root@ubuntu:/app/40pin_samples# ./test_i2c.py\nStarting demo now! Press CTRL+C to exit\nList of enabled I2C controllers:\n/dev/i2c-0  /dev/i2c-1  /dev/i2c-2  /dev/i2c-3  /dev/i2c-4  /dev/i2c-5\nPlease input I2C BUS num:0\n     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n00:                         -- -- -- -- -- -- -- --\n10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n20: UU -- -- -- UU -- -- UU -- -- -- UU -- -- -- --\n30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n40: -- -- -- -- 44 -- -- -- -- -- -- -- -- -- -- --\n50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n70: -- -- -- -- -- -- -- --\nPlease input I2C device num(Hex):44\nRead data from device 44 on I2C bus 0\nread value= b'\\x00'\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u6d4b\u8bd5\u4ee3\u7801",children:"\u6d4b\u8bd5\u4ee3\u7801"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:'#!/usr/bin/env python3\n\nimport sys\nimport signal\nimport os\nimport time\n\n# \u5bfc\u5165i2cdev\nfrom i2cdev import I2C\n\ndef signal_handler(signal, frame):\n    sys.exit(0)\n\ndef i2cdevTest():\n    # device, bus = 0x51, 0\n    bus = input("Please input I2C BUS num:")\n    os.system(\'i2cdetect -y -r \' + bus)\n    device = input("Please input I2C device num(Hex):")\n    print("Read data from device %s on I2C bus %s" % (device, bus))\n    i2c = I2C(eval("0x" + device), int(bus))\n    value = i2c.read(1)\n    i2c.write(value)\n    print("read value=", value)\n    i2c.close()\n\nif __name__ == \'__main__\':\n    signal.signal(signal.SIGINT, signal_handler)\n    print("Starting demo now! Press CTRL+C to exit")\n    print("List of enabled I2C controllers:")\n    os.system(\'ls /dev/i2c*\')\n    while True:\n        i2cdevTest()\n'})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>d});var s=i(96540);const r={},t=s.createContext(r);function c(n){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);
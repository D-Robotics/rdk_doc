"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[84838],{28453:(e,n,d)=>{d.d(n,{R:()=>a,x:()=>r});var i=d(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},91920:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>v,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Advanced_development/hardware_development/rdk_x5/V4l2","title":"V4L2 Usage","description":"RDK X5 supports the V4L2 interface, allowing users to access the MIPI interface camera of RDK X5 via V4L2 and obtain image data at various stages such as VIN, ISP, and VSE.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/07_Advanced_development/01_hardware_development/rdk_x5/V4l2.md","sourceDirName":"07_Advanced_development/01_hardware_development/rdk_x5","slug":"/Advanced_development/hardware_development/rdk_x5/V4l2","permalink":"/rdk_doc/en/Advanced_development/hardware_development/rdk_x5/V4l2","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1756547001000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"PoE Power Supply Usage","permalink":"/rdk_doc/en/Advanced_development/hardware_development/rdk_x5/POE"},"next":{"title":"Hardware Materials","permalink":"/rdk_doc/en/Advanced_development/hardware_development/rdk_x5_module/hardware"}}');var s=d(74848),o=d(28453);const a={sidebar_position:6},r="V4L2 Usage",t={},l=[{value:"Mode Switching",id:"mode-switching",level:2},{value:"Mode Introduction",id:"mode-introduction",level:2},{value:"Camera Configuration",id:"camera-configuration",level:2},{value:"Device Topology",id:"device-topology",level:2},{value:"Usage Instructions",id:"usage-instructions",level:2},{value:"V4L2-CTL Commands",id:"v4l2-ctl-commands",level:3},{value:"V4L2 Sample Code",id:"v4l2-sample-code",level:3},{value:"Multimedia Applications",id:"multimedia-applications",level:3},{value:"Known Issues",id:"known-issues",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"v4l2-usage",children:"V4L2 Usage"})}),"\n",(0,s.jsx)(n.p,{children:"RDK X5 supports the V4L2 interface, allowing users to access the MIPI interface camera of RDK X5 via V4L2 and obtain image data at various stages such as VIN, ISP, and VSE."}),"\n",(0,s.jsx)(n.h2,{id:"mode-switching",children:"Mode Switching"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"srpi-config"})," to configure the camera capture mode.",(0,s.jsx)(n.br,{}),"\n","Navigate to ",(0,s.jsx)(n.code,{children:"3 Interface Options"})," -> ",(0,s.jsx)(n.code,{children:"I7 V4L2"}),(0,s.jsx)(n.br,{}),"\n","Select ",(0,s.jsx)(n.code,{children:"I1 V4L2 Enable/disable V4L2 interface for camera"}),"\n",(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/01_hardware_development/rdk_x5/img-20250523-191348.png",alt:"img-20250523-191348"})]}),"\n",(0,s.jsx)(n.h2,{id:"mode-introduction",children:"Mode Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"HBN"})," ",(0,s.jsx)(n.strong,{children:"Normal Mode"}),(0,s.jsx)(n.br,{}),"\n","The camera has a separate set of APIs. Modules after the camera are abstracted as vnodes, including VIN, ISP, VSE, GDC, and Codec. Multiple vnodes form a vflow (similar to a pipeline). The camera and VIN are bound via the attach interface. Users only need to use the HBN interface for module initialization and binding. Once the vflow is established and started, users do not need to manage frame transmission; X5 will automatically pass frames downstream internally."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"V4L2 sif-isp-vse"})," ",(0,s.jsx)(n.strong,{children:"V4L2 Data Stream Mode"}),(0,s.jsx)(n.br,{}),"\n","The camera is added via the V4L2 sensor driver. VIN, ISP, and VSE provide corresponding V4L2 video device nodes, allowing users to directly obtain data via the V4L2 API."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"V4L2 vse alone"})," ",(0,s.jsx)(n.strong,{children:"V4L2 VSE Standalone Mode"}),(0,s.jsx)(n.br,{}),"\n","Provides VSE channel V4L2 video device nodes. Users can directly feed images to the VSE module for processing via the V4L2 API."]}),"\n",(0,s.jsx)(n.h2,{id:"camera-configuration",children:"Camera Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["If you select ",(0,s.jsx)(n.code,{children:"sif-isp-vse"}),", a prompt will appear to select CAM0 or CAM1.",(0,s.jsx)(n.br,{}),"\n","On X5 RDK, cam0 is near the network port, cam1 is farther away.",(0,s.jsx)(n.br,{}),"\n","On X5 MD, you can check the silkscreen on the carrier board."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/01_hardware_development/rdk_x5/img-20250523-191636.png",alt:"img-20250523-191636"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/01_hardware_development/rdk_x5/img-20250523-191648.png",alt:"img-20250523-191648"})}),"\n",(0,s.jsxs)(n.p,{children:["After configuration, reboot the board.",(0,s.jsx)(n.br,{}),"\n","To confirm V4L2 mode is active:",(0,s.jsx)(n.br,{}),"\n","Use ",(0,s.jsx)(n.code,{children:"lsmod"})," to check drivers; you should see v4l-related and sensor-related drivers."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/01_hardware_development/rdk_x5/img-20250523-1918.png",alt:"img-20250523-1918"})}),"\n",(0,s.jsx)(n.h2,{id:"device-topology",children:"Device Topology"}),"\n",(0,s.jsxs)(n.p,{children:["After enabling ",(0,s.jsx)(n.code,{children:"V4L2 sif-isp-vse"})," mode, you can view the device topology with the following commands. This shows the media pipeline structure of the /dev/media0 device, including sensors, ISP, video nodes, and data flow paths."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"media-ctl -d /dev/media0 --print-dot > media0.dot\ndot -Tpng media0.dot -o media0.png\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/01_hardware_development/rdk_x5/img-media0.png",alt:"img-media0"})}),"\n",(0,s.jsx)(n.p,{children:"You can also refer to the table below:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'VIDEO_DEV_CSI0_SIF "/dev/video0"\nVIDEO_DEV_CSI0_ISP "/dev/video4"\nVIDEO_DEV_CSI0_VSE0 "/dev/video8"\nVIDEO_DEV_CSI0_VSE1 "/dev/video9"\nVIDEO_DEV_CSI0_VSE2 "/dev/video10"\nVIDEO_DEV_CSI0_VSE3 "/dev/video11"\nVIDEO_DEV_CSI0_VSE4 "/dev/video12"\nVIDEO_DEV_CSI0_VSE5 "/dev/video13"\n\nVIDEO_DEV_CSI1_SIF "/dev/video1"\nVIDEO_DEV_CSI1_ISP "/dev/video5"\nVIDEO_DEV_CSI1_VSE0 "/dev/video14"\nVIDEO_DEV_CSI1_VSE1 "/dev/video15"\nVIDEO_DEV_CSI1_VSE2 "/dev/video16"\nVIDEO_DEV_CSI1_VSE3 "/dev/video17"\nVIDEO_DEV_CSI1_VSE4 "/dev/video18"\nVIDEO_DEV_CSI1_VSE5 "/dev/video19"\n\nVIDEO_DEV_CSI2_SIF "/dev/video2"\nVIDEO_DEV_CSI2_ISP "/dev/video6"\nVIDEO_DEV_CSI2_VSE0 "/dev/video20"\nVIDEO_DEV_CSI2_VSE1 "/dev/video21"\nVIDEO_DEV_CSI2_VSE2 "/dev/video22"\nVIDEO_DEV_CSI2_VSE3 "/dev/video23"\nVIDEO_DEV_CSI2_VSE4 "/dev/video24"\nVIDEO_DEV_CSI2_VSE5 "/dev/video25"\n\nVIDEO_DEV_CSI3_SIF "/dev/video3"\nVIDEO_DEV_CSI3_ISP "/dev/video7"\nVIDEO_DEV_CSI3_VSE0 "/dev/video26"\nVIDEO_DEV_CSI3_VSE1 "/dev/video27"\nVIDEO_DEV_CSI3_VSE2 "/dev/video28"\nVIDEO_DEV_CSI3_VSE3 "/dev/video29"\nVIDEO_DEV_CSI3_VSE4 "/dev/video30"\nVIDEO_DEV_CSI3_VSE5 "/dev/video31"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"usage-instructions",children:"Usage Instructions"}),"\n",(0,s.jsx)(n.h3,{id:"v4l2-ctl-commands",children:"V4L2-CTL Commands"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"v4l2-ctl --list-formats-ext"})," to query supported resolutions and encoding formats, and to initialize the driver."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"v4l2-ctl -d /dev/video4"})," to capture video data."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"v4l2-ctl --list-formats-ext --device /dev/video4\nv4l2-ctl -d /dev/video4 \\\n        --set-fmt-video=width=640,height=480,pixelformat=NV12 \\\n        --stream-mmap=3 \\\n        --stream-skip=3 \\\n        --stream-to=/tmp/nv12.yuv \\\n        --stream-count=1 \\\n        --stream-poll\n"})}),"\n",(0,s.jsx)(n.h3,{id:"v4l2-sample-code",children:"V4L2 Sample Code"}),"\n",(0,s.jsxs)(n.p,{children:["Sample code is available at ",(0,s.jsx)(n.a,{href:"https://github.com/D-Robotics/x5-hobot-sp-samples/blob/main/debian/app/cdev_demo/v4l2/v4l2_demo.c",children:"v4l2_demo.c"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Parameter Description"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"-w Sensor output width\n-h Sensor output height\n-c Number of images to capture\n-n Sensor capture video node\n-o Input NV12 image video node\n-i Input NV12 image path\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"V4L2 sif-isp-vse"})," mode, capture images and save to file:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./v4l2 -w 1920 -h 1080 -c 10 -n 4\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"V4L2 vse alone"})," mode, use the VSE node alone. Use 1080p.yuv as input, and save the scaled image to file:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./v4l2 -w 1920 -h 1080 -c 10 -n 2 -o 2 -i ./1080p.yuv\n"})}),"\n",(0,s.jsx)(n.h3,{id:"multimedia-applications",children:"Multimedia Applications"}),"\n",(0,s.jsxs)(n.p,{children:["The same sample programs are used for both ",(0,s.jsx)(n.code,{children:"hbn"})," mode and ",(0,s.jsx)(n.code,{children:"V4L2 sif-isp-vse"})," mode. hobot-spdev will automatically select the working mode based on the current driver, with slightly different log outputs."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Supported Examples"})}),"\n",(0,s.jsx)(n.p,{children:"For HDMI display, stop the desktop first:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop lightdm\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/app/cdev_demo/vio2display\n/app/cdev_demo/vio_capture\n/app/cdev_demo/vio2encoder\n/app/cdev_demo/bpu ./sample -f /app/model/basic/yolov5s_672x672_nv12.bin -m 0\n/app/pydev_demo/03_mipi_camera_sample\n"})}),"\n",(0,s.jsx)(n.h2,{id:"known-issues",children:"Known Issues"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"When capturing VSE streams, the ISP sensor configuration file is forcibly set to 1920x1080 resolution."}),"\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"V4L2 vse alone"})," mode, only VSE channel 2 is supported for image feeding and result retrieval."]}),"\n"]})]})}function v(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[6288],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(96540);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},41053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"System_configuration/frequency_management","title":"2.4 Thermal Control and CPU Frequency Management","description":"The following information does not apply to the RDK Ultra development board.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/02_System_configuration/04_frequency_management.md","sourceDirName":"02_System_configuration","slug":"/System_configuration/frequency_management","permalink":"/rdk_doc/en/System_configuration/frequency_management","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1761408377000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"2.3 config.txt Configuration File","permalink":"/rdk_doc/en/System_configuration/config_txt"},"next":{"title":"2.5 Autostart Programs on Boot","permalink":"/rdk_doc/en/System_configuration/self_start"}}');var s=n(74848),o=n(28453);const i={sidebar_position:4},a="2.4 Thermal Control and CPU Frequency Management",c={},l=[{value:"X3 Thermal Control",id:"x3-thermal-control",level:2},{value:"Main Temperature Points",id:"main-temperature-points",level:3},{value:"Configuring Temperature Thresholds",id:"configuring-temperature-thresholds",level:3},{value:"X5 Thermal Control",id:"x5-thermal-control",level:2},{value:"temperature sensor",id:"temperature-sensor",level:3},{value:"Thermal",id:"thermal",level:3},{value:"CPU Frequency Management",id:"cpu-frequency-management",level:2},{value:"CPU Overclocking",id:"cpu-overclocking",level:3}];function h(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"24-thermal-control-and-cpu-frequency-management",children:"2.4 Thermal Control and CPU Frequency Management"})}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["The following information does not apply to the ",(0,s.jsx)(t.code,{children:"RDK Ultra"})," development board."]})}),"\n",(0,s.jsx)(t.h2,{id:"x3-thermal-control",children:"X3 Thermal Control"}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["The following information applies to the ",(0,s.jsx)(t.code,{children:"RDK X3"})," and ",(0,s.jsx)(t.code,{children:"RDK X3 Module"})," development boards."]})}),"\n",(0,s.jsx)(t.p,{children:"To avoid chip overheating under heavy load, power management is implemented at the operating system level. The SoC has an internal temperature sensor, and the Thermal subsystem monitors this temperature."}),"\n",(0,s.jsx)(t.h3,{id:"main-temperature-points",children:"Main Temperature Points"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Boot Temperature:"})," This is the maximum temperature during system startup. If the temperature exceeds this threshold, the system will immediately throttle the CPU and BPU frequencies during boot. The current configuration value can be obtained using the command ",(0,s.jsx)(t.code,{children:"cat /sys/devices/virtual/thermal/thermal_zone0/trip_point_0_temp"}),", with a default value of 80000 (80 degrees Celsius)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Throttling Temperature:"})," This is the temperature at which the CPU and BPU frequencies are throttled. When the temperature exceeds this threshold, the CPU and BPU frequencies are reduced to decrease the SoC power consumption. The CPU frequency can be throttled down to a minimum of 240 MHz, and the BPU frequency can be throttled down to a minimum of 400 MHz. The current configuration value can be obtained using the command ",(0,s.jsx)(t.code,{children:"cat /sys/devices/virtual/thermal/thermal_zone0/trip_point_1_temp"}),", with a default value of 95000 (95 degrees Celsius)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Shutdown Temperature:"})," This is the temperature at which the system shuts down to protect the chip and hardware. It is recommended to ensure proper cooling of the device to prevent shutdowns. After a shutdown, the device does not automatically restart and requires a manual power cycle of the development board to restart. The current configuration value can be obtained using the command ",(0,s.jsx)(t.code,{children:"cat /sys/devices/virtual/thermal/thermal_zone0/trip_point_2_temp"}),", with a default value of 105000 (105 degrees Celsius)."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The current chip operating frequency, temperature, and other status can be viewed using the ",(0,s.jsx)(t.code,{children:"sudo hrut_somstatus"})," command:"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/02_System_configuration/image/cpu_frequency/image-20220714113732289.png",alt:"image-20220714113732289"})}),"\n",(0,s.jsx)(t.h3,{id:"configuring-temperature-thresholds",children:"Configuring Temperature Thresholds"}),"\n",(0,s.jsx)(t.p,{children:"The throttling and shutdown temperature thresholds can be temporarily configured using the following commands. The throttling temperature cannot exceed the shutdown temperature, and the shutdown temperature cannot be set above 105 degrees Celsius."}),"\n",(0,s.jsx)(t.p,{children:"For example, to set the throttling temperature to 85 degrees Celsius:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"echo 85000 > /sys/devices/virtual/thermal/thermal_zone0/trip_point_1_temp\n"})}),"\n",(0,s.jsx)(t.p,{children:"For example, to set the shutdown temperature to 105 degrees Celsius:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"echo 105000 > /sys/devices/virtual/thermal/thermal_zone0/trip_point_2_temp\n"})}),"\n",(0,s.jsx)(t.p,{children:"Please note that the above configuration will be reset to the default values after a system restart. To ensure persistent configuration, these commands can be added to the startup scripts for automatic configuration."}),"\n",(0,s.jsx)(t.h2,{id:"x5-thermal-control",children:"X5 Thermal Control"}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["The following information applies to the ",(0,s.jsx)(t.code,{children:"RDK X5"})," development boards."]})}),"\n",(0,s.jsx)(t.h3,{id:"temperature-sensor",children:"temperature sensor"}),"\n",(0,s.jsx)(t.p,{children:"There are three temperature sensors on X5, which are used to display the temperature of DDR/BPU/CPU. In/sys/class/hwmon/, there is a hwmon0 directory containing the relevant parameters of temperature sensors. temp1_input is the temperature of DDR, temp2input is the temperature of BPU, and temp3_input is the temperature of CPU. The accuracy of temperature is 0.001 degrees Celsius"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat /sys/class/hwmon/hwmon0/temp1_input\n46643\n"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"The temperature sensor of BPU is located in the BPU subsystem, and the BPU subsystem is only powered on when the BPU is running, so the temperature of the BPU can only be viewed when it is running."}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"thermal",children:"Thermal"}),"\n",(0,s.jsx)(t.p,{children:"Linux Thermal is a temperature control module in the Linux system, mainly used to control the heat generated by the chip during system operation, so as to maintain the temperature of the chip and the device casing within a safe and comfortable range."}),"\n",(0,s.jsx)(t.p,{children:"To achieve reasonable control of equipment temperature, we need to understand the following three modules:"}),"\n",(0,s.jsx)(t.p,{children:"Device for obtaining temperature: abstracted as Thermal Zone Device in the Thermal framework, X5 has two thermal zones, namely thermalzone0 and thermalzone1;"}),"\n",(0,s.jsx)(t.p,{children:"Devices that require cooling: abstracted as Thermal Cooling Devices in the Thermal framework, including CPU, BPU, GPU, and DDR;"}),"\n",(0,s.jsx)(t.p,{children:"Temperature control strategy: abstracted as Thermal Governor in the Thermal framework;"}),"\n",(0,s.jsx)(t.p,{children:"The information and controls of the above modules can be obtained in the/sys/class/male directory."}),"\n",(0,s.jsx)(t.p,{children:"There are a total of four cooling devices in X5:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"cooling_device0: cpu"}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"cooling_device1: bpu"}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"cooling_device2: gpu"}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"cooling_device3: ddr"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Among them, the cooling device DDR is associated with thermalzone0, and the cooling device CPU/BPU/GPU is associated with thermalzone1. The current default strategy is known to be using stepw_ise through the following command."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat /sys/class/thermal/thermal_zone0/policy\n"})}),"\n",(0,s.jsx)(t.p,{children:"The supported strategies can be seen through the following command: user_Space, stepw_ise, a total of two types."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat /sys/class/thermal/thermal_zone0/available_policies\n"})}),"\n",(0,s.jsx)(t.p,{children:"User_Space reports the current temperature of the temperature zone, temperature control trigger points, and other information to the user space through uevent, and the user space software formulates the temperature control strategy."}),"\n",(0,s.jsx)(t.p,{children:"Stepw_ise is a relatively mild temperature control strategy that gradually increases the cooling state during each polling cycle"}),"\n",(0,s.jsx)(t.p,{children:"The specific strategy to choose is based on the needs of the product. It can be specified during compilation or dynamically switched through sysfs. For example, the strategy for dynamically switching thermalzone0 to user_stpace mode"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"echo user_space > /sys/class/thermal/thermal_zone0/policy\n"})}),"\n",(0,s.jsx)(t.p,{children:"There is one trip_point in thermalzone0, which is used to control the frequency modulation temperature of the cooling device DDR"}),"\n",(0,s.jsx)(t.p,{children:"The frequency modulation temperature of DDR can be viewed through sysfs, and the current configuration is 95 degrees"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"cat /sys/devices/virtual/thermal/thermal_zone0/trip_point_0_temp\n"})}),"\n",(0,s.jsx)(t.p,{children:"If you want to adjust the frequency modulation temperature of DDR, such as 85 degrees, you can use the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"echo 85000 > /sys/devices/virtual/thermal/thermal_zone0/trip_point_0_temp\n"})}),"\n",(0,s.jsx)(t.p,{children:"There are three triplepoints in thermalzone1, where triple_point_0_temp is reserved; Trip_point_1_temp is the frequency modulation temperature of this thermal zone, which can control the frequency of CPU/BPU/GPU. It is currently set to 95 degrees. Trip_point_2_temp is the shutdown temperature, currently set to 105 degrees. For example, if you want the junction temperature to reach 85 degrees Celsius, the CPU/BPU/GPU will start frequency modulation:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"echo 85000 > /sys/devices/virtual/thermal/thermal_zone1/trip_point_1_temp\n"})}),"\n",(0,s.jsx)(t.p,{children:"If you want to adjust the shutdown temperature to 105 degrees Celsius:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"echo 105000 > /sys/devices/virtual/thermal/thermal_zone1/trip_point_2_temp\n"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Please note that the above configuration will be reset to the default values after a system restart. To ensure persistent configuration, these commands can be added to the startup scripts for automatic configuration."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"cpu-frequency-management",children:"CPU Frequency Management"}),"\n",(0,s.jsx)(t.p,{children:"The Linux kernel includes the cpufreq subsystem for controlling CPU frequencies and frequency control policies."}),"\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.code,{children:"/sys/devices/system/cpu/cpufreq/policy0"})," directory and execute the ",(0,s.jsx)(t.code,{children:"ls"})," command. You will see the following files:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"affected_cpus    // CPUs currently affected by the frequency control (offline CPUs are not displayed)\ncpuinfo_cur_freq                    // Current CPU frequency (unit: KHz)\ncpuinfo_max_freq                    // The highest frequency available for the CPU under the current scaling strategy (unit: KHz)\ncpuinfo_min_freq                    // The lowest frequency available for the CPU under the current scaling strategy (unit: KHz)\ncpuinfo_transition_latency          // The time required to switch the processor frequency (unit: ns)\nrelated_cpus                        // The CPU cores affected by this control strategy (including all online+offline CPUs)\nscaling_available_frequencies       // List of CPU supported frequencies (unit: KHz)\nscaling_available_governors         // List of all available governors (scaling) types in the current kernel\nscaling_boost_frequencies           // List of supported frequencies for CPU in boost mode (unit: KHz)\nscaling_cur_freq                    // The currently cached CPU frequency in the cpufreq module, without checking the CPU hardware registers.\nscaling_disable_freq                // The CPU frequency that is disabled and can only be set to one value\nscaling_driver                      // The currently used scaling driver\nscaling_governor                    // The current governor (scaling) strategy\nscaling_max_freq                    // The highest frequency available for the CPU under the current scaling strategy (read from the cpufreq module cache)\nscaling_min_freq                    // The lowest frequency available for the CPU under the current scaling strategy (read from the cpufreq module cache)\nscaling_setspeed                    // A file that should be used to switch the governor to 'userspace' before use. Echo a value to this file to switch the frequency.\n"})}),"\n",(0,s.jsx)(t.p,{children:"The Linux kernel used by the RDK system supports the following types of scaling strategies:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Performance: It always keeps the CPU in the highest power consumption and highest performance state, which is the maximum frequency supported by the hardware."}),"\n",(0,s.jsx)(t.li,{children:"Powersave: It always keeps the CPU in the lowest power consumption and lowest performance state, which is the minimum frequency supported by the hardware."}),"\n",(0,s.jsx)(t.li,{children:"Ondemand: It periodically checks the load and adjusts the frequency accordingly. When the load is low, it adjusts to the minimum frequency that can meet the current load requirements. When the load is high, it immediately boosts to the highest performance state."}),"\n",(0,s.jsx)(t.li,{children:"Conservative: It is similar to the ondemand strategy. It periodically checks the load and adjusts the frequency accordingly. When the load is low, it adjusts to the minimum frequency that can meet the current load requirements. However, when the load is high, it gradually increases the frequency instead of immediately setting it to the highest performance state."}),"\n",(0,s.jsx)(t.li,{children:"Userspace: It exposes the control interface through sysfs to allow users to customize their own strategies. Users can manually adjust the frequency in the user space."}),"\n",(0,s.jsx)(t.li,{children:"Schedutil: This is a strategy introduced in Linux-4.7 that adjusts the frequency based on the CPU utilization information provided by the scheduler. It has similar effects to the ondemand strategy but is more accurate and natural (as the scheduler has the best understanding of CPU usage)."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Users can control the CPU scaling strategy by modifying the corresponding settings under the directory ",(0,s.jsx)(t.code,{children:"/sys/devices/system/cpu/cpufreq/policy0"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"For example, to set the CPU to performance mode:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:'sudo bash -c "echo performance > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Or to set the CPU to a fixed frequency (1GHz):"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:'sudo bash -c "echo userspace > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor"\nsudo bash -c "echo 1000000 > /sys/devices/system/cpu/cpufreq/policy0/scaling_setspeed"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"cpu-overclocking",children:"CPU Overclocking"}),"\n",(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["The following content is applicable to ",(0,s.jsx)(t.code,{children:"RDK X3"})," and ",(0,s.jsx)(t.code,{children:"RDK X3 Module"})," development boards and not applicable to the ",(0,s.jsx)(t.code,{children:"RDK Ultra"})," development board."]})}),"\n",(0,s.jsxs)(t.p,{children:["Video: ",(0,s.jsx)(t.a,{href:"https://www.youtube.com/watch?v=WqLxbN2qw-k&list=PLSxjn4YS2IuFUWcLGj2_uuCfLYnNYw6Ld&index=5",children:"https://www.youtube.com/watch?v=WqLxbN2qw-k&list=PLSxjn4YS2IuFUWcLGj2_uuCfLYnNYw6Ld&index=5"})]}),"\n",(0,s.jsx)(t.p,{children:"The development board uses the CPU Freq driver to manage the CPU operating state. The default mode is the 'ondemand' mode, where the CPU frequency is dynamically adjusted based on the load to save power. User can change to the 'performance' mode to make the CPU always operate at the highest frequency. The command is as follows:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo bash -c 'echo performance > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor'\n"})}),"\n",(0,s.jsx)(t.p,{children:"The development board provides overclocking function in the system, which can increase the CPU maximum frequency from 1.2GHz to 1.5GHz. The configuration command is as follows:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo bash -c 'echo 1 > /sys/devices/system/cpu/cpufreq/boost'\n"})}),"\n",(0,s.jsx)(t.p,{children:"The CPU frequency configured by the above command only takes effect during current operation. If the device is restarted, it will return to the default configuration."}),"\n",(0,s.jsxs)(t.admonition,{title:"Note",type:"info",children:[(0,s.jsx)(t.p,{children:"Overclocking the CPU will increase the power consumption and heat dissipation of the chip. If stability issues occur, you can disable the overclocking function with the following command:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sudo bash -c 'echo 0 > /sys/devices/system/cpu/cpufreq/boost'\n"})})]}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"sudo hrut_somstatus"})," command to check the current chip operating frequency, temperature, and other status:"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/02_System_configuration/image/cpu_frequency/image-20220714113732289.png",alt:"image-20220714113732289"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);
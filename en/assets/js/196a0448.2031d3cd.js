"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[58834],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(96540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},49284:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Advanced_development/multimedia_development/multimedia_samples","title":"7.3.2 Sample Program","description":"This chapter briefly describes the D-Robotics multimedia application examples. The source code involved can be obtained by running sudo apt install hobot-multimedia-samples and installed under the directory /app/multimedia_samples.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/07_Advanced_development/03_multimedia_development/multimedia_samples.md","sourceDirName":"07_Advanced_development/03_multimedia_development","slug":"/Advanced_development/multimedia_development/multimedia_samples","permalink":"/rdk_doc/en/Advanced_development/multimedia_development/multimedia_samples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1755086240000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"7.3.1 System Overview","permalink":"/rdk_doc/en/Advanced_development/multimedia_development/overview"},"next":{"title":"7.3.3 System Control","permalink":"/rdk_doc/en/Advanced_development/multimedia_development/system_control"}}');var t=i(74848),o=i(28453);const r={sidebar_position:2},a="7.3.2 Sample Program",c={},d=[{value:"Instructions for using get_sif_data",id:"get_sif_data",level:2},{value:"Program Function",id:"program-function",level:3},{value:"Program Development",id:"program-development",level:3},{value:"Source Code Structure",id:"source-code-structure",level:4},{value:"Compilation",id:"compilation",level:4},{value:"Adding a new sensor",id:"adding-a-new-sensor",level:4},{value:"Function Usage",id:"function-usage",level:3},{value:"Hardware Connection",id:"hardware-connection",level:4},{value:"Program Deployment",id:"program-deployment",level:4},{value:"Running Results Explanation",id:"running-results-explanation",level:4},{value:"get_isp_data Usage Guide",id:"get_isp_data",level:2},{value:"Functionality",id:"functionality",level:3},{value:"Programming",id:"programming",level:3},{value:"Source Code Structure",id:"source-code-structure-1",level:4},{value:"Compilation",id:"compilation-1",level:4},{value:"Adding a new sensor",id:"adding-a-new-sensor-1",level:4},{value:"Function Usage",id:"function-usage-1",level:3},{value:"Hardware Connection",id:"hardware-connection-1",level:4},{value:"Program Deployment",id:"program-deployment-1",level:4},{value:"Explanation of Running Effect",id:"explanation-of-running-effect",level:4},{value:"Sample_isp User Manual",id:"sample_isp-user-manual",level:2},{value:"Program Function",id:"program-function-1",level:3},{value:"Program Development",id:"program-development-1",level:3},{value:"Source Code Structure",id:"source-code-structure-2",level:4},{value:"Compilation",id:"compilation-2",level:4},{value:"Function Usage",id:"function-usage-2",level:3},{value:"Program Deployment",id:"program-deployment-2",level:4},{value:"Command Explanation:",id:"command-explanation",level:4},{value:"sample_vps Instructions",id:"sample_vps",level:2},{value:"Program Functionality",id:"program-functionality",level:3},{value:"Program Development",id:"program-development-2",level:3},{value:"Source Code Structure",id:"source-code-structure-3",level:4},{value:"Compilation",id:"compilation-3",level:4},{value:"Functionality Usage#### Program Deployment",id:"functionality-usage-program-deployment",level:3},{value:"Description of Running Effects",id:"description-of-running-effects",level:4},{value:"sample_vps_zoom Instructions",id:"sample_vps_zoom",level:2},{value:"Program Function",id:"program-function-2",level:3},{value:"Program Development",id:"program-development-3",level:3},{value:"Source Code Structure",id:"source-code-structure-4",level:4},{value:"Compilation",id:"compilation-4",level:4},{value:"Function Usage#### Program Deployment",id:"function-usage-program-deployment",level:3},{value:"Running Effects Description",id:"running-effects-description",level:4},{value:"sample_osd Instructions",id:"sample_osd",level:2},{value:"Program Function",id:"program-function-3",level:3},{value:"Program Development",id:"program-development-4",level:3},{value:"Source Code Structure",id:"source-code-structure-5",level:4},{value:"Compilation",id:"compilation-5",level:4},{value:"Function Usage",id:"function-usage-3",level:3},{value:"Program DeploymentAfter generating <code>sample_osd</code> according to the above compilation process, make sure that <code>1280720.yuv</code> exists in the current directory, and then execute <code>sample_osd</code>.",id:"program-deploymentafter-generating-sample_osd-according-to-the-above-compilation-process-make-sure-that-1280720yuv-exists-in-the-current-directory-and-then-execute-sample_osd",level:4},{value:"Running Effect Description",id:"running-effect-description",level:3},{value:"Usage of sample video codec",id:"sample_video_codec",level:2},{value:"Program Functions",id:"program-functions",level:3},{value:"Program Development",id:"program-development-5",level:3},{value:"Source Code Structure",id:"source-code-structure-6",level:4},{value:"Compilation",id:"compilation-6",level:4},{value:"Program Deployment",id:"program-deployment-3",level:3},{value:"sample_vdec_basic",id:"sample_vdec_basic",level:4},{value:"sample_venc_basic",id:"sample_venc_basic",level:4},{value:"sample_vdec_two_channel",id:"sample_vdec_two_channel",level:4},{value:"Running Effect Description",id:"running-effect-description-1",level:3},{value:"sample_vdec_basic",id:"sample_vdec_basic-1",level:4},{value:"sample_venc_basic",id:"sample_venc_basic-1",level:4},{value:"sample_vdec_two_channel",id:"sample_vdec_two_channel-1",level:4},{value:"sample_venc_two_channel",id:"sample_venc_two_channel",level:4},{value:"sample_vot Usage Instructions",id:"sample_vot",level:2},{value:"Program Function",id:"program-function-4",level:3},{value:"Program Development",id:"program-development-6",level:3},{value:"Source Code Structure",id:"source-code-structure-7",level:4},{value:"Compilation",id:"compilation-7",level:3},{value:"Function Usage",id:"function-usage-4",level:3},{value:"Program Deployment",id:"program-deployment-4",level:4},{value:"Running Effect Description",id:"running-effect-description-2",level:4},{value:"sample_lcd Usage Instructions",id:"sample_lcd",level:2},{value:"Program Function",id:"program-function-5",level:3},{value:"Program Development",id:"program-development-7",level:3},{value:"Source Code Structure",id:"source-code-structure-8",level:4},{value:"CompilationThe current code is compiled and configured through a Makefile file.",id:"compilationthe-current-code-is-compiled-and-configured-through-a-makefile-file",level:4},{value:"Function Usage",id:"function-usage-5",level:3},{value:"Program Deployment",id:"program-deployment-5",level:4},{value:"Running Effect Explanation",id:"running-effect-explanation",level:4},{value:"Usage Instructions for <code>sample_usb_cam_4k60</code>",id:"sample_usb_cam_4k60",level:2},{value:"Program Function",id:"program-function-6",level:3},{value:"Function Usage",id:"function-usage-6",level:3},{value:"Program DeploymentCopy the directory <code>sample/sample_usb_cam_4k60/out</code> to the <code>/userdata</code> directory on the board using tools like WinSCP. Then, enter the <code>/userdata/out</code> directory on the board and execute the <code>sh run_usb_cam_imx415.sh</code> script to run the program. The execution result is as follows:",id:"program-deploymentcopy-the-directory-samplesample_usb_cam_4k60out-to-the-userdata-directory-on-the-board-using-tools-like-winscp-then-enter-the-userdataout-directory-on-the-board-and-execute-the-sh-run_usb_cam_imx415sh-script-to-run-the-program-the-execution-result-is-as-follows",level:4},{value:"Program Development",id:"program-development-8",level:3},{value:"Module Division",id:"module-division",level:4},{value:"Top-level Source Code Structure",id:"top-level-source-code-structure",level:5},{value:"Header File Structure",id:"header-file-structure",level:5},{value:"Source Code Structure",id:"source-code-structure-9",level:5},{value:"Compilation",id:"compilation-8",level:4},{value:"Adding a new sensor",id:"adding-a-new-sensor-2",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"732-sample-program",children:"7.3.2 Sample Program"})}),"\n",(0,t.jsxs)(n.p,{children:["This chapter briefly describes the D-Robotics multimedia application examples. The source code involved can be obtained by running ",(0,t.jsx)(n.code,{children:"sudo apt install hobot-multimedia-samples"})," and installed under the directory ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"get_sif_data",children:"Instructions for using get_sif_data"}),"\n",(0,t.jsx)(n.h3,{id:"program-function",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The following diagram shows the video data path diagram of X3M, for explanations of the professional terms, please refer to ",(0,t.jsx)(n.a,{href:"./overview#terminology",children:"Overview of Multimedia Development - Terminology"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517184132422.png",alt:"image-20220517184132422"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"get_sif_data"})," completes the initialization of the ",(0,t.jsx)(n.code,{children:"sensor"}),", ",(0,t.jsx)(n.code,{children:"MIPI CSI"}),", and ",(0,t.jsx)(n.code,{children:"SIF"})," modules, and implements the function of acquiring video frame data from the ",(0,t.jsx)(n.code,{children:"SIF"})," module, supporting obtaining images in both ",(0,t.jsx)(n.code,{children:"Raw"})," and ",(0,t.jsx)(n.code,{children:"YUV"})," formats from the ",(0,t.jsx)(n.code,{children:"SIF"})," module."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"get_sif_data"})," can effectively assist users in debugging the lighting of the ",(0,t.jsx)(n.code,{children:"sensor"})," and ",(0,t.jsx)(n.code,{children:"X3M"}),". After establishing the data path from ",(0,t.jsx)(n.code,{children:"sensor"})," to ",(0,t.jsx)(n.code,{children:"SIF"}),", other module functions can be debugged."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/get_sif_data"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 main.c                       # Main program, loads the sensor list and controls the commands\n\u251c\u2500\u2500 Makefile\t\t\t # Makefile for compilation\n\u251c\u2500\u2500 module.c\n\u251c\u2500\u2500 module.h\n\u251c\u2500\u2500 Readme.md\n\u251c\u2500\u2500 sensor_handle.c              # Sensor initialization, interface for acquiring images from SIF\n\u251c\u2500\u2500 sensor_handle.h\n\u251c\u2500\u2500 sensors\t\t\t # Sensor parameter configuration, add a new file to this directory for each new sensor\n\u2502\xa0\xa0 \u251c\u2500\u2500 sensor_f37.c\n\u2502\xa0\xa0 \u2514\u2500\u2500 sensor_imx415.c\n\u2514\u2500\u2500 sensors.lds\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled using a Makefile."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the source code directory and execute the following command to compile and generate the ",(0,t.jsx)(n.code,{children:"get_sif_data"})," program:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ cd sample/get_sif_data\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n\xb7\xb7\xb7 \xb7\xb7\xb7 # log\n$ ls\nget_sif_data  main.c  main.o  Makefile  module.c  module.h  module.o  Readme.md  sensor_handle.c  sensor_handle.h  sensor_handle.o  sensors  sensors.lds\n"})}),"\n",(0,t.jsx)(n.h4,{id:"adding-a-new-sensor",children:"Adding a new sensor"}),"\n",(0,t.jsx)(n.p,{children:'If there is a new sensor that needs to be debugged, please refer to the source code files in the "sensors" directory and add a new sensor configuration accordingly.'}),"\n",(0,t.jsx)(n.p,{children:"Using F37 as an example to illustrate the key code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/*\n * Adding sensor, mipi, sif dev, isp parameter configurations\n * There are detailed comments in the code about the parameters in each struct\n * The isp parameters do not need to be concerned in this program\n */\nstatic int set_sensor_param(void)\n{\n        printf(\"set_sensor_param\\n\");\n        /* Define sensor's initialization attribute information */\n        snsinfo = SENSOR_1LANE_F37_30FPS_10BIT_LINEAR_INFO;\n        /* Define mipi's initialization attribute information */\n        mipi_attr = MIPI_1LANE_SENSOR_F37_30FPS_10BIT_LINEAR_ATTR;\n        /* Define dev's initialization attribute information */\n        devinfo = DEV_ATTR_F37_LINEAR_BASE;\n        /* Define pipe's attribute information */\n        pipeinfo = PIPE_ATTR_F37_LINEAR_BASE;\n\n        return sensor_sif_dev_init();\n        return 0;\n}\n\n/*\n * The main program calls this function during the sensor module traversal to register the sensor name and sensor parameter configuration interface.\n */\nstatic int sensor_probe(void)\n{\n        int i = 0;\n\n        /* Find an empty position in sensor_lists */\n        for (i = 0; i < ARRAY_SIZE(sensor_lists); i++) {\n                if (0 == strlen(sensor_lists[i].sensor_tag)) break;\n        }\n\n        if (i >= ARRAY_SIZE(sensor_lists)) {\n                printf(\"sensor lists is full\\n\");\n                return -1;\n        }\n        strncpy(sensor_lists[i].sensor_tag, SENSOR_TAG, 31 > strlen(SENSOR_TAG) ? strlen(SENSOR_TAG) : 31);\n        sensor_lists[i].func = set_sensor_param;\n        return 0;\n}\n\n/* Register sensor's module entry, which the main program will use when traversing the sensor */\nSENSOR_MODULE_INSTALL(sensor_probe);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage",children:"Function Usage"}),"\n",(0,t.jsx)(n.h4,{id:"hardware-connection",children:"Hardware Connection"}),"\n",(0,t.jsxs)(n.p,{children:["The RDK X3 development board connects to the ",(0,t.jsx)(n.code,{children:"Sensor"})," module through the ",(0,t.jsx)(n.code,{children:"mipi host"})," interface. Ensure that you correctly connect the ",(0,t.jsx)(n.code,{children:"Sensor"})," module according to the model being debugged."]}),"\n",(0,t.jsx)(n.h4,{id:"program-deployment",children:"Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["After following the compilation process above to generate ",(0,t.jsx)(n.code,{children:"get_sif_data"}),", execute the program and, based on the prompt, select the category of the sensor currently connected to the development board. For instance, if a ",(0,t.jsx)(n.code,{children:"F37 sensor"})," is connected, choose option 1."]}),"\n",(0,t.jsxs)(n.p,{children:["Upon successful initialization, the program automatically captures and saves the first frame image (",(0,t.jsx)(n.code,{children:"pipe0_plane0_1920x1080_frame_001.raw"}),") in the directory where the program runs (you can view this by executing ",(0,t.jsx)(n.code,{children:"ls -l pipe0_plane0_1920x1080_frame_*"})," after exiting the program) and prints out available user commands. The execution process looks like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x get_sif_data\n./get_sif_data\n\nD-Robotics Sensor Test Tools V1.0\n\n********************** Sensor Lists *************************\n        0 -- IMX415\n        1 -- F37\n*************************************************************\n\nPlease select :1 # Select the sensor\n... ... # A series of initialization logs\nnormal pipe_id (0)type(9)frame_id(1)buf_index(0)w x h(1920x1080) data_type 9 img_format 0\nstride_size(2400) w x h1920 x 1080  size 2592000\npipe(0)dump normal raw frame id(1),plane(1)size(2592000) # Captures the first frame\nfiledump(pipe0_plane0_1920x1080_frame_001.raw, size(2592000) is successed\ntime cost 85 ms \ndumpToFile raw cost time 85 ms********************** Command Lists *************************\n  q     -- quit\n  g     -- get one frame\n  l     -- get a set frames\n  h     -- print help message\n\nCommand: \n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Command Explanations:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"g:"})," Acquires a single frame of the image; supports multiple consecutive acquisitions by inputting several ",(0,t.jsx)(n.code,{children:"g"}),"s, e.g., ",(0,t.jsx)(n.code,{children:"gggg"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Command: g\nnormal pipe_id (0)type(9)frame_id(4078)buf_index(5)w x h(1920x1080) data_type 9 img_format 0\nstride_size(2400) w x h1920 x 1080  size 2592000\npipe(0)dump normal raw frame id(4078),plane(1)size(2592000)\nfiledump(pipe0_plane0_1920x1080_frame_4078.raw, size(2592000) is successed\ntime cost 67 ms \ndumpToFile raw cost time 67 ms\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"l:"})," Continuously acquires 12 frames, equivalent to entering 12 ",(0,t.jsx)(n.code,{children:"g"}),"s."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Command: l\nnormal pipe_id (0)type(9)frame_id(4588)buf_index(3)w x h(1920x1080) data_type 9 img_format 0\nstride_size(2400) w x h1920 x 1080  size 2592000\npipe(0)dump normal raw frame id(4588),plane(1)size(2592000)\nfiledump(pipe0_plane0_1920x1080_frame_4588.raw, size(2592000) is successed\ntime cost 56 ms \n... ... # Continuous output for acquiring frame data\ndumpToFile raw cost time 56 msnormal pipe_id (0)type(9)frame_id(4609)buf_index(7)w x h(1920x1080) data_type 9 img_format 0\nstride_size(2400) w x h1920 x 1080  size 2592000\npipe(0)dump normal raw frame id(4609),plane(1)size(2592000)\nfiledump(pipe0_plane0_1920x1080_frame_4609.raw, size(2592000) is successed\ntime cost 57 ms \ndumpToFile raw cost time 57 ms\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"q:"})," Exits the program"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Command: Command: q\nquit\n[  256.825912] [S0][V1]sif_video_streamoff\n[  256.826439] SIF close node 1\n[  256.853045] [S0][V0]sif_video_streamoff SIF last process stream off \n[  256.853922] [S0][V0]sif_video_streamoff\n[  256.855476] hobot_dmcfreq_target: dmcfreq->rate:2666000000, target_rate:2666000000\n[  256.856460] buf:performance\n[  256.856460] , powersave_rate:2666000000, dmcfreq->pre_state:0\n[  256.857610] [S0][V0]x3_sif_close SIF last process close \n[  256.858301] SIF close node 0\n[  256.858807] [isp_drv]: camera_sys_stream_off: camera_sys_stream_off success line 1549 dev_name port_0\n[  256.860006] [isp_drv:cam]: camera_fop_release: line 115 port 0 user_num 0  camera_cdev->start_num 0 \n[  256.861229] vps mipi_host1: sensor1_mclk set(1) 0 as 24000000\n[  256.861980] vps mipi_host1: sensor1_mclk set(0) 0 as 24000000\n[  256.862741] vps mipi_host0: sensor0_mclk set(2) 0 as 24000000\n[  256.863491] vps mipi_host0: sensor0_mclk set(1) 0 as 24000000\n[  256.864241] vps mipi_host0: sensor0_mclk set(0) 0 as 24000000\n"})}),"\n",(0,t.jsx)(n.h4,{id:"running-results-explanation",children:"Running Results Explanation"}),"\n",(0,t.jsxs)(n.p,{children:["After running the program, it will acquire images named similarly to ",(0,t.jsx)(n.code,{children:"pipe0_plane0_1920x1080_frame_4609.raw"})," or ",(0,t.jsx)(n.code,{children:"pipe0_1920x1080_frame_1024.yuv"}),". To view these images, use the ",(0,t.jsx)(n.a,{href:"http://archive.d-robotics.cc/downloads/hobotplayer/hobotplayerv.2.07.1.rar",children:"hobotplayer"})," tool with the following configuration settings:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Viewing RAW Images:"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configure options as shown in the figure below, focusing on ",(0,t.jsx)(n.code,{children:"pic_type"}),", ",(0,t.jsx)(n.code,{children:"raw_type"}),", ",(0,t.jsx)(n.code,{children:"pix_length"}),", ",(0,t.jsx)(n.code,{children:"width"}),", and ",(0,t.jsx)(n.code,{children:"height"}),". For F37, configure as (PIC_RAW, MIPI_RAW, RAW_BIT_10, 1920, 1080), and for IMX415, configure as (PIC_RAW, MIPI_RAW, RAW_BIT_12, 3840, 2160)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517211101610.png",alt:"../../../../../../static/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517211101610.png"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Viewing YUV Images:"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configure options as per the steps shown, paying attention to ",(0,t.jsx)(n.code,{children:"pic_type"}),", ",(0,t.jsx)(n.code,{children:"yuv_type"}),", ",(0,t.jsx)(n.code,{children:"width"}),", and ",(0,t.jsx)(n.code,{children:"height"}),". For F37, configure as (PIC_YUV, YUV_NV12, 1920, 1080), and for IMX415, configure as (YUV_NV12, 3840, 2160)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517212105959.png",alt:"image-20220517212105959"})}),"\n",(0,t.jsx)(n.h2,{id:"get_isp_data",children:"get_isp_data Usage Guide"}),"\n",(0,t.jsx)(n.h3,{id:"functionality",children:"Functionality"}),"\n",(0,t.jsxs)(n.p,{children:["The following diagram illustrates the video data path for the X3M, with technical terms explained in the ",(0,t.jsx)(n.a,{href:"./overview#terminology",children:"Multimedia Development Overview - Terminology"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517184132422.png",alt:"image-20220517184132422"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"get_isp_data"})," function initializes the ",(0,t.jsx)(n.code,{children:"sensor"}),", ",(0,t.jsx)(n.code,{children:"MIPI CSI"}),", ",(0,t.jsx)(n.code,{children:"SIF"}),", and ",(0,t.jsx)(n.code,{children:"ISP"})," modules, enabling the retrieval of video frame data from the ",(0,t.jsx)(n.code,{children:"ISP"})," module. It supports obtaining images in YUV format from the ISP."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"get_isp_data"})," effectively aids users in debugging sensor and X3M ISP performance. After establishing a data flow from ",(0,t.jsx)(n.code,{children:"sensor -> SIF -> ISP"}),", it facilitates the testing of other module functionalities."]}),"\n",(0,t.jsx)(n.h3,{id:"programming",children:"Programming"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-1",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/get_isp_data"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 main.c                       # Main program, loads sensor list and provides command control\n\u251c\u2500\u2500 Makefile\t\t\t # Build configuration file\n\u251c\u2500\u2500 module.c\n\u251c\u2500\u2500 module.h\n\u251c\u2500\u2500 Readme.md\n\u251c\u2500\u2500 sensor_handle.c              # Interface for sensor initialization and image retrieval from ISP\n\u251c\u2500\u2500 sensor_handle.h\n\u251c\u2500\u2500 sensors\t\t\t # Sensor configuration, add new files for each new sensor in this directory\n\u2502   \u251c\u2500\u2500 sensor_f37.c\n\u2502   \u2514\u2500\u2500 sensor_imx415.c\n\u2514\u2500\u2500 sensors.lds\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-1",children:"Compilation"}),"\n",(0,t.jsxs)(n.p,{children:["The current code uses a Makefile for configuration. To compile and generate the ",(0,t.jsx)(n.code,{children:"get_isp_data"})," program, navigate to the source code directory and execute:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ cd /app/multimedia_samples/get_sif_data\n$ make clean # Clear the source code for a clean development environment\n$ make\n... ... # Compilation output\n$ ls\nget_isp_data  main.c  main.o  Makefile  module.c  module.h  module.o  Readme.md  sensor_handle.c  sensor_handle.h  sensor_handle.o  sensors  sensors.lds\n"})}),"\n",(0,t.jsx)(n.h4,{id:"adding-a-new-sensor-1",children:"Adding a new sensor"}),"\n",(0,t.jsx)(n.p,{children:'If there is a new sensor that needs to be debugged, please refer to the source code files in the "sensors" directory and add a new sensor configuration accordingly.'}),"\n",(0,t.jsx)(n.p,{children:"Take F37 as an example to explain the key code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'/* \n * Add sensor, mipi, sif dev, and isp parameter configuration\n * The structure parameters have detailed comments in the code\n */\nstatic int set_sensor_param(void)\n{\n        printf("set_sensor_param\\n");\n        /* Define sensor initialization attributes */\n        snsinfo = SENSOR_1LANE_F37_30FPS_10BIT_LINEAR_INFO;\n        /* Define mipi initialization parameters */\n        mipi_attr = MIPI_1LANE_SENSOR_F37_30FPS_10BIT_LINEAR_ATTR;\n        /* Define dev initialization attributes */\n        devinfo = DEV_ATTR_F37_LINEAR_BASE;\n        /* Define pipe attributes */\n        pipeinfo = PIPE_ATTR_F37_LINEAR_BASE;\n    \t/* Define dis attributes */\n    \tdisinfo = DIS_ATTR_F37_BASE;\n    \t/* Define ldc attributes */\n    \tldcinfo = LDC_ATTR_F37_BASE;\n        return sensor_sif_dev_init();\n        return 0;\n}\n```/* \n * This function is called by the main program to register the sensor name and sensor parameter configuration interface when traversing the sensor module.\n */\nstatic int sensor_probe(void)\n{\n        int i = 0;\n\n        /* Find an empty position in sensor_lists */\n        for (i = 0; i < ARRAY_SIZE(sensor_lists); i++) {\n                if (0 == strlen(sensor_lists[i].sensor_tag)) break;\n        }\n\n        if (i >= ARRAY_SIZE(sensor_lists)) {\n                printf("sensor lists is full\\n");\n                return -1;\n        }\n\n        strncpy(sensor_lists[i].sensor_tag, SENSOR_TAG, 31 > strlen(SENSOR_TAG) ? strlen(SENSOR_TAG) : 31);\n        sensor_lists[i].func = set_sensor_param;\n        return 0;\n}\n\n/* Register the entry point of the sensor module, which will be used by the main program when traversing the sensor */\nSENSOR_MODULE_INSTALL(sensor_probe);\n'})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-1",children:"Function Usage"}),"\n",(0,t.jsx)(n.h4,{id:"hardware-connection-1",children:"Hardware Connection"}),"\n",(0,t.jsxs)(n.p,{children:["The RDK X3 development board is connected to the Sensor module through the ",(0,t.jsx)(n.code,{children:"mipi host"})," interface. Please connect it correctly according to the current sensor module model being debugged."]}),"\n",(0,t.jsx)(n.h4,{id:"program-deployment-1",children:"Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["After generating ",(0,t.jsx)(n.code,{children:"get_isp_data"})," according to the above compilation process, execute the program and select the current sensor category that is connected to the development board correctly according to the prompt. For example, if the currently connected sensor is the ",(0,t.jsx)(n.code,{children:"F37 sensor"}),", select 1."]}),"\n",(0,t.jsxs)(n.p,{children:["If the initialization is successful, the first frame image (",(0,t.jsx)(n.code,{children:"pipe0_1920x1080_frame_001.yuv"}),") will be automatically saved in the directory where the program runs (you can check it by executing ",(0,t.jsx)(n.code,{children:"ls -l pipe0_1920x1080_frame_*"})," after exiting the program), and the commands that the user can use will be printed. The running process is as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x get_isp_data\n./get_isp_data\n\nD-Robotics Sensor Test Tools V1.0\n\n********************** Sensor Lists *************************\n        0 -- IMX415\n        1 -- F37\n*************************************************************\nPlease select: 1 # Select sensor\n... ... # A long string of initialization logs\nnormal pipe_id (0)type(11)frame_id(1)buf_index(0)w x h(1920x1080) data_type 11 img_format 0\nstride_size(2400) w x h1920 x 1080 size 2073600\npipe(0)dump normal yuv frame id(1),plane(1)size(2073600) # Get the first frame image\nfiledump(pipe0_1920x1080_frame_001.yuv, size(2073600) is successed\ntime cost 63 ms \ndumpToFile yuv cost time 63 ms********************** Command Lists *************************\n  q     -- quit\n  g     -- get one frame\n  l     -- get a set frames\n  h     -- print help message\n"})}),"\n",(0,t.jsx)(n.p,{children:"Command:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Command explanation:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"g: Get one frame image, supports inputting multiple 'g' to continuously get images, for example, input 'gggg'"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Command: g\nnormal pipe_id (0)type(11)frame_id(4078)buf_index(5)w x h(1920x1080) data_type 11 img_format 0\nstride_size(2400) w x h1920 x 1080 size 2073600\npipe(0)dump normal yuv frame id(4078),plane(1)size(2073600)\nfiledump(pipe0_1920x1080_frame_4078.yuv, size(2073600) is successed\ntime cost 63 ms \ndumpToFile yuv cost time 63 ms\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"l: Get 12 frames continuously, equivalent to inputting 12 'g'"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Command: l\nnormal pipe_id (0)type(11)frame_id(4588)buf_index(3)w x h(1920x1080) data_type 11 img_format 0\nstride_size(2400) w x h1920 x 1080 size 2073600\npipe(0)dump normal yuv frame id(4588),plane(1)size(2073600)\nfiledump(pipe0_1920x1080_frame_4588.yuv, size(2073600) is successed\ntime cost 56 ms \n... ... # Continuously printing frame data\ndumpToFile yuv cost time 56 msnormal pipe_id (0)type(11)frame_id(4609)buf_index(7)w x h(1920x1080) data_type 11 img_format 0\nstride_size(2400) w x h1920 x 1080 size 2073600\npipe(0)dump normal yuv frame id(4609),plane(1)size(2073600)\nfiledump(pipe0_1920x1080_frame_4609.yuv, size(2073600) is successed\ntime cost 57 ms \ndumpToFile yuv cost time 57 ms\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"q: Quit the program"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Command: Command: q\nquit\n[  256.825912] [S0][V1]sif_video_streamoff\n[  256.826439] SIF close node 1\n[  256.853045] [S0][V0]sif_video_streamoff SIF last process stream off \n[  256.853922] [S0][V0]sif_video_streamoff\n[  256.855476] hobot_dmcfreq_target: dmcfreq->rate:2666000000, target_rate:2666000000\n[  256.856460] buf:performance\n[  256.856460] , powersave_rate:2666000000, dmcfreq->pre_state:0\n[  256.857610] [S0][V0]x3_sif_close SIF last process close \n[  256.858301] SIF close node 0\n[  256.858807] [isp_drv]: camera_sys_stream_off: camera_sys_stream_off success line 1549 dev_name port_0\n[  256.860006] [isp_drv:cam]: camera_fop_release: line 115 port 0 user_num 0  camera_cdev->start_num 0 \n[  256.861229] vps mipi_host1: sensor1_mclk set(1) 0 as 24000000\n[  256.861980] vps mipi_host1: sensor1_mclk set(0) 0 as 24000000\n[  256.862741] vps mipi_host0: sensor0_mclk set(2) 0 as 24000000\n[  256.863491] vps mipi_host0: sensor0_mclk set(1) 0 as 24000000\n[  256.864241] vps mipi_host0: sensor0_mclk set(0) 0 as 24000000\n"})}),"\n",(0,t.jsx)(n.h4,{id:"explanation-of-running-effect",children:"Explanation of Running Effect"}),"\n",(0,t.jsxs)(n.p,{children:["After running the program, you will obtain a ",(0,t.jsx)(n.code,{children:"yuv"})," image named ",(0,t.jsx)(n.code,{children:"pipe0_1920x1080_frame_4609.yuv"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Please use the ",(0,t.jsx)(n.a,{href:"http://archive.d-robotics.cc/downloads/hobotplayer/hobotplayerv.2.07.1.rar",children:"hobotplayer"})," tool to view the image. The configuration of the image is as follows:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"View the YUV image"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Configure the options as shown below, paying attention to the configuration of ",(0,t.jsx)(n.code,{children:"pic_type"}),", ",(0,t.jsx)(n.code,{children:"yuv_type"}),", ",(0,t.jsx)(n.code,{children:"width"}),", and ",(0,t.jsx)(n.code,{children:"height"})," in the ",(0,t.jsx)(n.code,{children:"file config"}),". F37 configuration is (PIC_YUV, YUV_NV12, 1920, 1080), IMX415 configuration is (YUV_NV12, 3840, 2160)."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517212105959.png",alt:"image-20220517212105959"})}),"\n",(0,t.jsx)(n.h2,{id:"sample_isp-user-manual",children:"Sample_isp User Manual"}),"\n",(0,t.jsx)(n.h3,{id:"program-function-1",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_isp"})," program initializes the ",(0,t.jsx)(n.code,{children:"isp"})," image interface. Its main function is to dynamically set/get parameters for each ",(0,t.jsx)(n.code,{children:"isp"})," image and return the test result."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-1",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-2",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_isp"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".```\n\u251c\u2500\u2500 main.c\t\t\t# Main program\n\u251c\u2500\u2500 Makefile\t\t\t# Compilation makefile\n\u2514\u2500\u2500 Readme.md\t\t\t# Program instructions\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-2",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled through a Makefile."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the source code directory and execute the following command to compile and generate ",(0,t.jsx)(n.code,{children:"sample_isp"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"$ cd /app/multimedia_samples/sample_isp\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n... ... # A lot of compilation prints\n$ ls\nmain.c  main.o  Makefile  sample_isp\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-2",children:"Function Usage"}),"\n",(0,t.jsx)(n.h4,{id:"program-deployment-2",children:"Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["After generating ",(0,t.jsx)(n.code,{children:"sample_isp"})," according to the above compile process, run the program."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that the sensor program needs to be running before running this program. The sensor program can be run directly using ",(0,t.jsx)(n.code,{children:"Sunrise_camera"}),". The process of running ",(0,t.jsx)(n.code,{children:"sample_isp"})," is as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x sample_isp\n# ./sample_isp\n============================================\nAPP: ./sample_isp\na: AE\nb: AF\nc: AWB\nd: BL\ne: DEMOSAIC\nf: SHARPEN\ng: GAMMA\nh: IRIDIX\ni: CNR\nj: SINTER\nk: TEMPER\nl: SCENE_MODES\nm: FIRMWARE STATE\nn: MODULE CONTROL\no: REGISTER\np: LIBREG_AE\nq: LIBREG_AWB\n```r: LIBREG_AF\ns: METERING AE(read only)\nt: METERING AWB(read only)\nu: METERING AF(read only)\nv: METERING AE_5BIN(read only)\nw: METERING_DATA_TIME(read only)\nx: SWITCH SCENE\nA: CSC\nB: MESH SHADING\nC: MESH SHADING LUT\nD: RADIAL SHADING\nE: RADIAL SHADING LUT\nF: IRIDIX STRENGTH LEVEL\nG: IDX_IRQ_SYNC\nH: IDX_AWB_ZONE\nI: IDX_AF_ZONE\nL: IDX_AF_KERNEL\nM: IDX_AEROI_INFO\nN: IDX_LUMA_INFO\nO: IDX_AEPARAM_INFO\nJ: IDX_AE5BIN_ZONE\nK: IDX_AE_ZONE\nP: IDX_AE_EX\ny: Help\nQ: Exit\n============================================\nISP_TEST>\n"})}),"\n",(0,t.jsx)(n.h4,{id:"command-explanation",children:"Command Explanation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"a: Get/Set AE properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"b: Not supported in the example"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"c: Get/Set AWB properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"d: Get/Set BlackLevel properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"e: Get/Set Demosaic properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"f: Get/Set SHARPEN properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"g: Get/Set GAMMA properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"h: Get/Set IRIDIX properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"i: Get/Set CNR properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"j: Get/Set SINTER properties- k: Get/Set TEMPER attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"l: Get/Set SCENE_MODES attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"m: Get/Set FWSTATE attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"n: Get/Set ModuleControl attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"o: Get/Set Register register"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"p: Register AE callback interface"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"q: Register AWB callback interface"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"r: Register AF callback interface"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"s: Get AE statistics information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"t: Get AWB statistics information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"u: Get AF statistics information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"v: Get AE_5BIN statistics information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"w: Get the latest statistics information (by default, the code gets AWB, can be changed to AE or AF statistics information by passing parameters)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"x: Switch ISP effect library (the so library needs to be in the same directory as the isp_test file)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"A: Get/Set CSC attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"B: Get/Set MESH_SHADING attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"C: Get/Set MESH SHADING LUT attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"D: Get/Set RADIAL SHADING attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"E: Get/Set RADIAL SHADING LUT attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"F: Get/Set IRIDIX STRENGTH LEVEL attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"G: Get frame synchronization start/end time"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"H: Set AWB_ZONE attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"I: Set AF_ZONE attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"L: Get/Set AF_KERNEL_INFO attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"M: Get/Set AEROI information- N: Get LUMA information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"O: Get/set AEParam information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"J: Set AE5BIN_ZONE attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"K: Set AEZONE attribute"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"P: Get/set additional AE properties"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"y: Help information"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Q: Exit program"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sample_vps",children:"sample_vps Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"program-functionality",children:"Program Functionality"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_vps"})," program uses multiple channels of a ",(0,t.jsx)(n.code,{children:"vps grp"})," to perform operations such as cropping, rotation, scaling, etc. on YUV images, demonstrating the basic usage of ",(0,t.jsx)(n.code,{children:"vps"}),". For more advanced image processing using ",(0,t.jsx)(n.code,{children:"vps"}),", please refer to the ",(0,t.jsx)(n.a,{href:"./video_processing",children:"Video Processing"})," chapter."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-2",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-3",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at: ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_vps"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n|-- 19201080.yuv      # Source file in NV12 format for playback\n|-- main.c            # Main program\n`-- Makefile          # Compilation makefile\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-3",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled using a Makefile."}),"\n",(0,t.jsxs)(n.p,{children:["To compile and generate the ",(0,t.jsx)(n.code,{children:"sample_vps"}),", enter the source code directory and execute the following commands:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ cd /app/multimedia_samples/sample_vps\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n... ... # A long printout of the compilation process\n$ ls\n19201080.yuv  main.c  main.o  Makefile  sample_vps\n"})}),"\n",(0,t.jsx)(n.h3,{id:"functionality-usage-program-deployment",children:"Functionality Usage#### Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["Generate ",(0,t.jsx)(n.code,{children:"sample_vps"})," according to the above compilation process, and make sure that ",(0,t.jsx)(n.code,{children:"19201080.yuv"})," exists in the current directory. Then execute the program ",(0,t.jsx)(n.code,{children:"./sample_vps"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"description-of-running-effects",children:"Description of Running Effects"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"YUV"})," image is processed using ",(0,t.jsx)(n.code,{children:"vps"})," for cropping, rotation, scaling, and other functions, and the corresponding processed ",(0,t.jsx)(n.code,{children:"YUV"})," images are saved."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"grp_0_chn_1_out_1280_720.yuv"})," is the original image cropped to a resolution of ",(0,t.jsx)(n.code,{children:"1280x720"}),";"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"grp_0_chn_2_out_1088_1920.yuv"})," is the image rotated 90 degrees from the original image;"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"grp_0_chn_3_out_960_540.yuv"})," is the original image resized to a resolution of ",(0,t.jsx)(n.code,{children:"960x540"}),";"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"grp_0_chn_5_out_2880_1620.yuv"})," is the original image enlarged to a resolution of ",(0,t.jsx)(n.code,{children:"2880x1620"}),";"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"sample_vps_zoom",children:"sample_vps_zoom Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"program-function-2",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_vps_zoom"})," program uses the ",(0,t.jsx)(n.code,{children:"ipu"})," and ",(0,t.jsx)(n.code,{children:"pym"})," hardware modules of ",(0,t.jsx)(n.code,{children:"vps"})," to zoom in on multiple areas of the ",(0,t.jsx)(n.code,{children:"YUV"})," image, encode the processed ",(0,t.jsx)(n.code,{children:"YUV"})," image into an ",(0,t.jsx)(n.code,{children:"H264"})," video stream, and preview it directly using tools such as ",(0,t.jsx)(n.code,{children:"MPC-BE"}),". It is similar to the ",(0,t.jsx)(n.code,{children:"zoom"})," function in an electronic gimbal. The entire program's ",(0,t.jsx)(n.code,{children:"Pipeline"})," is shown in the following figure:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/vps_zoom_pipeline.png",alt:"Pipeline"})}),"\n",(0,t.jsxs)(n.p,{children:["As shown in the ",(0,t.jsx)(n.code,{children:"Pipeline"}),", the program reads the ",(0,t.jsx)(n.code,{children:"YUV"})," image through ",(0,t.jsx)(n.code,{children:"vps0"}),", binds ",(0,t.jsx)(n.code,{children:"vps0 chn1"})," and ",(0,t.jsx)(n.code,{children:"vps1"}),", processes it through ",(0,t.jsx)(n.code,{children:"crop"})," and enlargement using ",(0,t.jsx)(n.code,{children:"ipu"})," and ",(0,t.jsx)(n.code,{children:"pym"}),", and sends the data to ",(0,t.jsx)(n.code,{children:"venc chn1"})," for ",(0,t.jsx)(n.code,{children:"H264"})," encoding to achieve the ",(0,t.jsx)(n.code,{children:"zoom"})," effect. At the same time, ",(0,t.jsx)(n.code,{children:"vps0 chn2"})," is bound to ",(0,t.jsx)(n.code,{children:"venc chn0"})," for ",(0,t.jsx)(n.code,{children:"H264"})," encoding, and ",(0,t.jsx)(n.code,{children:"vps0 chn3"})," is bound to ",(0,t.jsx)(n.code,{children:"venc chn2"})," for ",(0,t.jsx)(n.code,{children:"H264"})," encoding."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-3",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-4",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at: ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_vps_zoom"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n|-- 19201080.yuv      # The NV12 format file used for feedback\n|-- main.c            # Main program\n`-- Makefile          # Compilation Makefile\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-4",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled and built through a Makefile configuration."}),"\n",(0,t.jsxs)(n.p,{children:["Go to the source code directory and execute the following command to compile and generate the ",(0,t.jsx)(n.code,{children:"sample_vps_zoom"})," program:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ cd /app/multimedia_samples/sample_vps_zoom\n$ make clean # Clean the source code to keep a clean code environment\n$ make\n... ... # A long segment of compilation printing\n$ ls\n19201080.yuv  main.c  main.o  Makefile  sample_vps_zoom\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-program-deployment",children:"Function Usage#### Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["Generate ",(0,t.jsx)(n.code,{children:"sample_vps_zoom"})," according to the above compilation process, making sure that the ",(0,t.jsx)(n.code,{children:"19201080.yuv"})," file exists in the current directory."]}),"\n",(0,t.jsxs)(n.p,{children:["Execute the program ",(0,t.jsx)(n.code,{children:"./sample_vps_zoom"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"running-effects-description",children:"Running Effects Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"YUV"})," image is encoded into a smooth zoom ",(0,t.jsx)(n.code,{children:"H264"})," stream by using the backfill method and the ",(0,t.jsx)(n.code,{children:"ipu"}),", ",(0,t.jsx)(n.code,{children:"pym"}),", ",(0,t.jsx)(n.code,{children:"venc"})," modules. The effect is shown below."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/vps_1_chn_5_venc_0.h264_20230523_143448.gif",alt:"vps_1_chn_5_venc_0.h264_20230523_143448"})}),"\n",(0,t.jsx)(n.h2,{id:"sample_osd",children:"sample_osd Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"program-function-3",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_osd"})," program is used to overlay timestamps and Chinese text ",(0,t.jsx)(n.code,{children:"osd"})," on the ",(0,t.jsx)(n.code,{children:"YUV"})," data output from the ",(0,t.jsx)(n.code,{children:"vps"})," channel. For more advanced ",(0,t.jsx)(n.code,{children:"osd"})," image processing, please refer to the ",(0,t.jsx)(n.a,{href:"./region_processing",children:"Region Processing"})," section."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-4",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-5",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at: ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_osd"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n|-- 1280720.yuv       # Backfill using NV12 format file\n|-- main.c            # Main program\n|-- Makefile          # Compilation makefile\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-5",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled through a Makefile file configuration."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the source code directory and execute the following command to compile and generate the ",(0,t.jsx)(n.code,{children:"sample_osd"})," program."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ cd sample/sample_osd\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n... ... # A long compilation log\n$ ls\n1280720.yuv  main.c  main.o  Makefile  sample_osd\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-3",children:"Function Usage"}),"\n",(0,t.jsxs)(n.h4,{id:"program-deploymentafter-generating-sample_osd-according-to-the-above-compilation-process-make-sure-that-1280720yuv-exists-in-the-current-directory-and-then-execute-sample_osd",children:["Program DeploymentAfter generating ",(0,t.jsx)(n.code,{children:"sample_osd"})," according to the above compilation process, make sure that ",(0,t.jsx)(n.code,{children:"1280720.yuv"})," exists in the current directory, and then execute ",(0,t.jsx)(n.code,{children:"sample_osd"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"running-effect-description",children:"Running Effect Description"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"YUV"})," image output by the ",(0,t.jsx)(n.code,{children:"vps"})," channel after overlaying ",(0,t.jsx)(n.code,{children:"osd"})," is shown in the following figure:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/image-20220517151700.png",alt:"Osd"})}),"\n",(0,t.jsx)(n.h2,{id:"sample_video_codec",children:"Usage of sample video codec"}),"\n",(0,t.jsx)(n.h3,{id:"program-functions",children:"Program Functions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sample_vdec_basic"})," implements the basic decoding function, reads local ",(0,t.jsx)(n.code,{children:"H264"}),"/",(0,t.jsx)(n.code,{children:"H265"}),"/",(0,t.jsx)(n.code,{children:"MJPEG"})," files, decodes and saves the ",(0,t.jsx)(n.code,{children:"NV12"})," result."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sample_venc_basic"})," implements the basic encoding function, reads ",(0,t.jsx)(n.code,{children:"NV12"})," images, encodes them into ",(0,t.jsx)(n.code,{children:"H264"})," (or ",(0,t.jsx)(n.code,{children:"H265"})," or ",(0,t.jsx)(n.code,{children:"MJPEG"}),"), and saves them as local files."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sample_vdec_two_channel"})," is targeted at scenes that require decoding multiple channels at the same time. It adds a decoding channel on the basis of ",(0,t.jsx)(n.code,{children:"sample_vdec_basic"})," to achieve dual-channel decoding. It reads local ",(0,t.jsx)(n.code,{children:"H264"}),"/",(0,t.jsx)(n.code,{children:"H265"}),"/",(0,t.jsx)(n.code,{children:"MJPEG"})," files and decodes them concurrently, saving them as ",(0,t.jsx)(n.code,{children:"NV12"})," files separately."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"sample_venc_two_channel"})," is targeted at scenes that require encoding multiple channels at the same time. It adds an encoding channel on the basis of ",(0,t.jsx)(n.code,{children:"sample_venc_basic"})," to achieve dual-channel encoding. It reads local ",(0,t.jsx)(n.code,{children:"NV12"})," files and encodes them concurrently, saving them as ",(0,t.jsx)(n.code,{children:"H264"})," (or ",(0,t.jsx)(n.code,{children:"H265"})," or ",(0,t.jsx)(n.code,{children:"MJPEG"}),")."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-5",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-6",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at: ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_video_codec"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 example_vdec_basic\n\u251c\u2500\u2500 example_vdec_two_channel\n\u251c\u2500\u2500 example_venc_basic\n\u251c\u2500\u2500 example_venc_two_channel\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 sample_vdec_basic.c\n\u251c\u2500\u2500 sample_vdec_two_channel.c\n\u251c\u2500\u2500 sample_venc_basic.c\n\u2514\u2500\u2500 sample_venc_two_channel.c\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-6",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is configured to compile through a Makefile."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the source code directory and execute the following command to compile and generate ",(0,t.jsx)(n.code,{children:"sample_venc_basic"}),", ",(0,t.jsx)(n.code,{children:"sample_vdec_basic"}),", ",(0,t.jsx)(n.code,{children:"sample_vdec_two_channel"}),", and ",(0,t.jsx)(n.code,{children:"sample_venc_two_channel"})," programs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ cd /app/multimedia_samples/sample_video_codec\n$ make clean # Clean the source code to maintain a clean code environment\n$ make... ... # A long compilation printout\n$ ls\nexample_vdec_basic        example_venc_basic        Makefile   sample_vdec_basic    sample_vdec_two_channel    sample_venc_basic    sample_venc_two_channel\nexample_vdec_two_channel  example_venc_two_channel  README.md  sample_vdec_basic.c  sample_vdec_two_channel.c  sample_venc_basic.c  sample_venc_two_channel.c\n"})}),"\n",(0,t.jsx)(n.h3,{id:"program-deployment-3",children:"Program Deployment"}),"\n",(0,t.jsx)(n.h4,{id:"sample_vdec_basic",children:"sample_vdec_basic"}),"\n",(0,t.jsxs)(n.p,{children:["After generating the ",(0,t.jsx)(n.code,{children:"sample_vdec_basic"})," program using the compilation process described above,"]}),"\n",(0,t.jsxs)(n.p,{children:["execute ",(0,t.jsx)(n.code,{children:"./sample_vdec_basic -w width -h height -t ecode_type -f file"})]}),"\n",(0,t.jsx)(n.p,{children:"where width represents the number of pixels in the image's width,"}),"\n",(0,t.jsx)(n.p,{children:"height represents the pixel format in the image's height,"}),"\n",(0,t.jsx)(n.p,{children:"encode_type can be h264\\h265\\mjpeg,"}),"\n",(0,t.jsx)(n.p,{children:"and file is the name of the file to be decoded."}),"\n",(0,t.jsx)(n.h4,{id:"sample_venc_basic",children:"sample_venc_basic"}),"\n",(0,t.jsxs)(n.p,{children:["After generating the ",(0,t.jsx)(n.code,{children:"sample_venc_basic"})," program using the compilation process described above,"]}),"\n",(0,t.jsxs)(n.p,{children:["execute ",(0,t.jsx)(n.code,{children:"./sample_venc_basic -w width -h height -t ecode_type -f file0 -g file1"})]}),"\n",(0,t.jsx)(n.p,{children:"where width represents the number of pixels in the image's width,"}),"\n",(0,t.jsx)(n.p,{children:"height represents the pixel format in the image's height,"}),"\n",(0,t.jsx)(n.p,{children:"ecode_type can be h264\\h265\\mjpeg,"}),"\n",(0,t.jsx)(n.p,{children:"file0 is the name of the file to be encoded and it needs to be in NV12 format,"}),"\n",(0,t.jsx)(n.p,{children:"file1 is the name of the file to be encoded and it needs to be in NV12 format. Its width and height should be the same as file0."}),"\n",(0,t.jsx)(n.h4,{id:"sample_vdec_two_channel",children:"sample_vdec_two_channel"}),"\n",(0,t.jsxs)(n.p,{children:["After generating the ",(0,t.jsx)(n.code,{children:"sample_vdec_two_channel"})," program using the compilation process described above,"]}),"\n",(0,t.jsxs)(n.p,{children:["execute ",(0,t.jsx)(n.code,{children:"./sample_vdec_two_channel -w width -h height -t ecode_type -f file"})]}),"\n",(0,t.jsx)(n.p,{children:"where width represents the number of pixels in the image's width,"}),"\n",(0,t.jsx)(n.p,{children:"height represents the pixel format in the image's height,"}),"\n",(0,t.jsx)(n.p,{children:"ecode_type can be h264\\h265\\mjpeg.#### sample_venc_two_channel"}),"\n",(0,t.jsxs)(n.p,{children:["After generating the ",(0,t.jsx)(n.code,{children:"sample_venc_two_channel"})," program according to the compilation process above,"]}),"\n",(0,t.jsxs)(n.p,{children:["Execute ",(0,t.jsx)(n.code,{children:"./sample_venc_two_channel -w width -h height -t ecode_type -f file0 -g file1"})]}),"\n",(0,t.jsxs)(n.p,{children:["Where ",(0,t.jsx)(n.code,{children:"width"})," is the number of pixels in the image width,"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"height"})," is the pixel format contained in the image height,"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ecode_type"})," can be h264\\h265\\mjpeg,"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"file0"})," is the file name to be encoded and needs to be in NV12 format,"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"file1"})," is the file name to be encoded and needs to be in NV12 format, and its ",(0,t.jsx)(n.code,{children:"width"})," and ",(0,t.jsx)(n.code,{children:"height"})," need to be the same as ",(0,t.jsx)(n.code,{children:"file0"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"running-effect-description-1",children:"Running Effect Description"}),"\n",(0,t.jsx)(n.h4,{id:"sample_vdec_basic-1",children:"sample_vdec_basic"}),"\n",(0,t.jsxs)(n.p,{children:["Generates ",(0,t.jsx)(n.code,{children:"decode.nv12"})," in the current running directory, the content of this file is updated with the decoding content."]}),"\n",(0,t.jsx)(n.h4,{id:"sample_venc_basic-1",children:"sample_venc_basic"}),"\n",(0,t.jsxs)(n.p,{children:["Generates ",(0,t.jsx)(n.code,{children:"sample_venc.h264/sample_venc.h265/sample_venc.jpg"})," in the current running directory. The H264/H265 files show alternative display of ",(0,t.jsx)(n.code,{children:"file1"})," and ",(0,t.jsx)(n.code,{children:"file2"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"sample_vdec_two_channel-1",children:"sample_vdec_two_channel"}),"\n",(0,t.jsxs)(n.p,{children:["Generates ",(0,t.jsx)(n.code,{children:"sample_decode_ch0.nv12"})," and ",(0,t.jsx)(n.code,{children:"sample_decode_ch1.nv12"})," in the current running directory, the content of these files is updated with the decoding content."]}),"\n",(0,t.jsx)(n.h4,{id:"sample_venc_two_channel",children:"sample_venc_two_channel"}),"\n",(0,t.jsxs)(n.p,{children:["Generates ",(0,t.jsx)(n.code,{children:"sample_venc_ch0.h264(sample_venc_ch0.h265/sample_venc_ch0.jpg)"})," and ",(0,t.jsx)(n.code,{children:"sample_venc_ch1.h264(sample_venc_ch1.h265/sample_venc_ch1.jpg)"})," in the current running directory. The H264/H265 files show alternative display of ",(0,t.jsx)(n.code,{children:"file1"})," and ",(0,t.jsx)(n.code,{children:"file2"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"sample_vot",children:"sample_vot Usage Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"program-function-4",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_vot program"})," initializes the ",(0,t.jsx)(n.code,{children:"VOT"})," module and implements the function of reading an nv12 image data frame from the current directory and sending it to the ",(0,t.jsx)(n.code,{children:"VOT"})," bt1120 output display."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-6",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-7",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located in:",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_vot"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".```\n\n\u251c\u2500\u2500 1280_720yuv8.yuv                      # Playback using 720P NV12 format file\n\u251c\u2500\u2500 1920_1080yuv8.yuv                     # Playback using 1080P NV12 format file\n\u251c\u2500\u2500 Makefile                               # Compile makefile\n\u251c\u2500\u2500 Readme.md                              # Program instructions\n\u2514\u2500\u2500 vot.c                                  # Main program\n\n"})}),"\n",(0,t.jsx)(n.h3,{id:"compilation-7",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled through a Makefile."}),"\n",(0,t.jsxs)(n.p,{children:["Enter the source code directory and execute the following command to compile and generate ",(0,t.jsx)(n.code,{children:"sample_vot"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cd /app/multimedia_samples/sample_vot\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n... ... # A large block of compilation prints\n$ ls\n1280_720yuv8.yuv  1920_1080yuv8.yuv  Makefile  Readme.md  sample_vot  vot.c  vot.o\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-4",children:"Function Usage"}),"\n",(0,t.jsx)(n.h4,{id:"program-deployment-4",children:"Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["Compile the code according to the above compilation process to generate ",(0,t.jsx)(n.code,{children:"sample_vot"})]}),"\n",(0,t.jsxs)(n.p,{children:["Execute the program ",(0,t.jsx)(n.code,{children:"./sample_vot 1080P30"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x sample_vot\nroot@x3sdbx3-samsung2G-3200:/userdata# ./sample_vot 1080P60\n[   26.051955] channel id is 0, enable is 0, reg value is 0x4ef00f.\n[   26.052744] channel id is 1, enable is 0, reg value is 0x4ef00f.\n[   26.053520] channel id is 2, enable is 0, reg value is 0x4ef00f.\n[   26.054339] channel id is 3, enable is 0, reg value is 0x4ef00f.\nstLayer width:1920[   26.055263] channel id is 0, enable is 1, reg value is 0x14ef00f.\nstLayer height:1080\nlibiar: hb_disp_set_timing done!\nstChnAttr priority :2\nstChnAttr src width :1920\nstChnAttr src height :1080\nstChnAttr s32X :0\nstChnAttr s32Y :0\nstChnAttr u32DstWidth :1920\nstChnAttr u32DstHeight :1080\n[   26.056165] iar_output_stream.\nstCrop width :1920\nstCrop height :1080\n[   26.059304] channel id is 0, enable is 1, reg value is 0x14ef00f.\nframesize:3110400\n\n(Note: If using X3 SDB board, the supported parameters are only 1080P60/1080P30. If using the sil902x's bt1120 to hdmi chip, the parameters can be as follows:\n\t1080P60\n\t1080P59.94\n\t1080P50\n\t1080P30\n\t1080P29.97\n\t1080P25\n\t1080I60\n\t1080I59.94\n\t1080I50\n\t720P60\n\t720P59.94\n\t720P50\n\t720P29.97)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"running-effect-description-2",children:"Running Effect Description"}),"\n",(0,t.jsxs)(n.p,{children:["The program reads the ",(0,t.jsx)(n.code,{children:"1920_1080yuv8.yuv"})," file into memory and sends the data to the ",(0,t.jsx)(n.code,{children:"bt1120"})," interface of the ",(0,t.jsx)(n.code,{children:"VOT"})," module through the interface, and then outputs the ",(0,t.jsx)(n.code,{children:"hdmi"})," effect to the display device through the ",(0,t.jsx)(n.code,{children:"hdmi"})," conversion chip as shown in the following figure."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220520-163716.jpg",alt:""})}),"\n",(0,t.jsx)(n.h2,{id:"sample_lcd",children:"sample_lcd Usage Instructions"}),"\n",(0,t.jsx)(n.h3,{id:"program-function-5",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_lcd program"})," initializes the ",(0,t.jsx)(n.code,{children:"VOT"})," module and reads one frame of NV12 picture data from the current directory and sends it to ",(0,t.jsx)(n.code,{children:"VOT"}),"'s ",(0,t.jsx)(n.code,{children:"midi-dsi"})," output to display on the lcd screen."]}),"\n",(0,t.jsx)(n.h3,{id:"program-development-7",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"source-code-structure-8",children:"Source Code Structure"}),"\n",(0,t.jsxs)(n.p,{children:["The source code is located at: ",(0,t.jsx)(n.code,{children:"/app/multimedia_samples/sample_lcd"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 720x1280.yuv\t# NV12 format file for playback\n\u251c\u2500\u2500 Makefile\t\t# Compilation makefile\n\u251c\u2500\u2500 Readme.md\t\t# Program instructions\n\u2514\u2500\u2500 vot.c\t\t\t# Main program\n"})}),"\n",(0,t.jsx)(n.h4,{id:"compilationthe-current-code-is-compiled-and-configured-through-a-makefile-file",children:"CompilationThe current code is compiled and configured through a Makefile file."}),"\n",(0,t.jsxs)(n.p,{children:["Go to the source code directory and execute the following commands to compile and generate the ",(0,t.jsx)(n.code,{children:"sample_lcd"})," program:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"$ cd /app/multimedia_samples/sample_lcd\n$ make clean # Clean the source code to maintain a clean code environment\n$ make\n... ... # A long compilation output\n$ ls\n720x1280.yuv  vot.c  vot.o  Makefile  sample_lcd\n"})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-5",children:"Function Usage"}),"\n",(0,t.jsx)(n.h4,{id:"program-deployment-5",children:"Program Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["Follow the above compilation process to generate the ",(0,t.jsx)(n.code,{children:"sample_lcd"})," program and ensure that the ",(0,t.jsx)(n.code,{children:"720x1280.yuv"})," file exists in the current directory."]}),"\n",(0,t.jsxs)(n.p,{children:["Run the program ",(0,t.jsx)(n.code,{children:"./sample_lcd"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"chmod +x sample_lcd\n# ./sample_lcd\nroot@x3sdbx3-samsung2G-3200:/userdata# ./sample_lcd \nlibiar: hb_disp_set_timing done!\nHB_VOT_SetChnAttr 0: 0\nHB_VOT_EnableChn: 0\nHB_VOT_EnableChn: 0\nframesize:1382400\n"})}),"\n",(0,t.jsx)(n.h4,{id:"running-effect-explanation",children:"Running Effect Explanation"}),"\n",(0,t.jsxs)(n.p,{children:["The program reads the ",(0,t.jsx)(n.code,{children:"720x1280.yuv"})," file into memory and sends the data to the ",(0,t.jsx)(n.code,{children:"VOT"})," module's ",(0,t.jsx)(n.code,{children:"midi-dsi"})," interface through an interface, and then displays it on the ",(0,t.jsx)(n.code,{children:"lcd"})," screen device as shown in the following image."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220520-161120.jpg",alt:""})}),"\n",(0,t.jsxs)(n.h2,{id:"sample_usb_cam_4k60",children:["Usage Instructions for ",(0,t.jsx)(n.code,{children:"sample_usb_cam_4k60"})]}),"\n",(0,t.jsx)(n.h3,{id:"program-function-6",children:"Program Function"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sample_usb_cam_4k60"})," program initializes the ",(0,t.jsx)(n.code,{children:"sensor"}),", ",(0,t.jsx)(n.code,{children:"MIPI CSI"}),", ",(0,t.jsx)(n.code,{children:"SIF"}),", ",(0,t.jsx)(n.code,{children:"ISP"}),", ",(0,t.jsx)(n.code,{children:"VENC"}),", and ",(0,t.jsx)(n.code,{children:"USB"})," modules, achieves real-time data acquisition from the sensor, and encodes the output through the encoder. It transfers the video to the PC for preview through the USB module."]}),"\n",(0,t.jsx)(n.p,{children:"The software architecture diagram is as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/4k_60_usb_pipeline.png",alt:""})}),"\n",(0,t.jsx)(n.h3,{id:"function-usage-6",children:"Function Usage"}),"\n",(0,t.jsxs)(n.h4,{id:"program-deploymentcopy-the-directory-samplesample_usb_cam_4k60out-to-the-userdata-directory-on-the-board-using-tools-like-winscp-then-enter-the-userdataout-directory-on-the-board-and-execute-the-sh-run_usb_cam_imx415sh-script-to-run-the-program-the-execution-result-is-as-follows",children:["Program DeploymentCopy the directory ",(0,t.jsx)(n.code,{children:"sample/sample_usb_cam_4k60/out"})," to the ",(0,t.jsx)(n.code,{children:"/userdata"})," directory on the board using tools like WinSCP. Then, enter the ",(0,t.jsx)(n.code,{children:"/userdata/out"})," directory on the board and execute the ",(0,t.jsx)(n.code,{children:"sh run_usb_cam_imx415.sh"})," script to run the program. The execution result is as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"root@x3sdbx3-samsung2G-3200:/userdata/out# cd /userdata/\nroot@x3sdbx3-samsung2G-3200:/userdata/out# sh run_usb_cam_imx415.sh \nrun_usb_cam_imx415.sh: line 17: can't create /sys/bus/platform/drivers/ddr_monitor/read_qos_ctrl/all: Permission denied\nrun_usb_cam_imx415.sh: line 18: can't create /sys/bus/platform/drivers/ddr_monitor/write_qos_ctrl/all: Permission denied\n>>>>>>>>>>>>> g1 is exist. delete it!\nDetecting platform:\n board : Hobot XJ3 SOC SDB\n udc   : b2000000.dwc3\nStopping the USB gadget\nusb-gadget is not running\nDetecting platform:\n board : Hobot XJ3 SOC SDB\n udc   : b2000000.dwc3\nshow user config:\nUSB_VID: 0x1d6b\nUSB_PID: 0x0102\nSERIAL: 0x6856e824\nMANUF: hobot\nPRODUCT: xj3\nUSE_UVC: true\nUSE_HID: false\nUSE_UAC1: false\nUSE_UAC2: false\nUSE_ADB: false\nUSE_MSD: false\nUSE_ACM: false\nUSE_RNDIS: false\nUSE_ECM: false\nCreating the USB gadget\nLoading composite module\nCreating gadget directory g_comp\nOK\ninit configfs...\nSetting Vendor and Product ID's\nOK\nsingle function gadget\nSetting English strings\nOK\nCreating Config\nInit functions...\nfunciton_init, but do nothing, please init on demand\nOK\nBind functions...\nBind functions according to .usb-config file\nbind uvc...\nCreating UVC gadget functionality : uvc.0\n```sh: 0: unknown operand\nOK\nPre run userspace daemons(eg. adb)...\n0\n0\nwaiting\n.\nOK\nBinding USB Device Controller\nOK\nRun some userspace daemons(eg. usb_camera)...\nusb-gadget start succeed.\nOpen config file ./config/vin_vps_config_usb_cam.json success\nOpen config file1 ./config/vin_vps_config_usb_cam.json\nCan not find key: tailWeight\nCan not find key: manualTimeCount\nCan not find key: autoTimeCount\nCan not find key: manualAeM1\nimx415_init_3840x2160_60_fps_linear_setting OK!\nhb_vps_init grp_attr.maxW = 3840, grp_attr.maxH = 2160\nchn_attr.width = 3840,chn_attr.height = 2160\nset ipu chn Attr ok: GrpId = 0, chn_id = 2, chn_attr.enMirror = 0\nstart grp ok: grp_id = 0\nvps1 us0 factor:0 x:0 y:0 w:968 h:544\nvps1 us1 factor:0 x:0 y:0 w:968 h:544\nvps1 us2 factor:0 x:0 y:0 w:968 h:544\nvps1 us3 factor:0 x:0 y:0 w:968 h:544\nvps1 us4 factor:0 x:0 y:0 w:968 h:544\nvps1 us5 factor:0 x:0 y:0 w:968 h:544\nvps1 us0 factor:0 x:0 y:0 w:968 h:544\nvps1 us1 factor:0 x:0 y:0 w:968 h:544\nvps1 us2 factor:0 x:0 y:0 w:968 h:544\nvps1 us3 factor:0 x:0 y:0 w:968 h:544\nvps1 us4 factor:0 x:0 y:0 w:968 h:544\nvps1 us5 factor:0 x:0 y:0 w:968 h:544\nvps1 us0 factor:0 x:0 y:0 w:648 h:364\nvps1 us1 factor:0 x:0 y:0 w:648 h:364\nvps1 us2 factor:0 x:0 y:0 w:648 h:364\nvps1 us3 factor:0 x:0 y:0 w:648 h:364\nvps1 us4 factor:0 x:0 y:0 w:648 h:364\nvps1 us5 factor:0 x:0 y:0 w:648 h:364\ntry to construct empty ring queue##function uvc_gadget_init in\nudc_find_video_device g_webcam\nfunction name not matched. g_comp\n:g_webcam\nudc_find_video_device g_comp\nusing uvc device: /dev/video8\n###uvc_gadget_init###\nusing uvc device: /dev/video8\nwidth: 1280height: 720\nformat: 2\nio_method: 0\nbulk_mode: 1\nnbufs: 2\nmult: 0\nburst: 9\nspeed: 1\nmult_alts: 0\nh264_quirk: 0\nmaxpkt_quirk: 3072\nuvc device is dwc3-gadget on bus gadget\nuvc open succeeded, file descriptor = 22\nuvc_size=4, maxpkt_size=3072\n##function uvc_gadget_init succeed\n##function uvc_gadget_start in\n##function uvc_gadget_start succeed\n##function uvc_loop in\ndev->mask (0x0), entity_id(1), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 01 req 86 cs 04)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(1), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 01 req 86 cs 09)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(1), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 01 req 86 cs 0b)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(1), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 01 req 86 cs 0f)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(2), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 02 req 86 cs 02)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(2), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 02 req 86 cs 03)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(2), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 02 req 86 cs 06)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\ndev->mask (0x0), entity_id(2), setup_ops((nil)), app doesn't care\ncontrol request (entity_id 02 req 86 cs 07)\nsend real error code last prepared(06)\ncontrol request (entity_id 00 req 81 cs 02)\n\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance Explanation"})}),"\n",(0,t.jsx)(n.p,{children:"By using Potplayer, select UVC Camera, set the resolution to H264 3840x2160P 60, and once the device is opened, you can play the UVC video stream. The output from the x3 side appears as shown below:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220523-173933.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:"A screenshot of the running Potplayer is as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220527131109.png",alt:""})}),"\n",(0,t.jsx)(n.h3,{id:"program-development-8",children:"Program Development"}),"\n",(0,t.jsx)(n.h4,{id:"module-division",children:"Module Division"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Module"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Directory"})}),(0,t.jsx)(n.th,{children:(0,t.jsx)(n.strong,{children:"Description"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Header Files"}),(0,t.jsx)(n.td,{children:"inc"}),(0,t.jsx)(n.td,{children:"Sensor header files, JSON header files, public utility interface header files, VIO common dependency headers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"VIO Source Code"}),(0,t.jsx)(n.td,{children:"src"}),(0,t.jsx)(n.td,{children:"Sensor source code files, JSON configuration parsing source files, public utility interface source files, system VIO common interface source files"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Main Program"}),(0,t.jsx)(n.td,{children:"sample_usb_cam.cpp"}),(0,t.jsx)(n.td,{children:"Entry point for the main function"})]})]})]}),"\n",(0,t.jsx)(n.h5,{id:"top-level-source-code-structure",children:"Top-level Source Code Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 Makefile\t\t\t\t\t\t\t# CMakeLists file for the main program\n\u251c\u2500\u2500 vin_vps_config_usb_cam.json\t\t\t# IMX415 sensor configuration file\n\u251c\u2500\u2500 inc\t\t\t\t\t\t\t\t\n\u2502   \u251c\u2500\u2500 camera\t\t\t\t\t\t\t\t\t# Sensor dependency header files, modify this file for new sensors\n\u2502   \u251c\u2500\u2500 json\t\t\t\t\t\t\t\t\t# JSON library header files\n\u2502   \u251c\u2500\u2500 utils\t\t\t\t\t\t\t\t\t# Public header files for build dependencies\n\u2502   \u2514\u2500\u2500 vio\t\t\t\t\t\t\t\t\t\t# X3M VIO dependency header files\n\u251c\u2500\u2500 lib\n\u2502   \u251c\u2500\u2500 jsoncpp\t\t\t\t\t\t\t\t\t# Dependent JSON library\n\u2502   \u251c\u2500\u2500 libguvc.so\t\t\t\t\t\t\t\t\t# 4k60 USB cam dependent library\n\u2502   \u251c\u2500\u2500 libimx415.so\t\t\t\t\t\t\t\t# 4k60 sensor driver library\n\u2502   \u251c\u2500\u2500 README.md\t\t\t\t\t\t\t\t\t# Program documentation\n\u2502   \u251c\u2500\u2500 run_usb_cam_imx415.sh\t\t\t\t\t\t# Script to run the program\n\u251c\u2500\u2500 sample_usb_cam.cpp\t\t\t\t\t\t\t# Main program code\t\t\t\t\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 camera\t\t\t\t\t\t\t\t\t# Sensor driver configuration code\n\u2502   \u251c\u2500\u2500 utils\t\t\t\t\t\t\t\t\t# Public source code for build dependencies\n\u2502   \u2514\u2500\u2500 vio\t\t\t\t\t\t\t\t\t\t# X3M VIO dependency source files\n\u2514\u2500\u2500 usb-gadget.sh\t\t\t\t\t\t\t\t# Script to load the 4k60 USB cam driver\n"})}),"\n",(0,t.jsx)(n.h5,{id:"header-file-structure",children:"Header File Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 camera\n\u2502   \u2514\u2500\u2500 camera.h\t\t\t\t\t\t# Sensor dependency header file, update for new sensors\n\u251c\u2500\u2500 json\t\t\t\t\t\t\t\t# Open-source JSON library header files\n\u2502   \u251c\u2500\u2500 allocator.h\n\u2502   \u251c\u2500\u2500 assertions.h\n\u2502   \u251c\u2500\u2500 autolink.h\n\u2502   \u251c\u2500\u2500 config.h\n\u2502   \u251c\u2500\u2500 features.h\n\u2502   \u251c\u2500\u2500 forwards.h\n\u2502   \u251c\u2500\u2500 json.h\n\u2502   \u251c\u2500\u2500 reader.h\n\u2502   \u251c\u2500\u2500 value.h\n\u2502   \u251c\u2500\u2500 version.h\n\u2502   \u2514\u2500\u2500 writer.h\n\u251c\u2500\u2500 utils\t\t\n\u2502   \u251c\u2500\u2500 utils.h\t\t\t\t\t\t\t# Ringbuffer definition and public interface for dumping images and videos to files\n\u2502   \u2514\u2500\u2500 yuv2yuv.h\t\t\t\t\t\t# Standard interface for YUV format conversion using neon acceleration\n\u2514\u2500\u2500 vio\n    \u251c\u2500\u2500 vio_cfg.h\t\t\t\t\t\t# JSON configuration parsing header file\n    \u251c\u2500\u2500 vio_cfg_type.h\t\t\t\t\t# JSON configuration attribute value header file\n    \u251c\u2500\u2500 vio_log.h\t\t\t\t\t\t# Logging control header file\n    \u251c\u2500\u2500 vio_sys.h\t\t\t\t\t\t# VP initialization, deinitialization, system VIO module binding interfaces header\n    \u251c\u2500\u2500 vio_venc.h\t\t\t\t\t\t# X3 System Encoding module initialization, deinitialization, start-stop, data input/output processing interfaces\n    \u251c\u2500\u2500 vio_video.h\t\t\t\t\t\t# Video format enumeration and other common interfaces\n    \u251c\u2500\u2500 vio_vin.h\t\t\t\t\t\t# VIN structure definition, initialization, deinitialization, start-stop, data processing interfaces\n    \u2514\u2500\u2500 vio_vps.h\t\t\t\t\t\t# VPS initialization, deinitialization, start-stop, data processing interfaces\n"})}),"\n",(0,t.jsx)(n.h5,{id:"source-code-structure-9",children:"Source Code Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:".\n\u251c\u2500\u2500 camera\t\t\t\t# Sensor dependency source code files, add corresponding sensor source code files for new sensors\n\u2502   \u251c\u2500\u2500 camera_base.c\n\u2502   \u2514\u2500\u2500 camera_imx415.cpp\n\u251c\u2500\u2500 utils\n\u2502   \u251c\u2500\u2500 utils.cpp\t\t# Public source code file for dumping images and videos to files\n\u2502   \u2514\u2500\u2500 yuv2yuv.c\t\t# Standard source code file for YUV format conversion using neon acceleration\n\u2514\u2500\u2500 vio\n    \u251c\u2500\u2500 vio_cfg.cpp\t\t# JSON configuration parsing source code file\n    \u251c\u2500\u2500 vio_sys.cpp\t\t# VP initialization, deinitialization, system VIO module binding interfaces source code file\n    \u251c\u2500\u2500 vio_venc.cpp\t# X3 System Encoding module initialization, deinitialization, start-stop, data input/output processing interfaces source code file\n    \u251c\u2500\u2500 vio_video.cpp\t# Video format enumeration and other common interfaces source code file\n    \u251c\u2500\u2500 vio_vin.cpp\t\t# VIN initialization, deinitialization, start-stop, data processing interfaces source code file\n    \u2514\u2500\u2500 vio_vps.cpp\t\t# VPS initialization, deinitialization, start-stop, data processing interfaces source code file\n"})}),"\n",(0,t.jsx)(n.p,{children:"The flowchart of the program startup process is as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/4k60usbcam.drawio.png",alt:""})}),"\n",(0,t.jsx)(n.h4,{id:"compilation-8",children:"Compilation"}),"\n",(0,t.jsx)(n.p,{children:"The current code is compiled through a Makefile."}),"\n",(0,t.jsx)(n.p,{children:"The multimedia header files and library files that the code depends on are located respectively in the appsdk directory and the root directory of the system/rootfs_yocto/root. When compiling, make sure that these two dependency directories exist."}),"\n",(0,t.jsx)(n.p,{children:"After installing the cross-compilation toolchain, execute the make command to compile and generate the sample_usb_cam program."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cd sample/sample_usb_cam_4k60\n$ make clean # Clean the source code to keep a clean code environment\n$ make\n... ... # A lot of compilation prints\n$ ls\nMakefile  sample_usb_cam  inc  README.md  vin_vps_config_usb_cam.json  libguvc.so  libimx415.so  sample_usb_cam.cpp  sample_usb_cam.d  src  lib  run_usb_cam_imx415.sh  sample_usb_cam.obj \nusb-gadget.sh\n$ make install # Install the generated product to the out directory\n"})}),"\n",(0,t.jsx)(n.h4,{id:"adding-a-new-sensor-2",children:"Adding a new sensor"}),"\n",(0,t.jsx)(n.p,{children:"If there is a new sensor that needs debugging, refer to the source code files under the src/camera directory. Add a new sensor configuration accordingly."}),"\n",(0,t.jsx)(n.p,{children:"Taking the camera_imx415.cpp file for IMX415 as an example, the key code needs to add new sensor structure variables: MIPI_SENSOR_INFO_S, MIPI_ATTR_S, VIN_DEV_ATTR_S, VIN_PIPE_ATTR_S, VIN_DIS_ATTR_S, VIN_LDC_ATTR_S."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220525-112411.jpg",alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220525-112559.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220525-112809.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220525-112844.png",alt:""})}),"\n",(0,t.jsx)(n.p,{children:"At the same time, in inc/camera/camera.h, extern the newly added sensor variables, as shown in the example of IMX415:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://rdk-doc.oss-cn-beijing.aliyuncs.com/doc/img/07_Advanced_development/03_multimedia_development/multimedia_samples/20220525-113456.png",alt:""})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);
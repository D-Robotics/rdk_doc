"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[60608],{17439:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Appendix/linux-command-manual/cmd_netstat","title":"netstat","description":"The netstat command is used to print the status of the network system in Linux, allowing you to know the network situation of the entire system.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/09_Appendix/linux-command-manual/cmd_netstat.md","sourceDirName":"09_Appendix/linux-command-manual","slug":"/Appendix/linux-command-manual/cmd_netstat","permalink":"/rdk_doc/en/Appendix/linux-command-manual/cmd_netstat","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1757501941000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"mount","permalink":"/rdk_doc/en/Appendix/linux-command-manual/cmd_mount"},"next":{"title":"nohup","permalink":"/rdk_doc/en/Appendix/linux-command-manual/cmd_nohup"}}');var i=s(74848),o=s(28453);const r={sidebar_position:1},l="netstat",a={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Option Description",id:"option-description",level:2},{value:"Common Commands",id:"common-commands",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"netstat",children:"netstat"})}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.strong,{children:"netstat command"})," is used to print the status of the network system in Linux, allowing you to know the network situation of the entire system."]}),"\n",(0,i.jsx)(e.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat [-vWeenNcCF] [<Af>] -r         \nnetstat {-V|--version|-h|--help}\nnetstat [-vWnNcaeol] [<Socket> ...]\nnetstat { [-vWeenNac] -i | [-cnNe] -M | -s [-6tuw] }\n"})}),"\n",(0,i.jsx)(e.h2,{id:"option-description",children:"Option Description"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-A"}),": List the relevant addresses in the network type connection."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-r, --route"}),": Display the routing table and list the routing information of the system."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-i, --interfaces"}),": Display network interface information, including interface names, IP addresses, and other relevant information."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-g, --groups"}),": Display multicast group member information, including which network members are in the multicast group."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-s, --statistics"}),": Display network statistics information, similar to SNMP (Simple Network Management Protocol), providing detailed statistics on network activity."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-M, --masquerade"}),": Display masquerade connection information, usually used in Network Address Translation (NAT) networks."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-v, --verbose"}),": Display detailed information, providing more information to help diagnose network problems."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-W, --wide"}),": Do not truncate the IP address to display complete IP address information."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-n, --numeric"}),": Do not resolve hostnames or port names to display IP addresses, port numbers, and user information in numeric format."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--numeric-hosts"}),": Do not resolve hostnames."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--numeric-ports"}),": Do not resolve port names."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"--numeric-users"}),": Do not resolve user names."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-N, --symbolic"}),": Resolve hardware names and display symbolic names for hardware devices."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-e, --extend"}),": Display additional information. Use this option twice to get the maximum detailed information."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-p, --programs"}),": Display the PID (Process Identifier) and program names to show process information related to sockets."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-o, --timers"}),": Display timer information, including the timer status of sockets."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-c, --continuous"}),": Make ",(0,i.jsx)(e.code,{children:"netstat"})," continuously print the selected information every second for continuous monitoring."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-l, --listening"}),": Only display listening server sockets."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-a, --all"}),": Display all sockets, including connected and unconnected ones."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-F, --fib"}),": Display Forwarding Information Base (FIB)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-C, --cache"}),": Display the routing cache instead of the Forwarding Information Base."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-Z, --context"}),": Display SELinux security context for displaying SELinux security information of sockets."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-v, --verbose"}),": Enable verbose output to provide more information to the user about ongoing operations. Particularly useful when dealing with unconfigured address families, providing some useful information."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-o, --timers"}),": Include information related to network timers."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-p, --program"}),": Display the PID and name of the program that each socket belongs to."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-l, --listening"}),": Only display listening sockets. By default, these are omitted."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-a, --all"}),": Display both listening and non-listening sockets. When using the ",(0,i.jsx)(e.code,{children:"--interfaces"})," option, display disabled interfaces."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-F"}),": Print routing information from the FIB (default)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"-C"}),": Print routing information from the cache."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"common-commands",children:"Common Commands"}),"\n",(0,i.jsx)(e.p,{children:"Display detailed network conditions"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -a       #List all ports\nnetstat -at      #List all TCP ports\nnetstat -au      #List all UDP ports\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display current registered UDP connections"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -nu\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display usage of UDP port numbers"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -apu\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display network card list"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -i\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display multicast group relationships"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -g\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display network statistics"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -s    #Display statistics of all ports\nnetstat -st   #Display statistics of TCP ports\nnetstat -su   #Display statistics of UDP ports\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display listening sockets"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -l      #Only display listening ports\nnetstat -lt     #Only list all listening TCP ports\nnetstat -lu     #Only list all listening UDP ports\nnetstat -lx     #Only list all listening UNIX ports\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display PID and process name in netstat output"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -pt\n"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"netstat -p"}),' can be used with other options to add "PID/Process Name" to netstat output.']}),"\n",(0,i.jsx)(e.p,{children:"Continuously output netstat information"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"netstat -c   #output network information every second\n"})}),"\n",(0,i.jsx)(e.p,{children:"Display kernel routing information"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"netstat -r\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Use ",(0,i.jsx)(e.code,{children:"netstat -rn"})," to display in numerical format, without querying host names."]}),"\n",(0,i.jsx)(e.p,{children:"Find ports that programs are running on"}),"\n",(0,i.jsx)(e.p,{children:"Not all processes can be found, those without permission will not be displayed, view all information with root permission."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"netstat -ap | grep ssh\n"})}),"\n",(0,i.jsx)(e.p,{children:"Find processes running on a specific port"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"netstat -an | grep ':80'\n"})}),"\n",(0,i.jsx)(e.p,{children:"Find process ID by port"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"netstat -anp|grep 8081 | grep LISTEN|awk '{printf $7}'|cut -d/ -f1\n"})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>l});var t=s(96540);const i={},o=t.createContext(i);function r(n){const e=t.useContext(o);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);
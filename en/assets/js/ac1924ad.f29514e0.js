"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[93844],{28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>c});var s=n(96540);const r={},t=s.createContext(r);function d(e){const i=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:i},e.children)}},48461:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_ultra/vio_api","title":"VIO (Video Input/Output) API","description":"The VIO module provides functions for operating MIPI cameras and handling image processing. Below is a summary of the available VIO APIs:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Basic_Application/04_multi_media/multi_media_api/cdev_multimedia_api_ultra/vio_api.md","sourceDirName":"03_Basic_Application/04_multi_media/multi_media_api/cdev_multimedia_api_ultra","slug":"/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_ultra/vio_api","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_ultra/vio_api","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1756744459000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Display Object","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_display"},"next":{"title":"ENCODER\uff08Encoding Module\uff09API","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_ultra/encoder_api"}}');var r=n(74848),t=n(28453);const d={sidebar_position:1},c="VIO (Video Input/Output) API",o={},l=[{value:"sp_init_vio_module",id:"sp_init_vio_module",level:2},{value:"sp_release_vio_module",id:"sp_release_vio_module",level:2},{value:"sp_open_camera",id:"sp_open_camera",level:2},{value:"sp_open_vps",id:"sp_open_vps",level:2},{value:"sp_vio_close",id:"sp_vio_close",level:2},{value:"sp_vio_get_frame",id:"sp_vio_get_frame",level:2},{value:"sp_vio_get_raw",id:"sp_vio_get_raw",level:2},{value:"sp_vio_get_yuv",id:"sp_vio_get_yuv",level:2},{value:"sp_vio_set_frame",id:"sp_vio_set_frame",level:2}];function h(e){const i={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"vio-video-inputoutput-api",children:"VIO (Video Input/Output) API"})}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"VIO"})," module provides functions for operating MIPI cameras and handling image processing. Below is a summary of the available ",(0,r.jsx)(i.code,{children:"VIO"})," APIs:"]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Function"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_init_vio_module"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Initialize VIO object"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_release_vio_module"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Release VIO object"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_open_camera"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Open MIPI camera"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_open_vps"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Open VPS (Video Processing System)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_vio_close"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Close camera or VPS module"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_vio_get_frame"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Get video frame data"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"sp_vio_set_frame"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Send video frame data to VPS"})})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"sp_init_vio_module",children:"sp_init_vio_module"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"void *sp_init_vio_module()"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Initializes the ",(0,r.jsx)(i.code,{children:"VIO"})," object and creates the handler. This function must be called before using other interfaces."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Parameters"}),(0,r.jsx)(i.br,{}),"\n","None"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns a pointer to the ",(0,r.jsx)(i.code,{children:"VIO"})," object on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"NULL"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_release_vio_module",children:"sp_release_vio_module"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"void sp_release_vio_module(void *obj)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Releases the ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the ",(0,r.jsx)(i.code,{children:"VIO"})," object obtained from the initialization interface."]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Return Type"}),(0,r.jsx)(i.br,{}),"\n","None"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_open_camera",children:"sp_open_camera"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_open_camera(void *obj, int32_t chn_num, int32_t *width, int32_t *height)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Initializes the MIPI camera connected to the RDK X3. Allows configuring the output resolution. A maximum of 5 sets of resolutions can be specified, with one set for enlargement and four for reduction."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"chn_num"}),": The number of different resolutions to output (up to 5)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"width"}),": The array for output width."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"height"}),": The array for output height."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_open_vps",children:"sp_open_vps"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_open_vps(void *obj, int32_t chn_num, int32_t src_width, int32_t src_height, int32_t *dst_width, int32_t *dst_height, int32_t *crop_x, int32_t *crop_y, int32_t *crop_width, int32_t *crop_height, int32_t *rotate)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Opens a video processing module that supports resizing, rotating, and cropping of the input image."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"chn_num"}),": The number of output images (up to 5)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"src_width"}),": The original frame width."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"src_height"}),": The original frame height."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"dst_width"}),": The array for the target output width."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"dst_height"}),": The array for the target output height."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"crop_x"}),": The array for the X coordinate of the crop region (use ",(0,r.jsx)(i.code,{children:"NULL"})," if cropping is not needed)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"crop_y"}),": The array for the Y coordinate of the crop region (use ",(0,r.jsx)(i.code,{children:"NULL"})," if cropping is not needed)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"crop_width"}),": The array for the width of the crop region (use ",(0,r.jsx)(i.code,{children:"NULL"})," if cropping is not needed)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"crop_height"}),": The array for the height of the crop region (use ",(0,r.jsx)(i.code,{children:"NULL"})," if cropping is not needed)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"rotate"}),": The array for rotation angles (",(0,r.jsx)(i.code,{children:"ROTATION_90"}),", ",(0,r.jsx)(i.code,{children:"ROTATION_180"}),", ",(0,r.jsx)(i.code,{children:"ROTATION_270"}),"), or ",(0,r.jsx)(i.code,{children:"NULL"})," if no rotation is required."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_vio_close",children:"sp_vio_close"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_vio_close(void *obj)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Closes the camera or VPS module based on the ",(0,r.jsx)(i.code,{children:"obj"})," parameter."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_vio_get_frame",children:"sp_vio_get_frame"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_vio_get_frame(void *obj, char *frame_buffer, int32_t width, int32_t height, const int32_t timeout)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Retrieves a video frame with the specified resolution. The frame data will be in the ",(0,r.jsx)(i.code,{children:"NV12"})," YUV format."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"frame_buffer"}),": A pre-allocated buffer to store the image data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"width"}),": The width of the image (must match the configured output width in ",(0,r.jsx)(i.code,{children:"sp_open_camera"})," or ",(0,r.jsx)(i.code,{children:"sp_open_vps"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"height"}),": The height of the image (must match the configured output height in ",(0,r.jsx)(i.code,{children:"sp_open_camera"})," or ",(0,r.jsx)(i.code,{children:"sp_open_vps"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"timeout"}),": The timeout for obtaining the image (in milliseconds, typically set to ",(0,r.jsx)(i.code,{children:"2000"}),")."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_vio_get_raw",children:"sp_vio_get_raw"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_vio_get_raw(void *obj, char *frame_buffer, int32_t width, int32_t height, const int32_t timeout)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Retrieves the raw image data from the camera."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"frame_buffer"}),": A pre-allocated buffer to store the raw image data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"width"}),": Set to ",(0,r.jsx)(i.code,{children:"NULL"})," when retrieving raw data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"height"}),": Set to ",(0,r.jsx)(i.code,{children:"NULL"})," when retrieving raw data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"timeout"}),": The timeout for obtaining the image (in milliseconds, typically set to ",(0,r.jsx)(i.code,{children:"2000"}),")."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_vio_get_yuv",children:"sp_vio_get_yuv"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_vio_get_yuv(void *obj, char *frame_buffer, int32_t width, int32_t height, const int32_t timeout)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Retrieves the YUV data from the ISP module of the camera."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"frame_buffer"}),": A pre-allocated buffer to store the YUV image data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"width"}),": Set to ",(0,r.jsx)(i.code,{children:"NULL"})," when retrieving ISP YUV data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"height"}),": Set to ",(0,r.jsx)(i.code,{children:"NULL"})," when retrieving ISP YUV data."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"timeout"}),": The timeout for obtaining the image (in milliseconds, typically set to ",(0,r.jsx)(i.code,{children:"2000"}),")."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"sp_vio_set_frame",children:"sp_vio_set_frame"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Function Declaration"}),(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.code,{children:"int32_t sp_vio_set_frame(void *obj, void *frame_buffer, int32_t size)"})]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Description"}),(0,r.jsx)(i.br,{}),"\n","Sends the video frame to the VPS module. The ",(0,r.jsx)(i.code,{children:"frame_buffer"})," should contain data in the ",(0,r.jsx)(i.code,{children:"NV12"})," format, and the resolution must match the one configured in ",(0,r.jsx)(i.code,{children:"sp_open_vps"}),"."]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Parameters"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"obj"}),": The pointer to the initialized ",(0,r.jsx)(i.code,{children:"VIO"})," object."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"frame_buffer"}),": The image data in ",(0,r.jsx)(i.code,{children:"NV12"})," format."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"size"}),": The size of the frame."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.strong,{children:"Return Type"})}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"0"})," on success."]}),"\n",(0,r.jsxs)(i.li,{children:["Returns ",(0,r.jsx)(i.code,{children:"-1"})," on failure."]}),"\n"]})]})}function a(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);
"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[92155],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var i=n(96540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},30544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Advanced_development/linux_development/hardware_unit_test/test_environment_reliability","title":"Environment Reliability Testing (Fixed Frequency)","description":"Test Method","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/07_Advanced_development/02_linux_development/hardware_unit_test/test_environment_reliability.md","sourceDirName":"07_Advanced_development/02_linux_development/hardware_unit_test","slug":"/Advanced_development/linux_development/hardware_unit_test/test_environment_reliability","permalink":"/rdk_doc/en/Advanced_development/linux_development/hardware_unit_test/test_environment_reliability","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1757580192000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"6.3 Hardware Unit Testing","permalink":"/rdk_doc/en/Advanced_development/linux_development/hardware_unit_test/"},"next":{"title":"EMMC Related Testing","permalink":"/rdk_doc/en/Advanced_development/linux_development/hardware_unit_test/test_emmc"}}');var r=n(74848),o=n(28453);const s={sidebar_position:1},d="Environment Reliability Testing (Fixed Frequency)",l={},a=[{value:"Test Method",id:"test-method",level:2},{value:"Test Criteria",id:"test-criteria",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"environment-reliability-testing-fixed-frequency",children:"Environment Reliability Testing (Fixed Frequency)"})}),"\n",(0,r.jsx)(t.h2,{id:"test-method",children:"Test Method"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Go to the ",(0,r.jsx)(t.code,{children:"test_tools/01_cpu_bpu_ddr"})," folder and execute the ",(0,r.jsx)(t.code,{children:"sh cpubpu.sh &"})," script to perform stress testing on the ",(0,r.jsx)(t.code,{children:"bpu"})," and ",(0,r.jsx)(t.code,{children:"cpu"}),". The current configuration starts dual ",(0,r.jsx)(t.code,{children:"bpu"})," running at a load of up to 99%, and ",(0,r.jsx)(t.code,{children:"cpu"})," at a load of over 90%, with random memory reads and writes."]}),"\n",(0,r.jsx)(t.li,{children:"The script allows for customization of the runtime and intensity of the load."}),"\n",(0,r.jsx)(t.li,{children:"Open a terminal to record the running log."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"test-criteria",children:"Test Criteria"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"High temperature: 45\xb0, low temperature: -10\xb0, normal temperature. The program should execute normally without experiencing restarts or hangs."}),"\n",(0,r.jsxs)(t.li,{children:["The log should not contain any abnormal prints such as ",(0,r.jsx)(t.code,{children:"fail"}),", ",(0,r.jsx)(t.code,{children:"error"}),", ",(0,r.jsx)(t.code,{children:"timeout"}),", etc."]}),"\n",(0,r.jsx)(t.li,{children:"The system should be able to run stably for 48 hours."}),"\n",(0,r.jsx)(t.li,{children:"During the running process, it is necessary to monitor the CPU and BPU usage, ensuring that the CPU usage is close to 90% and the BPU stress is close to 90%."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);
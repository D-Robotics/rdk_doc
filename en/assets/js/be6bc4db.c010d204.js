"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[46547],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(96540);const r={},t=s.createContext(r);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(t.Provider,{value:n},e.children)}},45564:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_x3/bpu_api","title":"BPU (Algorithm Inference Module) API","description":"The BPU API provides the following interfaces:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Basic_Application/04_multi_media/multi_media_api/cdev_multimedia_api_x3/bpu_api.md","sourceDirName":"03_Basic_Application/04_multi_media/multi_media_api/cdev_multimedia_api_x3","slug":"/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_x3/bpu_api","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_x3/bpu_api","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1753332369000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"DISPLAY API","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_x3/display_api"},"next":{"title":"SYS (Module Binding) API","permalink":"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/cdev_multimedia_api_x3/sys_api"}}');var r=i(74848),t=i(28453);const d={sidebar_position:5},l="BPU (Algorithm Inference Module) API",c={},o=[{value:"sp_init_bpu_module",id:"sp_init_bpu_module",level:2},{value:"sp_bpu_start_predict",id:"sp_bpu_start_predict",level:2},{value:"sp_init_bpu_tensors",id:"sp_init_bpu_tensors",level:2},{value:"sp_deinit_bpu_tensor",id:"sp_deinit_bpu_tensor",level:2},{value:"sp_release_bpu_module",id:"sp_release_bpu_module",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"bpu-algorithm-inference-module-api",children:"BPU (Algorithm Inference Module) API"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"BPU"})," API provides the following interfaces:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Function"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sp_init_bpu_module"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Initialize the algorithm inference module and create an inference task"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sp_bpu_start_predict"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Perform AI algorithm inference and get the inference result"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sp_release_bpu_module"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Close the inference task"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sp_init_bpu_tensors"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Allocate tensor memory"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sp_deinit_bpu_tensor"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Destroy tensor memory"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"sp_init_bpu_module",children:"sp_init_bpu_module"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Prototype\u3011"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"bpu_module *sp_init_bpu_module(const char *model_file_name)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Description\u3011"})}),"\n",(0,r.jsxs)(n.p,{children:["Open the algorithm model specified by ",(0,r.jsx)(n.code,{children:"model_file_name"})," and initialize an algorithm inference task."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Parameters\u3011"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"model_file_name"}),": Algorithm model file, which needs to be converted by D-Robotics AI algorithm toolchain or trained fixed-point model."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Return Type\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"AI algorithm inference task object."}),"\n",(0,r.jsx)(n.h2,{id:"sp_bpu_start_predict",children:"sp_bpu_start_predict"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Prototype\u3011"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"int32_t sp_bpu_start_predict(bpu_module *bpu_handle, char *addr)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Description\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"Passes in image data to complete AI algorithm inference and returns the algorithm result."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Parameters\u3011"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bpu_handle"}),": Object for the AI inference task."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addr"}),": Input address of the image data."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Return Type\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"None."}),"\n",(0,r.jsx)(n.h2,{id:"sp_init_bpu_tensors",children:"sp_init_bpu_tensors"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Prototype\u3011"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"int32_t sp_init_bpu_tensors(bpu_module *bpu_handle, hbDNNTensor *output_tensors)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Description\u3011"})}),"\n",(0,r.jsxs)(n.p,{children:["Initializes and allocates memory for the passed-in ",(0,r.jsx)(n.code,{children:"tensor"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Parameters\u3011"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bpu_handle"}),": Object for the AI inference task."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"output_tensors"}),": Address of the ",(0,r.jsx)(n.code,{children:"tensor"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Return Type\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"None."}),"\n",(0,r.jsx)(n.h2,{id:"sp_deinit_bpu_tensor",children:"sp_deinit_bpu_tensor"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Prototype\u3011"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"int32_t sp_deinit_bpu_tensor(hbDNNTensor *tensor, int32_t len)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Description\u3011"})}),"\n",(0,r.jsxs)(n.p,{children:["Release and reclaim memory for the input ",(0,r.jsx)(n.code,{children:"tensor"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Parameters\u3011"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tensor"}),": Pointer to the ",(0,r.jsx)(n.code,{children:"tensor"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"len"}),": Length of the ",(0,r.jsx)(n.code,{children:"tensor"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Return Type\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"None."}),"\n",(0,r.jsx)(n.h2,{id:"sp_release_bpu_module",children:"sp_release_bpu_module"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Prototype\u3011"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"int32_t sp_release_bpu_module(bpu_module *bpu_handle)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Function Description\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"Release the BPU module."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Parameters\u3011"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"bpu_handle"}),": BPU module object"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u3010Return Type\u3011"})}),"\n",(0,r.jsx)(n.p,{children:"Return 0 if successful, -1 if failed."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);